https://technet.microsoft.com/en-us/library/bb491009.aspx?f=255&MSPPError=-2147217396
Taskkill


taskkill /im calc.exe

If you don't want to see the error message, then redirect stderr to nul using 2>nul. If you don't want to see the success message either, then redirect stdout to nul using >nul.

taskkill /im calc.exe >nul 2>nul

If you want to take action depending on the outcome, then you can use the conditional && and || operators for success and failure.

taskkill /im calc.exe >nul 2>nul && (
  echo calc.exe was killed
) || (
  echo no process was killed
)


A more readable and simpler command is something like this:

taskkill /F /FI "IMAGENAME eq calc.exe"

This methodology never returns an error code if the process isn't running where the /IM switch WILL return an error if the process is not running. You can also use wild cards like:

taskkill /F /FI "IMAGENAME eq calc*.exe" to kill any process that starts with 'calc' and ends with '.exe' in the name.



or

TSKILL PID
Have on mind that processName should not have the .exe suffix and is limited to 18 characters.

Another option is WMIC :

wmic Path win32_process Where "Caption Like 'MyProcess.exe'" Call Terminate
wmic offer even more flexibility than taskkill .With wmic Path win32_process get you can see the available fileds you can filter.



You can do this with 'taskkill'. With the /IM parameter, you can specify image names. Example:

taskkill /im somecorporateprocess.exe
You can also do this to 'force' kill:

taskkill /f /im somecorporateprocess.exe



taskkill /f /im "devenv.exe"
this will forcibly kill the pid with the exe name "devenv.exe"


