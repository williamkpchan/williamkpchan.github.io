networkTips=[
'<h2>5 Tools to Manage Multiple Network Connection Profiles</h2>\nEvery home or work network you connect to can conceivably have different settings for the connection. \nAt home you might <a href="https://www.raymond.cc/blog/how-do-i-know-if-someone-is-using-my-wireless-network-wifi/">use a WiFi connection</a> with default or automatic settings, for work you might have a manually set IP address and gateway or <a href="https://www.raymond.cc/blog/test-change-dns-servers-quickly-dns-jumper/">custom DNS servers</a>. \n\n DNS Servers:\nfec0:0:0:ffff::1%1\nfec0:0:0:ffff::2%1\nfec0:0:0:ffff::3%1\n\nEach different network configuration you come across requires the settings in Windows to be adjusted to match. \nWhile this isn&#8217;t a major problem because Windows allows you to change these types of settings, it isn&#8217;t the quickest thing to get at and change regularly.\nManual reconfiguration each time through <a href="https://www.raymond.cc/blog/repair-xp-and-vista-internet-connection-problems-with-icr/">Windows Network Connections</a> is both time consuming and inefficient. \nIt requires you to remember each individual setting or the network might not connect properly. \nAn easy solution is being able to create different network profiles for different scenarios, so you can save <a href="https://www.raymond.cc/blog/6-free-websites-to-map-ip-addresses-to-geographical-locations/">IP address</a>, DNS, default gateway and other settings for each network connection you encounter. \nWhen you need to change to a different network, a different profile can easily be applied which changes all the required settings automatically.\nHere are 5 free tools for you to create and apply network profiles.\n\n<h3>1. TCP/IP Manager</h3>\nTCP/IP Manager has a good mix of the ability to easily save network settings into a series of profiles and enough features and functions to cater for most users. \nThe program is open source and available in both setup installer and portable versions. \nMake sure to get the correct 32-bit or 64-bit version for your system.\n<img src="https://img.raymond.cc/blog/wp-content/uploads/2012/05/tcpip_manager.png">\n\nAfter launching the program click Create a new profile and give it a name. \nChoose a network adapter from the drop down and configure the IP address, subnet, gateway and DNS servers. \nAutomatic options are also available like in Windows. \nOptionally go to the Profile settings tab and choose to show the profile in the tray menu and give it a keyboard shortcut so you can launch the profile by a key combination. \nFinally click Save current profile. \nWhen you want to launch a profile click Apply in the window, press the hotkey combination or select from the tray icon context menu.\nProxy servers can be configured from the corresponding tab, advanced settings include changing the computer name, changing the workgroup name and possibly a unique feature of allowing MAC spoofing on the network adapter. \nTCP/IP Manager was quite reasonable on memory usage consuming around 4MB while sitting in the tray.\n<a href="https://www.raymond.cc/blog/download/did/2089/" rel="nofollow">Download TCP/IP Manager</a>\n\n<h3>2. IP Shifter</h3>\nIf you just want a nice and simple network connection changer, IP Shifter is relatively easy to use and doesn&#8217;t require tons of knowledge to configure. \nIt also has a portable version so installation isn&#8217;t necessary either.\n<img src="https://img.raymond.cc/blog/wp-content/uploads/2012/05/ip_shifter.png">\n\nStart the program, click the button to create a new profile and give it a name. \nThe standard options allow you to select the network adapter from the drop down and then obtain an automatic or manual IP address and DNS server. \nThis window is similar to the Windows Internet Protocol 4 Properties dialog and has boxes for IP address, subnet mask, gateway and DNS servers. \nProxies for Internet Explorer and Firefox can be setup by clicking on Settings and the check box near the bottom.\nOnce all the profiles are setup you can switch between them by selecting and clicking Apply in the main window or minimize the program to the tray and right click on the tray icon. \nIP Shifter used around 3MB of memory while in the tray. \nA couple of useful extras are in the Tools menu to Ping an address, scan the LAN for computers and obtain your public IP address.\n<a href="https://www.raymond.cc/blog/download/did/3631/" rel="nofollow">Download IP Shifter</a>\n\n<h3>3. NetSetMan</h3>\nIn contrast to IP Shifter, NetSetMan is loaded with tons of options and may be a bit too much for the average user. \nFor geeks and advanced users though, it&#8217;s one of the most feature rich network profiling tools around. \nOnly a setup installer is available but it can create a portable version because the program can be extracted to the folder of your choice.\n<img src="https://img.raymond.cc/blog/wp-content/uploads/2012/05/netsetman.png">\n\nMost of the settings can be left alone if you only want a simple IP and DNS changer. \nChoose a renamable SET tab to edit the profile and enter enter the IP, gateway and DNS information or leave what you don&#8217;t need on automatic. \nUse the Activate button or the tray context menu to choose between them. \nThe IP+ button takes you to an advanced settings window where extra functions such as routing tables, DNS suffixes and expert settings like running Windows ipconfig commands are available.\nOther more advanced networking options like a built in WiFi connection manager, computer name and workgroup changer, create network drives, append to the HOSTS file and a dedicated IPv6 settings window could all prove useful. \nOther options like changing the default printer, changing dozens of system settings or running a script/program are nice additions but not strictly necessary. \nNetSetMan uses around 8MB of memory in the background. \nThe free personal use only version cannot change proxies, browser home pages and network domains.\n<a href="https://www.raymond.cc/blog/download/did/3632/" rel="nofollow">Download NetSetMan</a>\n\n<h3>4. Net Profiles Mod</h3>\nThis is a modified and forked version of the discontinued Net Profiles tool which has not been updated since 2011. \nLuckily this open source modded version is still in active development so there&#8217;s a fair chance bugs and issues will be fixed in future.\n<img src="https://img.raymond.cc/blog/wp-content/uploads/2012/05/net_profiles_mod.png">\n\nSetting up a new profile is easy and for basic usage you only have to give it a name, select a network (if there are multiple) and enter the IP and DNS details manually if required. \nUse the Get Current Settings button to create a profile of your current network configuration. \nAdditional options include proxies, default browser homepage, mapped drives, default printer, running an application, desktop resolution/wallpaper and connection to a specific SSID. \nFile &gt; Create Desktop Shortcut allows launching a profile via shortcut without having the program running in the background.\nThere are a couple of issues we had with Net Profiles Mod. \nFirstly, our WiFi adapter was not recognized unless it was connected to a wireless network. \nSecondly, you cannot obtain an IP address automatically through DHCP and set the DNS servers manually, or vice versa. \nThis is easily possible through Windows and a drawback if you want to change the DNS but leave the IP alone.\n<a href="https://www.raymond.cc/blog/download/did/3633/" rel="nofollow">Download Net Profiles Mod</a>\n\n<h3>5. Argon Network Switcher</h3>\nArgon Network Switcher is a middle of the road type of tool in terms of features. \nIt has enough to satisfy all but the most advanced users but not too many to confuse people.\n<img src="https://img.raymond.cc/blog/wp-content/uploads/2012/05/argon_network_switcher.png">\n\nUsage is similar to the other tools here. \nClick New to create a new profile, enter a name, select the network adapter and then enter the IP, subnet, gateway and DNS addresses. \nClick Save to add the profile. \nAdditional options include assigning a specific WiFi SSID, proxy settings, map a drive, set the default printer, start and stop system services, run scripts and applications and also disabling a specific network adapter on running the profile. \nAn interesting feature is Autorun which leaves it up to the program to determine the best profile to launch.\nWe did notice a couple of bugs during usage. \nOne was the WiFi SSID profiles are not displayed for everyone so you can&#8217;t associate a wireless SSID with the network profile. \nAnother was using the Test button in the Drive Map tab freezes the program. \nHowever, mounting and unmounting networked drives does work fine. \nNetwork Switcher consumes about 10-15MB of RAM when minimized to the tray.\n<a href="https://www.raymond.cc/blog/download/did/3634/" rel="nofollow">Download Argon Network Switcher</a>\n<em>Final Note: </em>We did also look at a few other network connection profiling tools, one we almost included was <a href="https://www.raymond.cc/blog/download/did/3635/" rel="nofollow">Eusing Free IP Switcher</a>. \nThis tool is like an easier to use version of NetSetMan but a major issue is a donate popup nag every time the program launches. \nThis is a shame as it has a good blend of ease of use and features to make it useful.\n\n',
'<h2>开源的社区网盘</h2>\n在gitee上发现了开源的 KodExplorer 可道云（https://gitee.com/kalcaddle/KODExplorer），发现非常适合作为小型文件共享，也很适合作为社区网盘。\n\n它不需要安装任何程序或者插件，也不需要特殊的软件或者权限，只要有一个浏览器（主流的网络浏览器都可以，推荐chrome或firefox），就可以在线查看pdf、图片，编辑文件，共享文件等，使用方式和windows的文件管理器类似，无需学习就可以掌握。\n\nhttps://www.micropython.org.cn/pan\n\n\n',
'<h2>Find the IP address</h2>\nWindows\nType in “ipconfig” and hit Enter.\nLook for the line that reads “IPv4 Address.”\n\n192.168.0.100\n\nFind the IP address of an iPad or Android Tablet\n\nGo to setting on your iPad\nSelect ” WiFi ” from the sidebar.\nTap on the arrow next to the network name.\nYour IP address will be displayed to the right of "IP address"\n\n',
'<h2>Accessing WAMP From Computers on Your LAN</h2>\n<a href="https://john-dugan.com/access-wamp-from-lan-computers/" class="whitebut ">Accessing WAMP From Computers on Your LAN</a>\n\n<a href="https://stackoverflow.com/questions/24005828/how-to-enable-local-network-users-to-access-my-wamp-sites" class="whitebut ">enable local network users to access my WAMP sites</a>\n\n<a href="https://stackoverflow.com/questions/36810669/why-wamp-server-put-online-offline-option-is-missing/36825283" class="whitebut ">wamp server put online/ offline</a>\n\nRight click Wampmanager -> WAMPSetting -> Menu Item: Online/Offline\n\nIf you click it so there is a Tick beside it, you will see the Online/Offline menu on the left click menu.\n\nHowever it was made optional as its use is defunct.\n\nYou should create Virtual Hosts for each of your projects, then you can amend each of those individually to control the Apache access rules.\n\nIn fact in WAMPServer 3 or greater, there is a Virtual Host defined for localhost so this old Online/Offline process wont actually do what you want.\n\nYou now have to go to the wamp\bin\apache\apache{version}\conf\extra\httpd-vhosts.conf file and manually amend that entry\n\n&lt;VirtualHost *:80>\n    ServerName localhost\n    DocumentRoot D:/wamp/www\n    &lt;Directory  "D:/wamp/www/">\n        Options Indexes FollowSymLinks MultiViews\n        AllowOverride All\n        Require all granted                  #&lt;-- changed line\n    &lt;/Directory>\n&lt;/VirtualHost>\n\nThis file can be edited using the wampmanager menus like this\nwampmanager -> Apache -> httpd-vhosts.conf\n\nHowever it is not recommended to allow this sort of access to localhost. It is better to create a Virtual Hosts for each of your projects eg\n\n&lt;VirtualHost *:80>\n    ServerName localhost\n    DocumentRoot D:/wamp/www\n    &lt;Directory  "D:/wamp/www/">\n        Options Indexes FollowSymLinks MultiViews\n        AllowOverride All\n        Require local\n    &lt;/Directory>\n&lt;/VirtualHost>\n\n&lt;VirtualHost *:80>\n    ServerName project1.dev\n    DocumentRoot D:/wamp/www/project1\n    &lt;Directory  "D:/wamp/www/project1">\n        Options Indexes FollowSymLinks MultiViews\n        AllowOverride All\n        Require all granted\n    &lt;/Directory>\n&lt;/VirtualHost>\n\n',
'<h2>Setup a Virtual Host</h2>\n<a href="https://john-dugan.com/wamp-vhost-setup/" class="whitebut ">Setup a Virtual Host on WAMP in 3 Steps</a>\n<a href="https://www.techrepublic.com/blog/smb-technologist/create-virtual-hosts-in-a-wamp-server/" class="whitebut ">Create virtual hosts in a WAMP server</a>\n\n<a href="http://forum.wampserver.com/read.php?2,146746" class="whitebut ">WAMPServer 3 Create a Virtual Host, the easy way</a>\n\n',
'<h2>FreeProxy</h2>\n<a href="https://www.softpedia.com/get/Internet/Servers/Proxy-Servers/FreeProxy.shtml" class="whitebut ">FreeProxy</a>\n\n\n',
'<h2>Sci-Hub 用上了分布式网络</h2>\n在网站域名屡次被撤销之后， Sci-Hub 创始人 Alexandra Elbakyan 在分布式域名网络 Handshake 上注册了新的网站。\n\n现在，每个用户都可以直接通过服务门户和 NextDNS 直接访问 Sci-Hub。\n\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9mkBqdBCp94269UtFWSXwVKf5bzAj8gh8YzGa7V5KvCricAp7ViaI0O9qrEv3Q8s5YrVOHiafdAdHKQ/640">\n\nNextDNS：https://learn.namebase.io/starting-from-zero/how-to-access-handshake-sites#level-3-dns\nHNS 网关 http://sci-hub.hns.hns.to/\n这些年来，一直是 Alexandra Elbakyan 在维护 Sci-Hub，目前所有用户只能通过俄罗斯的 Yandex 和比特币赞助网站的运营。\n\n此前，Sci-Hub 被多次撤销域名，推特账户又被封禁且无法申诉，传统域名系统显然不那么满足这个「盗版学术论文数据库」的需求，能够对抗审查的 DNS 成为 Sci-Hub 保持可访问状态的方法之一。\nHandshake 工作原理Tieshun Roquerre 介绍说，Handshake 实际上是一个分布式的域名服务器。\n它不使用 web 标准证书颁发机构来验证用户与服务器的连接，而是存储对在其系统中注册的网站的 IP 地址的引用。\n这样一来，如果证书颁发机构公司试图通过旧版系统审查 Sci-Hub 的域名，那么想要访问网站的人仍然可以通过 Handshake 的记录访问。\nNamebase 则是为用户提供访问 Handshake 网络的平台，这个名字对于国内开发者来说不算陌生。\n\n去年，关于「Namebase 羊毛现金福利」的消息一度引起热议，「满足条件的 GitHub 开发者可以获得大约 4200 个 HNS 代币的奖励」，折合人民币 5000 元左右，还有成功领取者写出了「从天上接馅饼」的教程。\nNamebase CEO Tieshun Roquerre 介绍说：「DNS 就像互联网的电话簿，电话簿中的地址是服务器 IP 地址。\nDNS 的创建是为了给 IP 地址提供人类可读的名称，因此在这一平台上，用户可以通过 Handshake 找到 IP 地址，而不是通过证书颁发机构。\n」Roquerre 提到：「如果你的服务器级别受到限制，则可以切换服务器。\n但如果你的域名被删除，就没人能访问你的网站了。\n\n只要名称完好无损，就可以将其指向任何服务器。\n」即使 band 网站找到了一个新域名，但用户也不确定其真实性（例如 Sci-Hub 也经常被冒名顶替）。\n要注册一个 Handshake 域名，任何人都可以提出一个网站名称，并在 Handshake 的市场上用其同名 HNS token 对该网站进行竞标。\n据外媒 CoinDesk 统计，目前共有 6818 个 Handshake 域名处于活跃使用状态，已注册的域名达到了 375000 个。\n数据显示，其市场交易量每月平均增长 60%，近期将突破 14 万美元。\n像 Handshake 这样的分布式（decentralized）域名系统，可能会成为分布式网络的标志性胜利。\n该项目是众多所谓「Web 3.0」应用程序的一部分，当然，「Web 3.0」这个概念还存在很多争议，比如创建某些未经审查的互联网搜索，是否会带来更多的隐患？正如 Sci-Hub 的经历所证明的问题一样，分布式的网络是出于去平台化的担忧而构建的。\n随着互联网访问接入点越来越集中在「少数玩家」的手上，最近也有一些应用受到了 Web 服务器提供、应用商店和 DNS 证书颁发机构的审查。\n参考链接：https://www.nasdaq.com/articles/pirated-academic-database-sci-hub-is-now-on-the-uncensorable-web-2021-01-11https://www.coindesk.com/pirated-academic-sci-hub-handshake\n\n',
'<h2>create simple file server</h2>\nC:\Windows\System32\nrun ipconfig to find ip address\n\n<a href="https://stackoverflow.com/questions/15328623/simple-file-server-to-serve-current-directory" class="whitebut ">Simple file server to serve current directory</a>\n\npython -m SimpleHTTPServer 8000\nwill serve the contents of the current working directory over HTTP on port 8000.\n\nIf you use Python 3, you should instead write\npython -m http.server 8000\n\nacer:\nhttp://192.168.128.93:8000/\n\nFor Node, there\'s http-server:\n$ npm install -g http-server\n$ http-server Downloads -a localhost -p 8080\nStarting up http-server, serving Downloads on port: 8080\nHit CTRL-C to stop the server\n\n',
'<h2>enable FTP through Chrome on all Windows devices</h2>\n\nIn Chrome 81, FTP support is disabled by default, but you can enable it using the # enable-ftp flag.\n\nOpen Chrome and type “chrome://flags” in the address bar.\nOnce in the flags area, type “enable-ftp” in the search bar stating “search flags”.\nWhen you see the “Enable support for FTP URLs” option tap where it says “Default”.\nTap “Enable” option.\nHit “Relaunch Now” option at the bottom of the page.\n\n\n<b>To transfer files via FTP using your web browser:</b>\n\nFrom the File menu, choose Open Location....\nIn the "Location" field, type a URL like the following:\n  ftp://username@name-of-server\nFor example, if your username is dvader, and you want to reach your account on deathstar.empire.gov, enter:\n\n  ftp://dvader@deathstar.empire.gov\nNote: Do not close the URL with a /, or you will connect to the root directory rather than your home directory.\n\nYou will be prompted for your password.\nAfter you supply the password, you will see the contents of your home directory on the remote machine.\nTo change directories, click the appropriate yellow folder icon.\nTo download a file, drag the file from the browser window to the desktop.\nYou can also double-click the filename, and you will be prompted to either save or open the file.\nTo upload a file, drag the file from your hard drive to the browser window.\n\n\n',
'<h2>Net Command Syntax</h2>\nThe command takes the following general form:\nnet [accounts | computer | config | continue | file | group | help | helpmsg | localgroup | name | pause | print | send | session | share | start | statistics | stop | time | use | user | view]\nNet Command Options\n<table>\n<tr><td><b>Option</b></td><td><b>Explanation</b></td></tr>\n<tr><td><b>net</b></td><td>Execute the net command alone to show information about how to use the command which, in this case, is simply a list of the net subset commands.</td></tr>\n<tr><td><b>accounts</b></td><td>The net accounts command is used to set password and logon requirements for users. For example, the net accounts command can be used to set the minimum number of characters that users can set their password to. Also supported is password expiration, minimum number of days before a user can change their password again, and the unique password count before the user can use the same old password.</td></tr>\n<tr><td><b>computer</b></td><td>The net computer command is used to add or remove a computer from a domain.</td></tr>\n<tr><td><b>config</b></td><td>Use the net config command to show information about the configuration of the<em>Server</em> or<em>Workstation</em> service.</td></tr>\n<tr><td><b>continue</b></td><td>The net continue command is used to restart a service that was put on hold by the net pause command.</td></tr>\n<tr><td><b>file</b></td><td>Net file is used to show a list of open files on a server. The command can also be used to close a shared file and remove a file lock.</td></tr>\n<tr><td><b>group</b></td><td>The net group command is used to add, delete, and manage global groups on servers.</td></tr>\n<tr><td><b>localgroup</b></td><td>The net localgroup command is used to add, delete, and manage local groups on computers.</td></tr>\n<tr><td><b>name</b></td><td>Net name is used to add or delete a messaging alias at a computer. The net name command was removed in conjunction with the removal of net send beginning in Windows Vista. See the net send command for more information.</td></tr>\n<tr><td><b>pause</b></td><td>The net pause command puts on hold a Windows resource or service.</td></tr>\n<tr><td><b>print</b></td><td>Net print is used to display and manage network print jobs. The net print command was removed beginning in Windows 7. According to Microsoft, the tasks performed with net print can be performed in Windows 10, Windows 8, and Windows 7 using the<em>prnjobs.vbs</em> and other cscript commands, Windows PowerShell cmdlets, or Windows Management Instrumentation (WMI).</td></tr>\n<tr><td><b>send</b></td><td>\n<a href="https://www.lifewire.com/net-send-2618095" data-component="link" data-source="inlineLink" data-type="internalLink" data-ordinal="1">Net send</a> is used to send messages to other users, computers, or net name created messaging aliases. The net send command is not available in Windows 10, Windows 8, Windows 7, or Windows Vista but the\n<a href="https://www.lifewire.com/msg-command-2618093" data-component="link" data-source="inlineLink" data-type="internalLink" data-ordinal="2">msg command</a> accomplishes the same thing.</td></tr>\n<tr><td><b>session</b></td><td>The net session command is used to list or disconnect sessions between the computer and others on the network.</td></tr>\n<tr><td><b>share</b></td><td>The net share command is used to create, remove, and otherwise manage shared resources on the computer.</td></tr>\n<tr><td><b>start</b></td><td>The net start command is used to start a network service or list running network services.</td></tr>\n<tr><td><b>statistics</b></td><td>Use the net statistics command to show the network statistics log for the<em>Server</em> or<em>Workstation</em> service.</td></tr>\n<tr><td><b>stop</b></td><td>The net stop command is used to stop a network service.</td></tr>\n<tr><td><b>time</b></td><td>Net time can be used to display the current time and date of another computer on the network.</td></tr>\n<tr><td><b>use</b></td><td>The<a href="https://www.lifewire.com/net-use-command-2618096" data-component="link" data-source="inlineLink" data-type="internalLink" data-ordinal="1">net use command</a> is used to display information about shared resources on the network that you\'re currently connected to, as well as connect to new resources and disconnect from connected ones.\nIn other words, the net use command can be used to show the shared drives you\'ve mapped to as well as allow you to manage those mapped drives.</td></tr>\n<tr><td><b>user</b></td><td>The<a href="https://www.lifewire.com/net-user-command-2618097" data-component="link" data-source="inlineLink" data-type="internalLink" data-ordinal="1">net user command</a> is used to add, delete, and otherwise manage the users on a computer.</td></tr>\n<tr><td><b>view</b></td><td>Net view is used to show a list of computers and network devices on the network.</td></tr>\n<tr><td><b>helpmsg</b></td><td>The net helpmsg is used to display more information about the numerical network messages you might receive when using net commands. For example, when executing\n<b>net group</b> on a standard Windows workstation, you\'ll receive a\n<em>3515</em> help message. To decode this message, type\n<b>net helpmsg 3515</b> which displays\n<em>"This command can be used only on a Windows Domain Controller."</em> on screen.</td></tr>\n<tr><td><b>/?</b></td><td>Use the\n<a href="https://www.lifewire.com/help-switch-2625896" data-component="link" data-source="inlineLink" data-type="internalLink" data-ordinal="1">help switch</a> with the net command to show detailed help about the command\'s several options.</td></tr>\n</tbody>\n</table>\nSave to a file whatever a <strong>net </strong>command shows on screen using a <a href="https://www.lifewire.com/redirection-operator-2625979" data-component="link" data-source="inlineLink" data-type="internalLink" data-ordinal="1">redirection operator</a> with the command. Learn&nbsp;<a href="https://www.lifewire.com/how-to-redirect-command-output-to-a-file-2618084" data-component="link" data-source="inlineLink" data-type="internalLink" data-ordinal="2">how to redirect command output to a file</a> or see&nbsp;our list of&nbsp;<a href="https://www.lifewire.com/command-prompt-tricks-and-hacks-2618104" data-component="link" data-source="inlineLink" data-type="internalLink" data-ordinal="3">command prompt tricks</a>&nbsp;for more tips.\nOnly in Windows NT and Windows 2000 was there a difference in the <strong>net </strong>command and the <strong>net1</strong> command. The net1 command was made available in these two operating systems as a temporary fix for a Y2K problem that affected the <strong>net </strong>command.\n',
'<h2>  Net Command Examples  </h2>\nnet view\nThis is one of the simplest net commands that lists all the networked devices.\nnet share Downloads=Z:\Downloads&nbsp;/GRANT:everyone,FULL\nIn the above example, I\'m sharing the&nbsp;<em>Z:\Downloads</em>&nbsp;folder with&nbsp;everyone&nbsp;on the network and giving all of them&nbsp;full&nbsp;read/write access. You could modify this one by replacing&nbsp;<em>FULL</em>&nbsp;with&nbsp;<em>READ</em>&nbsp;or&nbsp;<em>CHANGE</em>&nbsp;for those rights only, as well as replace&nbsp;<em>everyone</em>&nbsp;with a specific username to give share access to just that one user account.\nnet accounts /MAXPWAGE:180\nThis example of the net accounts command forces a user\'s password to expire after 180 days. This number can be anywhere from&nbsp;<em>1</em>&nbsp;to&nbsp;<em>49,710</em>, or <em>UNLIMITED</em>&nbsp;can be used so that the password never expires. Default is 90 days.\nnet stop&nbsp;"print spooler"\nThe above net command example is how you\'d stop the Print Spooler service from the command line.&nbsp;Services can also be started, stopped, and restarted via the Services graphical tool in Windows (services.msc), but using the net stop command lets you control them from places like Command Prompt and <a href="https://www.lifewire.com/bat-file-2619796" data-component="link" data-source="inlineLink" data-type="internalLink" data-ordinal="1">BAT&nbsp;files</a>.\n\nnet start\nExecuting the net start command without any options following it (e.g. net start "print spooler")&nbsp;is useful if you want to see a list of currently running services. This list can be helpful when managing services because you don\'t have to leave the command line to see which services are running.\n\n',
'<h2>send a pop up message to another computer</h2>\n<h3>Send a Message to Another PC on a Local Network</h3>\nrun cmd\ntype <b>Net send</b> followed by the name of the computer to which you wish to send the message. Next, enter the message.\n\nmsg /SERVER:DestinationPC * /TIME:60 “This is the message to be sent to a PC named DestinationPC and closes in 60 seconds."\n\nYou will need to replace DestinationPC with the name of the desired PC (you can find this in the list of computers that are currently sharing your network, if you don\'t already know the PC name).\nNow, replace the value for TIME with how long you want the message to appear on the other screen for. For example TIME:30 for 30seconds\nThen replace the text between the quotation marks with the message that you want to send.\nFinally, you can hit enter, and the message will be sent.\n\n<h3>to list all computers in a windows wi-fi network</h3>\nrun cmd\n<b>net view</b> will probably show most of them.\n\nPing the server if you know or your gateway.\nType the command <b>arp -a</b>\nIt will usually list down all the IP\'s and Computers with their Mac Addresses.\n\nIf you want to use a GUI tool. I recommend <b>IPScan</b>.\nAlthough it is a light application (433KB), it is freeware that\'s always worked for me.\nYou can also use another GUI Tool, Advance IP Scanner.\n\n<h3>how do I send a pop up message</h3>\nTo send a popup message:\nSelect one or more users from the user list.\nIssue the Send popup message command by right-clicking on any selected user and selecting the \'Popup Message\' menu item.\n\nThe \'Send popup message\' window will appear.\nEnter message text and click on the \'Send\' button.\n\n<h3>can I send a message to an IP address? </h3>\nThe IP Message no longer works.\nThe idea behind it is that you type a message and sort of password protect using some IP address.\nOnly the person with that IP address will be able to see the message.\n\nLikewise, people ask, how can I see messages from another computer using CMD?\nStart command prompt\nType the command as follows:\nHit enter and voila, the message is sent.\nHow can I communicate with another computer on the same network?\n\nMethod 1 Sharing Internet from Windows\n\nConnect the two computers with an Ethernet cable.\nOpen Start.\nOpen Control Panel.\nClick Network and Internet.\nClick Network and Sharing Center.\nClick Change adapter settings.\nSelect both the Wi-Fi connection and the Ethernet connection.\nRight-click the Wi-Fi connection.\n\nAlternatives for Older Versions of Windows\nAlternative 1\nHere is the first alternative way of sending messages that may work if you have an older version of Windows. Here\'s how:\n\nClick Start > Run.\nType cmd, and press Enter.\nIn the window that opens, type Net send followed by the name of the computer to which you wish to send the message.\nNext, enter the message. For example, the format should resemble "Net send PC01 can you read this message?"\nAlternative 2\nIt is easy to send messages through cmd prompt to other systems here is the answer first we have to set our systems messenger ACTIVE. For it, follow these steps:\n\n1. Go to RUN\n2. Type services.msc\n3. Scroll down and right click on MESSENGER\n4. Select PROPERTIES\n5. Then for enabling it go to STARTUP TYPE and select AUTOMATIC\n6. Then OK\nAnd this should be performed on both sides (SENDER & RECEIVER). After that if you want to send message then do the following steps:\n\n1. Go to cmd prompt\n2. Type syntax as follows: net send <ipaddress of reciever> <message to be send>\nEx:\n\nnet send 172.16.6.99 "hello"\n\n',
'<h2>FileZilla</h2>\n<a href="https://filezilla-project.org/download.php?show_all=1" class="whitebut ">downoad filezilla client</a>\n\n<a href="https://filezilla-project.org/download.php?type=server" class="whitebut ">Download FileZilla Server for Windows</a>\n<a href="https://dl4.cdn.filezilla-project.org/server/FileZilla_Server-0_9_60_2.exe?h=Q49drOcs8bOUZF_nd8ry1A&x=1626777411" class="whitebut ">FileZilla Server file</a>\n\n',
'<h2>Turn Wi-Fi Router USB Port into a NAS Server</h2>\n<div id="routertoc">0 <a href="#routertopic-0" target="_self">Turn Wi-Fi Router USB Port into a NAS Server</a><br>1 <a href="#routertopic-1" target="_self">What\'s the use of a Wi-Fi router USB port?</a><br>2 <a href="#routertopic-2" target="_self">Host that (old) printer</a><br>3 <a href="#routertopic-3" target="_self">Cellular connection</a><br>4 <a href="#routertopic-4" target="_self">Network-attached storage (NAS) server</a><br>5 <a href="#routertopic-5" target="_self">How to best turn a Wi-Fi router USB port into a NAS server</a><br>6 <a href="#routertopic-6" target="_self">Get expectations straight</a><br>7 <a href="#routertopic-7" target="_self">Get a good external drive</a><br>8 <a href="#routertopic-8" target="_self">Get the right router</a><br>9 <a href="#routertopic-9" target="_self">Use the correct settings</a><br>10 <a href="#routertopic-10" target="_self">How to access your router-based NAS server</a><br>11 <a href="#routertopic-11" target="_self">Accessing your NAS server on a Windows computer</a><br>12 <a href="#routertopic-12" target="_self">Accessing your NAS server on a Mac</a><br>13 <a href="#routertopic-13" target="_self">Best USB-enabled routers that can work as a NAS server</a><br></div></center>\n\nWhen it comes to network storage, I\'d recommend a <a href="https://dongknows.com/dong-ngos-most-important-gadget-is-a-synology-nas-server/#Whats_a_NAS_server" target="_blank">NAS server</a>. \nBut a good server can be expensive; plus, not everyone wants or has time to configure all the features. \nSo the second-best option is to make use of what you likely already have: the Wi-Fi router USB port.\n\nIndeed, there are many routers on the market that can simultaneously deliver both Wi-Fi <em>and</em> storage space for your entire home. \nSpecifically, they allow you to share files stored on an external drive with the rest of the network.\nThis post, among other things, talks about the storage-related use of a USB-ready Wi-Fi router. \nYou\'ll also find the link to my list of recommended routers and tips on how to best set up one as a NAS server.\n\n<img class="lazy loaded" data-src="https://dongknows.com/wp-content/uploads/2020/12/Asus-RT-AX89X-USB-768x1024.jpg" src="https://dongknows.com/wp-content/uploads/2020/12/Asus-RT-AX89X-USB-768x1024.jpg" data-was-processed="true">\nRouter USB port: These little ports can bring about extra values.\n\n<h3>What\'s the use of a Wi-Fi router USB port?</h3>\nNot every Wi-Fi router has a USB port, but if yours happens to have one, chances are you can use it for (at least one of) the followings:\n<h3>Host that (old) printer</h3>\n\nPrint serving is the original function of a router USB port. \nConnect a USB printer to this port, and it\'s now available to the entire network. \nThere\'s no need to buy a printer for each person anymore.\nFive or six years ago, this feature was a big deal since printers at the time were mostly USB-only. \n\nNowadays, those with a built-in network port or Wi-Fi are commonplace. \nWith that, some new Wi-Fi routers don\'t offer the print serving feature anymore, though many still do.\n<h3>Cellular connection</h3>\nThis feature allows the router to host a cellular USB modem and share the mobile Internet to the entire network. \n\nA cellular connection is a great way to have a backup Internet when your broadband service, like DSL or cable, is down.\nNote that a router with this feature only supports specific cellular modems. \nMake sure you check the manual to know which one to get.\n<img class="lazy" data-src="https://dongknows.com/wp-content/uploads/2019/08/Wi-Fi-Router-USB-NAS.jpg">\n\nPicking the right external storage device is the first step to turn a Wi-Fi router USB port into a mini NAS server.\n<h3>Network-attached storage (NAS) server</h3>\nThis feature is, by far, the most common and useful. \nSimilar to the case of printing, plugging an external hard drive into the router USB port can also make its storage available to the entire network.\n\nOn top of that, you can use that public storage space for other applications, such as a backup destination (including Time Machine backup, in some cases,) PC-less downloading, or even a personal cloud.<a href="https://dongknows.com/how-to-turn-your-wi-fi-router-into-a-time-capsule/">See also How to Turn your USB-enabled Wi-Fi Router into a Time Capsule</a>\n<h3>How to best turn a Wi-Fi router USB port into a NAS server</h3>\nThere are a couple of things to keep in mind about using a router as a NAS server.\n<h3>Get expectations straight</h3>\n\nThe first and most important thing to remember is a router\'s primary function is to host your network. \nFor this reason, even a high-end router tends to have limited processing power for non-networking tasks. \n<h4>It\'s a router you\'re using!</h4>\nNaturally, a router is not as capable as a dedicated NAS server when hosting storage space. \n\nAlso, just because the router USB port or ports support a few functions -- like NAS, printing, or cellular modem, and so on -- doesn\'t mean you should expect to use <em>all of them at the same time</em>, nor should you expect the top performance of each when you use them all together. \n(For the same reason, you can\'t, either, expect to have the same storage performance via Wi-Fi as via a wired connection. \nIn the former, the router has to use its power to broadcast the Wi-Fi signals at the same time.)\nBy the way, if a router has multiple USB ports, chances are they all share a single USB hub. \n\nSo, you can\'t use more than one bus-powered devices with it, and each port only has its share of the hub\'s total bandwidth.\nAgain, it\'s a router you\'re looking at. \nJust because there are ports doesn\'t mean you can use them all at your expected performance.\n<h4>Security</h4>\n\nSecurity can also be a concern. \nFor example, some routers still use <a rel="noopener noreferrer nofollow" href="https://en.wikipedia.org/wiki/Server_Message_Block#SMB_/_CIFS_/_SMB1" target="_blank">SMBv1</a>, which is the original and ancient version of the popular Server Message Block protocol used in the Windows environment for network file and printer sharing. \n<img class="lazy" data-src="https://dongknows.com/wp-content/uploads/2019/09/SMBv1-required.png">\nRouter USB port: Some routers still require the old and vulnerable SMBv1 protocol for the USB-based file sharing.\n\nDue to security holes, for about a decade now, SMBv1 has been replaced by SMBv2 and newer versions and recently even disabled by default in most modern operating systems. \nThat doesn\'t mean using SMBv1 will get you in trouble immediately, but it sure is not ideal. \n(Note, though, that many Asus routers might have the warning about enabling SMBv1, but they don\'t require it to work. \nIn my experience, all Asus Wi-Fi 6 routers can work with newer SMB versions.)\n\nAnother security concern is when you use the NAS feature via the Internet. \nIn this case, make sure you create an account for each user access. \nBut if you\'re not sure, just don\'t turn on any “cloud” feature or FTP access. \nUse those only when you know what you\'re doing.\n\nThe bottom line is, if you want to do a lot of things with your network storage, it\'s a good idea to get a real dedicated <a href="https://dongknows.com/dong-ngos-most-important-gadget-is-a-synology-nas-server/" target="_blank">NAS server</a>. \nBut if you only wish to use some casual network storage, it\'s quite fun and sensible to get even more use out of our router.\n<h3>Get a good external drive</h3>\nAny good external storage device, namely desktop or laptop (portable) USB drives, will work. \n\nYou don\'t need to get a NAS-specific drive. \nSo, if you want the fastest possible speed, get a fast SSD-based portable drive, such as one of those on this list. \nHowever, keep in mind that the performance depends on the network connection or the router\'s processing power.\nThat said, a fast external storage device doesn\'t always translate into better performance. \n\nIn most cases, an affordable hard-drive-based portable drive, like the <a href="https://dongknows.com/wd-my-passport-2019-portable-drive-review/" class="rank-math-link">WD My Passport</a> or the <a href="https://dongknows.com/g-tech-g-drive-mobile-usb-c-review/" class="rank-math-link">G-Tech Mobile</a>, will do. \nGenerally, a router USB port has enough juice to power one bus-powered drive. \nBut you can also use desktop external drives that have a power adapter of their own. \nIn this case, you can use one with each of a router\'s USB ports.\n\n<a href="https://dongknows.com/best-portable-drives/">See also Best Portable Drives of 2021: The Ultra-secure, Extra-rugged, and Super-fast</a>\nWhen it comes to storage space, the more, the better, so get the drive with the most capacity you can afford. \nIf you\'re serious about your data, you can also choose an external drive with <a href="https://dongknows.com/why-you-would-want-a-synology-nas-server/#Redundancy_via_the_use_of_RAID_explained" target="_blank">redundancy</a>, such as a dual-drive RAID 1 external storage device, like the <a rel="noopener noreferrer nofollow" href="https://amzn.to/2lpFRrN" target="_blank">WD My Book Duo</a>.\n<strong>Note: </strong>You will need to configure the hardware RAID setup <em>before</em> plugging it into the router. \n\nSo do that on a computer first. \n<h3>Get the right router</h3>\nNot all routers are equal, especially when it comes to raw power. \nThat said, get a router that has a lot of processing power. \n\nGenerally, the higher the specs, the better.<a href="https://dongknows.com/usb-c-vs-thunderbolt-3-explained/">See also Device Connections Explained: Thunderbolt or Not, It\'s All about USB-C</a>\nAlso, make sure you get a router that supports <a href="https://dongknows.com/peripheral-connection-explained-usb-c-vs-thunderbolt-3/" target="_blank">USB 3.2 Gen 1</a>, a.k.a USB 3.0, or faster. \nSome router also has an eSATA or USB-C port. \nSo, find one that suits your needs. \n\nAnd finally, get the router that includes the storage features you want, such as the <a href="https://dongknows.com/how-to-turn-your-wi-fi-router-into-a-time-capsule/" target="_blank">support for Time Machine backup</a>.\n<img class="lazy" data-src="https://dongknows.com/wp-content/uploads/2019/01/Asus-RT-AX88U-USB-mode-1024x858.png">\nRouter USB port: Steps to make an Asus Wi-Fi router USB port work in USB 3.0 (a.k.a USB 3.2 Gen 1) mode.\n<h3>Use the correct settings</h3>\n\nBy default, many routers -- especially those from Asus and Synology -- automatically set the connected drive to work in USB 2.0 mode. \nThis mode won\'t affect the router\'s NAS functionality but has a theoretical cap speed of just 480 Mbps (60 MB/s) -- the real-world rate will be just about half of that. \nThe USB 3.2 Gen 1 (formerly USB 3.0) mode, which the cap of 5 Gbps (625 MB/s), unfortunately, can adversely affect the router\'s 2.4GHz Wi-Fi band. \nThat said, if you want to get the most out of the router\'s storage feature, you\'ll need to enable the faster USB mode manually -- we use mostly the 5GHz band these days anyway.\n\nAlso, make sure you use the external drive with the right setting. \nFor one, use it in the <a href="https://dongknows.com/file-system-explained-and-how-to-format-your-drive/" target="_blank">correct file system</a> that the router supports. \nMost, if not all routers, support NTFS. \n<a href="https://dongknows.com/disk-partition-and-file-system-explained/">See also File System and Partition Explained: Take Control of Your Storage</a>\n\nBy the way, it\'s worth noting that you only need to use the file system that the router supports, and not the one your computer supports. \nThat\'s because the file system used by the server has nothing to do with the client. \nSo, for example, if you use an NTFS (Windows) external drive with your router and share its storage, over the network, your Mac will be able to read, write to the shared folder, and use the space for Time Machine backup (if supported) just fine. \nFinally, don\'t turn on the external storage device\'s security feature if it has one. \n\nA router has no mechanism to unlock it.\n<h3>How to access your router-based NAS server</h3>\nOnce you\'ve connected a storage device to a router and turned on the data sharing feature -- often referred to as Windows-based, or SAMBA (SMB), file sharing -- it\'s easy to access that share space from any computer within the network. \n<img class="lazy" data-src="https://dongknows.com/wp-content/uploads/2021/01/Asus-RT-AX92U-USB-Features-836x1024.jpg">\n\nThe USB-related features of an Asus router. \nFor NAS, the Samba option is in the second (Servers Center) from top.\nA couple of things to note here:\n<ul><li>Depending on the router, there might be more features than just data sharing. \n\nAnother popular option is the media server -- where the router shares video and audio files stored on the connected drive via media streaming protocol. \nIn this case, just follow the instruction to turn the desired feature on.</li><li>Here I assume you know how to set up a router, access its web interface, etc -- enabling the NAS feature is part of working with the router\'s interface. \nIf not, this <a aria-label="undefined (opens in a new tab)" rel="noreferrer noopener" href="https://dongknows.com/home-wi-fi-router-setup/" target="_blank">post on how to build a network from scratch</a> will help you with that.</li></ul>\nBut data sharing is the most useful and popular, and I\'ll cover it here. \n\nIt\'s fairly easy. \nTo make it work, the only next thing you need is the router\'s IP address, which is the same one you\'ve used to access its interface. \nAlternatively, you can also use the router\'s network name. \nBut the IP is always the <em>sure</em> way. \n\nFor this post, let\'s say the IP address in question is <em>192.168.1.1</em>. \n(Chances are yours is a different one. \nIf you don\'t know what it is, this post on IP addresses includes detailed steps to figure that out.)\nOnce you\'ve got the IP address, the steps below are the standard ways to access your newly-minted NAS server from a Windows or Mac computer within your local network hosted by the router.\n\n<h3>Accessing your NAS server on a Windows computer</h3>\n<img class="lazy" data-src="https://dongknows.com/wp-content/uploads/2020/07/Access-Server-Windows.png">\nYou can access the shared folder via the router\'s IP address.\n1. \n\nOpen Explorer.\n2. \nOn the address bar type in this command then press Enter:\n<strong><em>\\192.168.1.1</em></strong>\n\n(Alternatively, you can also use <strong>\\RouterName</strong> and the Windows search field under the Start Menu instead of Explorer. \nDon\'t forget the \\ (<strong>not</strong> //) and remember there\'s no space in the command.)\n3. \nEnter the username and password if prompted. \n\nIf you haven\'t set up an account for the data sharing, or if the router doesn\'t support that, you can just use the<em> admin username and password of the router</em>‘s web interface.\n<h3>Accessing your NAS server on a Mac</h3>\n<img class="lazy" data-src="https://dongknows.com/wp-content/uploads/2020/07/Access-Server-Mac-1024x768.jpg">\n1. \n\nClick on an empty spot on the desktop then press&nbsp;<em>Command + K</em>, and the “Connect to Server” window will appear.\n2. \nUnder <em>Server address</em>&nbsp;type in\n<strong><em> smb://192.168.1.1&nbsp;</em></strong>\n\n(Again, you can also substitute the IP address with the router\'s network name.)\n3. \nClick on <em>Connect</em> and enter username and password (of the account you\'ve created or the router\'s admin account) if prompted.\nAnd that\'s it. \n\nHappy data sharing!\n<h3>Best USB-enabled routers that can work as a NAS server</h3>\nNow that you know how to turn a USB-enabled router into a NAS server, you probably wonder which router or routers you should get for the job. \nI addressed that big question in this separate, frequently updated post on <a href="https://dongknows.com/best-wi-fi-routers-for-nas/">the best Wi-Fi routers for NAS features</a>. \n\nCheck it out!\n<a href="https://dongknows.com/best-wi-fi-router-nas-solutions/">\nSee also Best 13 Router NAS Options: Add Some Cool Storage to Your Wi-Fi Today!</a>\nBy the way, again, many routers can also work as a <a href="https://dongknows.com/all-you-need-to-know-about-macs-time-machine-backup/" target="_blank" rel="noreferrer noopener">Time Machine backup</a> destination. \nFor more, check out this post on how to <a href="https://dongknows.com/how-to-turn-your-wi-fi-router-into-a-time-capsule/">turn a router into a Time Capsule.</a>\n\n\'',
'<h2>Wi-Fi Direct</h2><br>Windows 10 boasts another feature that most people don\'t know about, called <strong>Wi-Fi Direct</strong>, a wireless connectivity system that helps you effortlessly hook devices up and transfer huge amounts of data.<br><br><h3>How Does Wi-Fi Direct Work?</h3><br>For Wi-Fi Direct technology to work, you\'ll need at least a single device that\'s compatible with its protocols.3<br><br>Wi-Fi Direct is built on top of Wi-Fi. <br>The only thing that separates it from regular Wi-Fi is that while you need a router to connect your devices to the internet, Wi-Fi Direct doesn\'t have any limitations.<br><br><h3>Check If Your Windows 10 PC Is Wi-Fi Direct Compatible</h3><br>You can do this by pressing<strong> Windows Key +R</strong>, entering <strong>CMD</strong> to <a href="https://www.makeuseof.com/tag/a-beginners-guide-to-the-windows-command-line/">open the Command Prompt</a> then entering <strong>ipconfig /all</strong>.<br><img src="https://static1.makeuseofimages.com/wordpress/wp-content/uploads/2021/06/windows-command-prompt.png"><br>If Wi-Fi Direct is available, you should see an entry labeled <strong>Microsoft Wi-Fi Direct Virtual Adapter.</strong><br><br>Next, you\'ll need to start transferring data over Wi-Fi Direct. <br><br><h3>How to Transfer Files From Android to Windows With Wi-Fi Direct</h3><br><br>As you\'ll need a third-party app to use Wi-Fi Direct, choosing the right option is important.<br><a href="https://feem.io/">Feem</a> is a software that has provided Wi-Fi Direct support to Windows PC and laptop users since the days of Windows 7 and Windows 8.<br>Feem is free to use, although it has various premium options. <br><br>Wi-Fi Direct in Feem is free, as is live chat. <br><br>Set your Android device as a mobile hotspot via <strong>Settings &gt; Network &amp; Internet &gt; Hotspot &amp; tethering</strong>. <br>Connect your Windows computer to this network.<br>Launch Feem on Android and Windows. <br><br>You\'ll notice that both devices are given unusual names by the app (e.g., Junior Raccoon) and a password. <br>Keep a note of the password, as you\'ll need it to establish the initial connection.<br>Send a file from Android to Windows using Wi-Fi Direct, choose the destination device, and tap <strong>Send File</strong>. <br><br>Browse for the file or files, then tap <strong>Send</strong>.<br>Moments later, the data will be sent to your PC. <br>It\'s as simple as that—and it works backwards, too.<br><br><strong>Download:</strong> <a href="https://feem.io/#download">Feem</a> (for Windows, macOS, Linux, Android, iOS, Windows Phone)<br><h3>Don\'t Have Wi-Fi Direct? Transfer Files With Bluetooth!</h3><br>If your devices don\'t support Wi-Fi Direct, a smart solution (in the absence of a USB cable) is Bluetooth. <br><br>This is particularly useful if you\'re trying to use Wi-Fi Direct on Windows 7 or 8 and find that the feature isn\'t there or it doesn\'t work.<br><br>First, ensure your computer is paired to a suitable Bluetooth device (phone, tablet, computer, etc.) before sending a file to it. <br>The methodology for this is largely the same across devices and requires that both are set to "discoverable."<br><br>Both devices will then search for one another and, if successful, connect following input of a confirmation code.<br>For more information, here\'s a list of how you can <a href="https://www.makeuseof.com/tag/transfer-files-android-pc/">transfer data between a PC and Android</a>.<br>If you\'re not sure where the controls for Bluetooth can be found on your Windows 10 computer, open <strong>Settings &gt; Devices. <br><br></strong>After you\'re in the <strong>Bluetooth &amp; other devices</strong> section, turn on the Bluetooth, and pair your device with the computer. <br>For that, click on <strong>Add Bluetooth or other device </strong>and go ahead with the pairing up.<br><br>Then click on <strong>Send or receive files via Bluetooth &gt; Send Files. <br><br>Next, select</strong> a device that you want to share files with, choose the file to be sent, and click on <strong>Next </strong>to go ahead with the transmission.<br><img src="https://static1.makeuseofimages.com/wordpress/wp-content/uploads/2021/06/send-a-file-by-bluetooth.png"><br>On sending the file, the device receiving your data file will ask you to confirm that you wish to save the data. <br><br>Agree to this, and wait for the transfer to complete.<br>Note that due to the shorter range of Bluetooth, the best results will be enjoyed by keeping both devices close together.<br><h3>No Wi-Fi Direct? Transfer Files From Android to Windows PC With FTP</h3><br><br>FTP is another handy file transfer option for Android users attempting to transfer files to their Windows 10 PC (or other operating systems, for that matter).<br><a href="http://www.estrongs.com/#/">ES File Explorer</a> is a popular third-party <a href="https://www.makeuseof.com/tag/es-file-explorer-the-best-file-manager-for-android-android/">file manager for Android</a>. <br>This comes with several file management features for local and network use. <br><br>Among these is FTP, which provides a direct network connection between two devices.<br>Use ES File Explorer\'s <strong>Network &gt; FTP</strong> feature to display your Android device\'s IP address.<br>Paste this into a file transfer program such as <strong>FileZilla</strong> to browse the contents. <br><br>You can then effortlessly transfer files between the two devices.<br>So, try ES File Explorer if you want to transfer data from a mobile device to your laptop through Wi-Fi and don\'t have Wi-Fi Direct.<br><h3>Data Transfer Speeds: Which Is Best?</h3><br><br>You will probably notice while trying these two methods that Wi-Fi Direct is considerably quicker than Bluetooth. <br>Indeed, recent tests have demonstrated that Bluetooth speed is like a tortoise in comparison.<br>While Wi-Fi Direct isn\'t quicker than any cable data transfer (such as USB 2.0 or USB 3.0), it is certainly capable of transferring a 1.5 GB file within 10 minutes; in contrast, Bluetooth takes almost 125 minutes to shift the same data.<br>\',\n\n',
'<h2>The share option is greyed out</h2>\nFrom the Properties window, set the Advanced Shared Permissions\na. \nFrom the Properties window, Click the Advanced Sharing button.\nb. \nThe Advanced Sharing window appears. \nFirst, select the check box beside the Share this folder option. \nNext, you need to type in a share name. \nBy default, Windows 7 uses the name of the folder as the share name, but you can change the name by typing a new name in the Share name field.\nc. \nNow you’re ready to set the permissions. \nClick the Permissions button from the Advanced Sharing window\nd. \nSelect the Everyone group in the Group or user names list, and then click Remove. \nClick Add to display the Select users or groups window. \nWithin the Enter the object names to select text box, type the name of the user or users you want to give permission to access the shared folder (separate multiple usernames with semicolons). \nClick OK when you’re done to return to the Permissions window.\ne. \nNext select the appropriate user in the Group or user names list. \nYou can now use the permissions list to allow or deny one of the following permissions: Read, Change, or Full Control. \nClick OK if you’re done. \nIf you want to assign permissions to additional users or group, repeat these steps to assign them the appropriate permissions.\nf. \nClick OK to return to the Advanced Sharing window and click OK again to return to the Sharing tab. \nFinally, when you click Close, the folder or file is accessible to others on the network.\ng. \nClick OK to return to the Sharing tab, and then click Close to share the resource with the network.\n\n\n',
'<h2>Find all Wi-Fi passwords with only 1 command</h2>\nnetsh wlan show profile\nnetsh wlan export profile folder=C:\ key=clear\n\n\n',
'<h2>Github Actions</h2>\n<div id="GitActionstoc"><a href="#GitActionstopic-0" target="_self" >Terminology</a><br><a href="#GitActionstopic-1" target="_self" >Documentation</a><br><a href="#GitActionstopic-2" target="_self" >Experimenting</a><br><a href="#GitActionstopic-3" target="_self" >Workflows</a><br><a href="#GitActionstopic-4" target="_self" >Events</a><br><a href="#GitActionstopic-5" target="_self" >Environment</a><br><a href="#GitActionstopic-6" target="_self" >Example Job</a><br><a href="#GitActionstopic-7" target="_self" >Environment Variables</a><br><a href="#GitActionstopic-8" target="_self" >Secrets</a><br><a href="#GitActionstopic-9" target="_self" >Third Party Actions</a><br><a href="#GitActionstopic-10" target="_self" >Conditions</a><br><a href="#GitActionstopic-11" target="_self" >Persisting Data</a><br><a href="#GitActionstopic-12" target="_self" > Using shared job data to determine if subsequent job should run</a><br><a href="#GitActionstopic-13" target="_self" > Persist data using <code>strategy.matrix</code></a><br><a href="#GitActionstopic-14" target="_self" > Clarify the cache action</a><br><a href="#GitActionstopic-15" target="_self" >Reusable Workflows</a><br><a href="#GitActionstopic-16" target="_self" >Conclusion</a><br></div>\n\n<a href="https://github.com/features/actions">GitHub Actions</a> makes it easy to automate all your software workflows, now with world-class CI/CD. \nBuild, test, and deploy your code right from GitHub.\nI\'ve been using GitHub Actions a lot recently and I\'ve found it to be immensely flexible and feature rich. \nI think it\'s well worth your time learning how to run your CI/CD pipelines via GitHub Actions, and in this post that\'s exactly what we\'re going to dig into.\n<h3 id="GitActionstopic-0">Terminology</h3>\nIt all starts with a \'workflow\'.\nA workflow is a yaml configuration file that defines:\n<strong>Jobs</strong>: a job represents a collection of \'steps\'.\n<strong>Steps</strong>: each \'step\' does something useful (e.g. executes a piece of code).\n<strong>Events</strong>: an event determines when your \'jobs\' should run.\nGitHub has a nice visualisation of this..\n<img src="https://www.integralist.co.uk/images/overview-actions-simple.png">\n<strong>NOTE</strong>: Each job you define will run in parallel. \nIf you need jobs to run sequentially, then you\'ll need to configure a job to depend on another job using the <code>needs</code> property (we\'ll see an example of this later).\n<h3 id="GitActionstopic-1">Documentation</h3>\nI would strongly suggest bookmarking the <a href="https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions">official documentation</a> because it\'s very thorough. \nUnfortunately it\'s so thorough that it can be a bit overwhelming, but don\'t worry, once you\'ve gotten familiar with the various concepts you\'ll start to remember where the important information is located.\nThe pages I use the most are:\n<strong><a href="https://docs.github.com/en/actions/learn-github-actions/expressions">Expressions</a></strong>: explains how to use GitHub\'s builtin functions, like <code>contains()</code>, <code>fromJSON()</code>, and functions like <code>success()</code> and <code>failure()</code> that tell you the state of previous steps that have run.\n<strong><a href="https://docs.github.com/en/actions/learn-github-actions/contexts">Contexts</a></strong>: there are lots of contextual objects your jobs can use, such as objects for getting information about git (what branch we\'re dealing with, the commit SHA etc), environment variables, secrets, data exposed by other jobs and lots more.\n<strong><a href="https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions">Syntax</a></strong>: this is the most important page as it details all the yaml configuration syntax (so I come here often).\n<strong><a href="https://docs.github.com/en/actions/learn-github-actions/workflow-commands-for-github-actions">Commands</a></strong>: when executing a shell command (or script) you can use <code>echo</code> with a specific format and, depending on the format used, it\'ll take on special meaning to the workflow runner and can be used (among other things) for displaying rich messaging in the GitHub UI.\n<strong><a href="https://docs.github.com/en/actions/learn-github-actions/environment-variables">Environment variables</a></strong>: most of the \'context\' properties are also exposed as environment variables to make it easier for your shell commands/scripts to utilise.\n<strong><a href="https://docs.github.com/en/actions/learn-github-actions/reusing-workflows">Reusing workflows</a></strong>: If you have a bunch of jobs all doing a similar thing (e.g. you\'ve three jobs and each of them setup a specific set of environment variables before installing the rust programming language), then you can move that duplication into a separate workflow file that your main workflow can call out to.\n<h3 id="GitActionstopic-2">Experimenting</h3>\nThe best thing to do when it comes to learning GitHub Actions is to create a test repo as a playground, like I did here: <a href="https://github.com/Integralist/actions-testing">https://github.com/Integralist/actions-testing</a>.\nYou can of course use an existing repo if you want, but I prefer to use something completely decoupled when I\'m testing a new tool.\n<h3 id="GitActionstopic-3">Workflows</h3>\nAs I mentioned earlier: everything starts with a workflow.\nTo create a workflow you must save a yaml file into the <code>.github/workflows</code> directory of your project\'s git repo.\nIn the following example you\'ll see I have created three separate workflows:\n<code>├── .github\n│   └── workflows\n│       ├── my-first-workflow.yaml\n│       ├── my-second-workflow.yaml\n│       └── my-third-workflow.yaml\n</code>\nYou can create as many workflows as you need to, and you can name a workflow file anything you like.\n<h3 id="GitActionstopic-4">Events</h3>\nOnce we create a workflow file, let\'s see how we can trigger any jobs that are defined within the workflow. \nBe aware that in the following example workflow I have not defined any jobs, I\'m focusing on the events configuration only:\n<code>name: My Workflow\non:\n  push:\n  schedule:\n    - cron: "0 0 1 * *"   # https://crontab.guru/every-month\n    - cron: "*/5 * * * *" # https://crontab.guru/every-5-minutes\n</code>\nSo we can see I\'ve given my workflow a name using the <code>name</code> key, and I\'ve defined some events using the <code>on</code> key:\n<code>push</code>: any push to your repo, whether it be to your <code>main</code> branch or a pull-request branch, will trigger your job(s) to run.\n<code>schedule</code>: run your job(s) on a schedule using cron syntax, which in this example triggers job(s) every five minutes and monthly.\n<strong>NOTE</strong>: <a href="https://crontab.guru/">https://crontab.guru/</a> makes dealing with cron syntax easy.\nRefer to GitHub\'s <a href="https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows">events documentation</a> to learn more about the various events you can configure. \nFor example, you can restrict a workflow to only execute against a specific branch.\n<h3 id="GitActionstopic-5">Environment</h3>\nEach job runs inside its own virtual machine \'runner\', which means (just as an example) files you create, or data you produce, will not persist across jobs. \nThis includes things like environment variables.\n<h3 id="GitActionstopic-6">Example Job</h3>\nLet\'s take a look at a very simple job:\n<code>name: Test Workflow\non: push\njobs:\n  simple-job:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Say Hello\n        run: echo \'hello\'\n</code>\nLet\'s now break apart this workflow to understand what it\'s doing..\n<code>name</code>: the name for the workflow.\n<code>on</code>: the event(s) we want to have trigger our job(s).\n<code>jobs</code>: a list of jobs we want to be executed under this workflow.\n<code>simple-job</code>: a job that consists of nested configuration.\n<code>runs-on</code>: the environment I want the job to run in.\n<code>steps</code>: a list of steps to run under the job.\n<code>name</code>: the name of the step, which can be omitted but it makes the output in the GitHub UI nicer.\n<code>run</code>: the shell command/script I want to run (in this example, my command prints the string <code>hello</code>).\n<strong>NOTE</strong>: Refer to the GitHub <a href="https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#github-hosted-runners">runner documentation</a> to see what other environments are available. \nAlso refer to the <a href="https://github.com/actions/virtual-environments">virtual-environments</a> repo to see what is installed on each runner\'s operating system.\nAs you can see, defining a workflow and its jobs/steps is actually very simple and intuitive. \nNow we can start looking at using more features and how to take advantage of the platform.\n<h3 id="GitActionstopic-7">Environment Variables</h3>\nGitHub Actions let you configure environment variables in multiple places depending on the scope they should have.\nYou can define environment variables globally, so they\'re available to all jobs (and all steps within those jobs), or at a job level (so they can be accessed by all steps within the specific job) or at a step level, meaning only a specific step will have access to them.\nI\'ll demonstrate environment variable configuration in the following example:\n<code>name: Testing Environment Variables\non: push\nenv:\n  FOO: bar\njobs:\n  validate-env-vars:\n    runs-on: ubuntu-latest\n    env:\n      LITERAL: whatever\n      INTERPOLATION: ${{ github.ref_name }}\n      EXPRESSION: $(echo ${{ github.ref_name }} | perl -pe \'s/[^a-zA-Z0-9]+/-/g\' | perl -pe \'s/(\A-|-\Z)//g\' | awk \'{print tolower($0)}\')\n    steps:\n      - name: Print Global Environment Variables\n        run: echo $FOO\n      - name: Print Job Environment Variables\n        run: |\n          echo ${{ env.LITERAL }}\n          echo ${{ env.INTERPOLATION }}\n          echo ${{ env.EXPRESSION }}\n          echo $LITERAL\n          echo $INTERPOLATION\n          echo $EXPRESSION          \n      - name: Print Step Environment Variables:\n        env:\n          STEPVAR: my step\n        run: |\n          echo ${{ env.STEPVAR }}\n          echo $STEPVAR          \n</code>\nOK, so there\'s a few things to unpack from the above example workflow.\nThe first thing I want to clarify is that when running shell commands/scripts using <code>steps.run</code> you can either define multiple steps like so:\n<code>- run: echo hello\n- run: echo world\n</code>\nOr alternatively you can use the pipe <code>|</code> character to indicate the value spans multiple lines, like so:\n<code>- run: |\n  echo hello\n  echo world  \n</code>\nI would tend towards using separate <code>run</code> steps rather than one long multi-line <code>run</code> because it\'s harder to handle errors (or know where an error occurred) in the latter approach.\nThe next thing to clarify is that there are two ways to access an environment variable:\n<ol>\n<strong>Interpolation</strong>: <code>${{ ... \n}}</code> (e.g. <code>echo ${{ env.LITERAL }}</code>).\n<strong>Variable reference</strong>: <code>$VARNAME</code> (e.g. <code>echo $LITERAL</code>).\n</ol>\nIt\'s important to understand that although the output between the two approaches is the same, there is still a distinction worth being aware of.\nWith interpolation the value is acquired by looking up the relevant key within the <a href="https://docs.github.com/en/actions/learn-github-actions/contexts#env-context"><code>env</code> context object</a>, and then the value is injected into the shell command to be executed, while the more traditional variable reference approach works by the shell instance looking up the environment variable to access the value.\nSo when you look at the GitHub Actions GUI (e.g. <code>https://github.com/&lt;USER&gt;/&lt;REPO&gt;/actions/runs/&lt;ID&gt;</code>) and you look through the job output for the <code>LITERAL</code> example, then you\'ll see something like:\n<code data-lang="bash">echo whatever\necho $LITERAL\n</code>\nThis is because the first line used interpolation, so really the shell command was just echo\'ing the literal value, where as the second line was echo\'ing the <em>result</em> of looking up the environment variable.\nIn our example workflow you can see we defined a global environment variable called <code>FOO</code>, we also defined a job level set of environment variables (<code>LITERAL</code>, <code>INTERPOLATED</code> and <code>EXPRESSION</code>), and finally we defined a step level environment variable called <code>STEPVAR</code>.\nLet\'s take a moment to clarify the job level environment variables as these demonstrate something important, which is although the <code>EXPRESSION</code> variable was assigned a shell command, that command isn\'t <em>evaluated</em> and so the literal characters are assigned as the value.\nIf you thought the <em>result</em> of the shell command (e.g. acquire the branch name from the <code>github</code> context object, and then do some normalisation of the name using a combination of <code>perl</code> and <code>awk</code>) would be assigned to the environment variable, then you would have been wrong.\nOnly the <a href="https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#jobsjob_idstepsrun"><code>steps.run</code></a> key will actually evaluate a given shell command/script.\nNow if the only way to evaluate a shell command is via <code>steps.run</code>, then how can we dynamically assign a value to an environment variable?\nConsider this example, you\'re a <a href="https://nodejs.org/en/">Node.js</a> developer and you\'re using the Node version manager <code>nvm</code> along with a <a href="https://github.com/nvm-sh/nvm#nvmrc"><code>.nvmrc</code> file</a> to control which version of Node your project uses.\nYou\'re also using GitHub actions and you want to use a pre-existing action to manage installing Node on your job runner (we\'ll dig into third-party actions later, but for now just know that they are a thing).\nThis is where things get a little funky, because third-party actions can\'t evaluate shell commands given as inputs. \nSo the most popular third-party action for installing Node is <a href="https://github.com/actions/setup-node"><code>actions/setup-node</code></a> and it allows you to specify the version of Node to install but it has to be a literal value.\nThe following example demonstrates how to side-step this restriction by using a <code>steps.run</code> to dynamically access the value inside the <code>.nvmrc</code> file and to then update the local environment with a new variable holding that value. \nThis means you can then use interpolation to access that value and pass it into the <code>actions/setup-node</code> action:\n<code>name: Testing Dynamic Environment Variable Value\non: push\njobs:\n  validate-env-vars:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Generate Dynamic Environment Variable\n        run: echo "NODE_VERSION=$(cat .nvmrc)" &gt;&gt; $GITHUB_ENV\n      - name: Print NODE_VERSION\n        run: |\n          echo ${{ env.NODE_VERSION }}\n          echo $NODE_VERSION          \n      - uses: actions/setup-node@v2\n        with:\n          node-version: "${{ env.NODE_VERSION }}"\n</code>\nThe trick is to update a GitHub Actions provided environment variable called <code>$GITHUB_ENV</code>. \nAll the following steps will then have an environment that includes whatever is in <code>$GITHUB_ENV</code>.\n<strong>NOTE</strong>: You could also use the output of a step as the input to the <code>actions/setup-node</code> action, but we\'ll look at that feature later.\n<h3 id="GitActionstopic-8">Secrets</h3>\nThe previous Node.js example workflow actually leads us quite nicely into this section about <a href="https://docs.github.com/en/actions/security-guides/encrypted-secrets#using-encrypted-secrets-in-a-workflow">secrets</a>.\nLet\'s see a common solution to accessing a private NPM repository..\n<code>name: Testing GITHUB_TOKEN access restrictions\non: push\njobs:\n  testing:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Acquire Node Version\n        run: echo "NODE_VERSION=$(cat .nvmrc)" &gt;&gt; $GITHUB_ENV\n      - uses: actions/setup-node@v2\n        with:\n          node-version: "${{ env.NODE_VERSION }}"\n      - name: Authorize access to private packages\n        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" &gt; ~/.npmrc\n</code>\nWhat we\'re doing here is installing Node.js and then modifying a <code>.npmrc</code> file so that it knows, when we do an <code>npm install</code>, to use an authentication token because the repository we want to use to get at our dependencies is otherwise private.\nYou\'ll see we\'re using a <a href="https://docs.github.com/en/actions/security-guides/encrypted-secrets"><code>secrets</code> context object</a> to access a <code>GITHUB_TOKEN</code> value to use as our authentication token. \nThis should be fine, but it doesn\'t work and our authentication with the private NPM repository fails.\nLet\'s take a moment to learn a bit about GitHub \'secrets\'..\nIn the GitHub UI for a repo/project you can add secrets that are encrypted and made accessible to your workflow via the <code>secrets</code> context object. \nBut additionally GitHub Actions provides access to a secret called <a href="https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret"><code>GITHUB_TOKEN</code></a>.\nI\'ll just refer you to the GitHub documentation, as it explains it best:\nAt the start of each workflow run, GitHub automatically creates a unique GITHUB_TOKEN secret to use in your workflow. \nWhen you enable GitHub Actions, GitHub installs a GitHub App on your repository. \nThe GITHUB_TOKEN secret is a GitHub App installation access token. \nYou can use the installation access token to authenticate on behalf of the GitHub App installed on your repository. \nThe token\'s permissions are limited to the repository that contains your workflow.\nThat last sentence is the important bit! What essentially it means is that you can\'t use <code>secrets.GITHUB_TOKEN</code> to access things outside of the project repo.\nSo to solve our problem we still need to use the <code>secrets</code> context object, but instead of using the default <code>GITHUB_TOKEN</code> we\'re going to need to create a new <a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token">Personal Access Token</a> (PAT).\nOnce you create a PAT, as long as the user account that creates the PAT has access to the private repository, we can paste the PAT into the GitHub secrets UI.\nFor the sake of an example let\'s say you create a new secret called <code>NPM_AUTH_TOKEN</code> and paste the PAT value into it. \nWe can now reference the secret token value via the <code>secrets</code> context object in our workflow file:\n<code>name: Testing with Personal Access Token\non: push\njobs:\n  testing:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Acquire Node Version\n        run: echo "NODE_VERSION=$(cat .nvmrc)" &gt;&gt; $GITHUB_ENV\n      - uses: actions/setup-node@v2\n        with:\n          node-version: "${{ env.NODE_VERSION }}"\n      - name: Authorize access to private packages\n        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" &gt; ~/.npmrc\n</code>\nNotice that the workflow file basically hasn\'t changed, except we swapped <code>secrets.GITHUB_TOKEN</code> for <code>secrets.NPM_AUTH_TOKEN</code>.\n<h3 id="GitActionstopic-9">Third Party Actions</h3>\nAn action is just code that interacts with your repository. \nIt\'s possible to write your own custom actions and to share them with the community.\nIf you want to learn more about creating your own actions, then refer to GitHub\'s “<a href="https://docs.github.com/en/actions/creating-actions/about-custom-actions">About custom actions</a>”.\nThere are a bunch of third-party actions that you\'ll see used a lot..\n<a href="https://github.com/actions/checkout"><code>actions/checkout</code></a>\n<a href="https://github.com/actions/cache"><code>actions/cache</code></a>\n<a href="https://github.com/actions/setup-go"><code>actions/setup-go</code></a>\n<a href="https://github.com/actions/setup-node"><code>actions/setup-node</code></a>\n<a href="https://github.com/actions-rs/toolchain"><code>actions-rs/toolchain</code></a>\nAll of the above actions, with the exception of the last, are official GitHub maintained actions. \nThis means they are considered safe to use in your workflows (remember that an action runner will be able to use your <code>secrets.GITHUB_TOKEN</code>). \nSee also <a href="https://github.com/actions">https://github.com/actions</a> for more official/verified actions you can use.\n<strong>NOTE</strong>: I\'ve no idea why they don\'t provide a Rust action.\n<h3 id="GitActionstopic-10">Conditions</h3>\nYou can use an <code>if</code> conditional statement to control whether a job or step is run. \nIt\'s best to use this feature if you need to <em>skip</em> a job/step apposed to using an exit code from within a <code>run</code> shell command/script to stop a job/step that has already started to run.\nOne important caveat to using <code>if</code> in a workflow is that you <em>must</em> use single quotes and not double quotes. \nConsider the following example, which you might expect to only run the job if the GitHub branch affected is <code>main</code>..\n<code>name: Testing with Double Quotes\non: push\njobs:\n  run-if-main:\n    if: ${{ github.ref_name == "main" }}\n    runs-on: ubuntu-latest\n    steps:\n      - run: echo hello\n</code>\n<strong>NOTE</strong>: Expressions can omit the surrounding <code>${{ ... \n}}</code> but I tend to include it.\nThe above example won\'t work simply because the string <code>"main"</code> is using double quotes. \nYou\'ll find the requirement for using single quotes is mentioned in the GitHub documentation for “<a href="https://docs.github.com/en/actions/learn-github-actions/expressions#literals">Literals</a>”.\nIf you want to learn more about the available operators, like <code>==</code>, <code>!=</code> and <code>&amp;&amp;</code> etc, then refer to the <a href="https://docs.github.com/en/actions/learn-github-actions/expressions#operators">operators documentation</a>.\n<h3 id="GitActionstopic-11">Persisting Data</h3>\nA GitHub Action job does not persist data by default, as each job runs within its own \'runner\'. \nTo persist data we can use either a:\n<ol>\nCache (<a href="https://github.com/actions/cache"><code>actions/cache</code></a>)\nArtifact (<a href="https://github.com/actions/upload-artifact"><code>actions/upload-artifact</code></a>, <a href="https://github.com/actions/download-artifact"><code>actions/download-artifact</code></a>)\nJob Output (<a href="https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#jobsjob_idoutputs"><code>outputs</code> documenation</a>)\n</ol>\nCaching is quick but isn\'t always ideal as it requires the use of I/O to create files to be cached, and then also we have to coordinate reading values back from disk and parsing the data contained within those files etc. \nCaching is best used for simple situations such as caching installed programming language dependencies.\nArtifacts are slow as they need to upload and download files from GitHub\'s servers and also this requires two separate external actions to configure, making them not ideal for quick data persistence (and also makes \'simple\' data persistence scenarios tedious).\nTo persist data using a job\'s output requires a job to produce some data and to expose that data via the job\'s <code>outputs</code> field. \nA consumer can then use and parse that data however they see fit. \nThis approach can also be useful for dynamically generating job matrix variants using a job\'s <a href="https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#jobsjob_idstrategy"><code>strategy.matrix</code></a> field.\n<strong>NOTE</strong>: A job has an <code>outputs</code> field, but also individual steps can access the output from a previous step by way of the same mechanism, which is a step needs to set an <code>id</code> field which either another step or the job itself can reference.\nThe way your <code>run</code> code (or an external shell script) can produce data that the GitHub job can reference is to <code>echo</code> a specially formatted string:\n<code data-lang="bash">echo "::set-output name=&lt;name&gt;::&lt;data&gt;"\n</code>\nSo in the following example we produce the data <code>bar</code> and we make it accessible via the name <code>foo</code>:\n<code data-lang="bash">echo "::set-output name=foo::bar"\n</code>\nNow in the following example our GitHub job has two steps, and the latter step is accessing data produced by the first step:\n<code>name: Produce Data\non: push\njobs:\n  example:\n    runs-on: ubuntu-latest\n    steps:\n      - id: produce-data\n        run: echo "::set-output name=foo::bar"\n      - run: echo ${{ steps.produce-data.outputs.foo }}\n</code>\n<strong>NOTE</strong>: Be sure to use the <code>id</code> field so the second step can use it to reference the first step\'s output!\n<h3 id="GitActionstopic-12"> Using shared job data to determine if subsequent job should run</h3>\nIn the following example the <code>bar</code> job will not run if the required fields <code>foo</code> and <code>baz</code> aren\'t set to <code>true</code>.\nNotice the data I produce within job <code>foo</code> is a simple array/list whose elements are strings who have a format of <code>key=value</code>:\n<code>name: Produce Data To Control Job Run\non: push\njobs:\n  foo:\n    runs-on: ubuntu-latest\n    outputs:\n      data: ${{ steps.footest.outputs.data }}\n    steps:\n      - run: |\n          echo "FOO=true" &gt;&gt; $GITHUB_ENV\n          echo "BAR=false" &gt;&gt; $GITHUB_ENV\n          echo "BAZ=true" &gt;&gt; $GITHUB_ENV          \n      - id: footest\n        run: echo ::set-output name=data::[\"foo=$FOO\", \"bar=$BAR\", \"baz=$BAZ\"]\n  bar:\n    needs: foo\n    if: ${{ contains(needs.foo.outputs.data, \'foo=true\') &amp;&amp; contains(needs.foo.outputs.data, \'baz=true\') }}\n    runs-on: ubuntu-latest\n    steps:\n      - run: echo \'yay! we ran because the fields were set to true\'\n  build:\n    needs: bar\n    runs-on: ubuntu-latest\n    steps:\n      - run: echo \'yay! this job ran as the bar job was successful\'\n</code>\nThe key part to getting job <code>bar</code> to determine if it should run is to use an <code>if</code> along with one of GitHub\'s native functions called <a href="https://docs.github.com/en/actions/learn-github-actions/expressions#contains"><code>contains()</code></a>. \nYou can see I use it twice to check if the persisted data contains the values I\'m looking for.\n<strong>NOTE</strong>: You\'ll likely want to use the <code>needs</code> property to help make the jobs run sequentially. \nOtherwise without it the jobs will run in parallel and this means there would be a data race in <code>bar</code> trying to access the <code>foo</code> job\'s output which might not yet be available and this would cause both the <code>bar</code> job and its dependant <code>build</code> job to not be run.\n<h3 id="GitActionstopic-13"> Persist data using <code>strategy.matrix</code></h3>\nBelow is an example of using JSON data from <code>job1</code> and exposing it to <code>job2</code>. \nThis approach of using <a href="https://docs.github.com/en/actions/learn-github-actions/expressions#fromjson"><code>fromJSON</code></a> with data from another job to create a matrix is really cool, but otherwise this approach (as far as data persistence is concerned) isn\'t ideal because it requires the JSON data produced by the first job to have a very specific structure that the <code>strategy.matrix</code> expects. \nSo to reiterate I\'m not using <code>strategy.matrix</code> in this example because I want a matrix but just to demonstrate a clever way to persist data without having to resort to using either caching or artifacts.\nWith this in mind I needed to ensure I set the value of each matrix field to be a <em>list</em> type that contains a <em>single</em> entry.\nIf I didn\'t use a list type then the <code>strategy.matrix</code> would fail to parse my JSON data. \nI purposely ensure there is only a single value within the list because I don\'t actually need my data to cause the job to be run multiple times. \nThis is because a <code>strategy.matrix</code> is typically used to generate multiple \'variants\' of a job. \nBy setting a single value inside a list, we ensure there is only ever one job variant generated (i.e. only one job is created), and that single job can simply reference the fields within the matrix as data points of interest.\n<code>name: example\non: push\njobs:\n  job1:\n    runs-on: ubuntu-latest\n    outputs:\n      matrix: ${{ steps.set-matrix.outputs.matrix }}\n    steps:\n      - id: set-matrix\n        run: echo "::set-output name=matrix::{\"FOO\":["abc"],\"BAR\":["xyz"]}"\n  job2:\n    needs: job1\n    runs-on: ubuntu-latest\n    strategy:\n      matrix: ${{fromJSON(needs.job1.outputs.matrix)}}\n    env:\n      FOO: ${{ matrix.FOO }}\n      BAR: ${{ matrix.BAR }}\n    steps:\n      - run: echo ${{ matrix.FOO }} # abc\n      - run: echo ${{ matrix.BAR }} # xyz\n</code>\n<h3 id="GitActionstopic-14"> Clarify the cache action</h3>\nOK, so as far as data persistence is concerned, we have the <code>actions/cache</code> action we can use as an option. \nIt\'s actually not very obvious how this action works and so I thought I\'d take a brief moment to clarify my understanding, which then helped me to better understand how I could use it for data persistence outside of just caching language dependencies (which is what most examples are based on).\nThe <code>actions/cache@v2</code> works like so, you have to define a new step like so:\n<code>- uses: actions/cache@v2\n  with:\n    path: path/to/be/cached\n    key: ${{ runner.os }}-my-cache-key\n</code>\nWhen the step that implements the action is executed (see above snippet), the cache action simply looks up the cache key (e.g. <code>Linux-my-cache-key</code>) and if it finds something in the cache, then it restores the cache to the path you specified (e.g. <code>path/to/be/cached</code>).\nIf the cache action doesn\'t find anything in the cache, then nothing happens.\nNow the important bit: the cache action has a \'post run\' event that executes once your job has finished successfully. \nThe cache action will be run again and this time it stores whatever was in your given path into the cache using the key you said it should be stored under.\nThis means, when it comes to running another job, you need to ensure you define the cache action <em>again</em> (the same as you defined it in your first job). \nThis is so all of what I\'ve just explained will happen again in your second job (i.e. it\'ll lookup the key but this time it\'ll find something in the cache thanks to the \'post run\' step from the first job). \nThe only difference now in the second job is that in the \'post run\' event, when the action gets run again, you\'ll now see something like..\nCache hit occurred on the primary key <code>Linux-my-cache-key</code>, not saving cache.\nMeaning there was nothing else to do. \nI imagine if there were changes to the files in the given path then it would indicate the cache was updated with the latest files.\n<h3 id="GitActionstopic-15">Reusable Workflows</h3>\nIf you have a bunch of setup configuration that is the same between jobs, then you can move that configuration into a separate workflow file that can then be imported and used by each job in your main workflow file.\nThe following example, demonstrates how to <em>call</em> (i.e. import) a reusable workflow:\n<code>jobs:\n  build:\n    ...\n  deploy:\n    ...\n  validate-foo:\n    uses: integralist/actions-testing/.github/workflows/resuable-setup@main # install node, rust, setup env vars etc\n    steps: \n      - ...\n  validate-bar:\n    uses: integralist/actions-testing/.github/workflows/resuable-setup@main # install node, rust, setup env vars etc\n    steps: \n      - ...\n</code>\nAn example implementation of a reusable workflow would be:\n<code>name: Reusable workflow for validation scripts\non:\n  workflow_call:\n    inputs:\n      install_node:\n        type: bool\n      name:\n        required: true\n        type: string\n      description:\n        required: true\n        type: string\n      script:\n        required: true\n        type: string\njobs:\n  validation:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - if: ${{ github.event_name != \'schedule\' }}\n        run: exit 1\n      - if: ${{ inputs.install_node }}\n        name: Environment\n        run: |\n                    echo "NODE_VERSION=$(cat .nvmrc)" &gt;&gt; $GITHUB_ENV\n      - if: ${{ inputs.install_node }}\n        uses: actions/setup-node@v2\n        id: node-yarn\n        with:\n          node-version: "${{ env.NODE_VERSION }}"\n          cache: yarn\n      - name: status update\n        uses: ouzi-dev/commit-status-updater@v1.1.2\n        with:\n          name: ${{ inputs.name }}\n          description: ${{ inputs.description }}\n          status: pending\n      - id: validator\n        run: ${{ inputs.script }}\n      - if: ${{ success() }}\n        name: status update\n        uses: ouzi-dev/commit-status-updater@v1.1.2\n        with:\n          name: ${{ inputs.name }}\n          description: ${{ steps.validator.outputs.description }}\n          status: ${{ steps.validator.outputs.status }}\n</code>\nNotice that in the reusable workflow we have a new event <code>workflow_call</code> that helps us to define <em>inputs</em> for the job being called.\nIn this reusable job we define a bunch of inputs which helps us to control whether the steps in the job are run (making the reusable job even more flexible) by utilising a step\'s <code>if</code> condition and interpolating the input value.\nFor example, we don\'t always install the Node.js programming language, only if the caller requests it:\n<code>- if: ${{ inputs.install_node }}\n  uses: actions/setup-node@v2\n  id: node-yarn\n  with:\n    node-version: "${{ env.NODE_VERSION }}"\n    cache: yarn\n</code>\nNow one important consideration is that the reusable workflow will not inherit the parent workflow\'s environment. \nThis means secrets and environment variables need to be passed in via either <code>workflow_call.inputs</code> or <code>workflow_call.secrets</code>.\nAnnoyingly you can\'t just set an input with <code>${{ env.FOO }}</code> because the <code>env</code> context object can\'t be referenced. \nSo if your reusable job is used a lot then you either have to hardcode the value as an <code>input</code> to the reusable workflow or you store the environment variable as a secret in the GitHub UI so that you can reference it from the <code>workflow_call.secrets</code> property.\n<h3 id="GitActionstopic-16">Conclusion</h3>\nThere is so much more to explore with GitHub Actions. \nThe bits I\'ve mentioned here are just the tip of the iceberg. \nI strongly recommend you read the documentation and have a play around with these, and other features. \nLet me know on twitter what you think of GitHub Actions and whether you\'re using it in your projects.\n\n\n',
'<h2>Using branches in Git</h2>\n<div id="Usingbranchestoc"><a href="#Usingbranchestopic-0" target="_self">Using branches in Git</a><br><a href="#Usingbranchestopic-1" target="_self">Why and how branches are used in Git</a><br><a href="#Usingbranchestopic-3" target="_self">Pre-requisites:</a><br><a href="#Usingbranchestopic-4" target="_self">What are Git branches</a><br><a href="#Usingbranchestopic-5" target="_self">Commands used with branches</a><br><a href="#Usingbranchestopic-6" target="_self">Using branches for pull requests</a><br><a href="#Usingbranchestopic-7" target="_self">Resources:</a><br><a href="#Usingbranchestopic-8" target="_self">Glossary:</a><br><a href="#Usingbranchestopic-9" target="_self">Links:</a><br></div>\n<h3 id="Usingbranchestopic-1">Why and how branches are used in Git</h3>\nVersion control systems like Git help manage changes to files. \nSometimes, you’ll want (or need) to make some ‘feature’ or ‘patches’ to a collaborative research project. \nOr maybe you want to make some experimental changes to your code, but don’t want to touch your main code. \n\nThis, and more, is where branches come into play.\nIn this code-along we’ll go over what branches are, and how and why you would use them.\n<h3 id="Usingbranchestopic-3">Pre-requisites:</h3>\nObviously, have <a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git">Git installed</a>\nMake sure to <a href="http://codeasmanuscript.org/lessons/git/cheatsheet/">configure your git</a>\n<h3 id="Usingbranchestopic-4">What are Git branches</h3>\nIn very simple terms, git branches are individual projects within a git repository. \nDifferent branches within a repository can have completely different files and folders, or it could have everything the same except for some lines of code in a file.\n\nLet’s use a few real world examples (at least that I’ve used before, others may have used them differently):\nPretend you submitted a research article to a journal and they want you to revise it based on some reviewers comments. \nThere are several ways to deal with the comments, so instead of changing your main manuscript, you create a\n<code>revision</code> branch in your manuscript git repository. \nIn that branch you make the changes to your manuscript in response to the reviewers. \nOnce you are satisfied,\nyou merge the branch into the <code>master</code> branch and resubmit the article.\nImagine you have a dataset that multiple people work off of but that is also often updated with more data. \n\nYou think you found a problem with the dataset, but aren’t sure. \nSo you create a new branch <code>fixing</code> to fix the problems without messing with the master dataset. \nAfter you confirm the problem is real and that you have the solution, you submit a pull request of the <code>fixing</code> branch to be merged with the <code>master</code> branch.\nWhat is often the case in software development, a bug or missing feature in the software gets identified. \nBecause the software is already in production use (fairly stable, other people rely on it, etc), you can’t just make changes to the main software code. \n\nSo a <code>hotfix</code> or <code>feature</code> branch is created to address these problems, which will eventually get merged in with the <code>master</code> branch for the next version of the software. \nThis ensures that other people’s code isn’t broken everytime a bug gets fixed.\nThere are many uses of branches in Git. \nThe nice (and very powerful) thing about Git is the fact that branches are very cheap compared to other version control systems. \n\nBy cheap, I mean they don’t take up much disk space, it’s computationally easy to move between branches, and it’s (relatively) easy to merge branches together. \nThis is because of how Git represents branches, since they are simply <em>pointers</em> or an individual commit. \n<em>That’s it.</em> Just a pointer… Git commit history is a \n<a href="https://en.wikipedia.org/wiki/Directed_acyclic_graph">directed acyclic graph</a>, \nwhich means that every single commit always has a ‘parent’ commit (the previous commit in the history, or multiple parents when a merge happens), and any individual commit can have multiple ‘children’. \nThis history can be traced back through the ‘lineage’ or ‘ancestry’. \nThe branch just gives a name to each ‘lineage’ when a commit has multiple children.\n\nWhen you merge two branches together, the commit histories get merged together as well. \nWhich means that all the changes you made in each branch gets combined back into a single lineage, rather than two. \nThis makes it easier to work collaboratively on a project, since each individual could work on their own branches, without dealing with the messiness that could come from working all on one branch.\n<h3 id="Usingbranchestopic-5">Commands used with branches</h3>\nBranches are best understood visually. \nSo let’s first start with using \n<a href="https://onlywei.github.io/explain-git-with-d3/">this website</a> to see what the \n<code>branch</code>, <code>checkout</code>, and <code>merge</code> commands are doing.\nAfter we’ve tried that, let’s do it locally (on your own computer). \nHere is a sequence of commands to try out:\n<div><div><code>cd ~/Desktop mkdir \ngit-branches\ncd git-branches \ngit init # start a repo \ngit add .\ngit commit -m "First commit" # make the first commit \ngit branch testBranch # create branch \ngit checkout testBranch # move to branch\n## can also do git checkout -b testBranch\necho "Some text" > file.txt \ngit add file.txt\ngit commit -m "Added a file with text"\ngit checkout master\necho "Text in another file" > new-file.txt \ngit add new-file.txt \ngit commit -m "Added another file"\ngit log --graph --oneline --decorate --all\n# This command is long, so shorten it using aliases \ngit config --global alias.lg \'log --graph --oneline --decorate --all\'\ngit merge testBranch \ngit lg \ngit branch -d testBranch # delete the branch</code>\n\n<h3 id="Usingbranchestopic-6">Using branches for pull requests</h3>\nI mentioned this already, but branches are best used when doing a \n<a href="https://help.github.com/articles/using-pull-requests/">pull request</a> (unless the pull request is very small or few people work on the repository).\nThe steps to take would be:\nFork a repository on GitHub Clone it onto your computer Make a branch and move to it: <code>git checkout -b fixingBranch</code>\nMake changes to the files Commit the changes to the history Push the branch up to your forked version: <code>git push origin fixingBranch</code>\nOn GitHub, submit a Pull Request of your <code>fixingBranch</code>\nOnce the pull request is merged, \n<a href="https://github.com/blog/1377-create-and-delete-branches">delete</a> \nthe <code>fixingBranch</code> on your forked repo on GitHub and on your computer \n(<code>git checkout master &amp;&amp; \ngit pull upstream master &amp;&amp; \ngit branch -d fixingBranch</code>)\n\n<h3 id="Usingbranchestopic-7">Resources:</h3>\nIf you have any questions, often one of the best places to start is either<br>\n<a href="https://stackoverflow.com/questions/tagged/git">StackOverflow</a> or Google (which more likely links to StackOverflow).\n<h3 id="Usingbranchestopic-8">Glossary:</h3>\n<code>cd</code> - change directory directory - the same thing as a folder\n<code>mkdir</code> - make a directory\n<code>echo</code> - print a message to the screen or to a file if <code>></code> (redirect) is present.\n<code>git init</code> - start or initialize a git repository\n<code>git add</code> - put a file into the staging area, so that git starts tracking it\n<code>git commit</code> - send files in the staging/index area into the history (the git repository)\n<code>git log --graph --oneline --decorate --all</code> - view the commit history in the git repository and the branches, with each commit as one line.\n<code>git branch</code> - An individual line of commit history that contains files that may differ from other branches.\n<code>git checkout</code> - A way to move across the git commits and branches.\n<code>git merge</code> - Combine a branch into the current checked out branch (i.e. the branch you are on).\n<h3 id="Usingbranchestopic-9">Links:</h3>\n<a href="https://pcottle.github.io/learnGitBranching/">Interactive, visual tutorial on branching</a>\n<a href="https://www.atlassian.com/git/tutorials/using-branches/git-branch">Brief explanation of branching</a>\n\n\n',
'<h2>create an orphan branch</h2>\ngit checkout --orphan <branchname>\nThis will create a new branch with no parents.\nThen, clear everything in the orphan branch\n\ngit rm --cached -r\nor\ngit rm -rf\n\nand add the documentation files, commit them and push them up to github.\n\nto check log\ngit log\n\nA pull or fetch will always update the local information about all the remote branches.\nIf you only want to pull/fetch the information for a single remote branch, you need to specify it.\n\nTo switch back to your master branch\ngit checkout master\n\nreturn to the orphan branch\ngit checkout mybranch\n\nadded first file in the new branch\ngit commit -m\n\ngit push origin new_branch_name\n\n\n\n\n\n\n',
'<h2>What are SSH Keys?</h2>\n<div id="SSHKeystoc"><a href="#SSHKeystopic-1" target="_self">The History of The SSH Protocol</a> <a href="#SSHKeystopic-2" target="_self">What are SSH keys?</a> <a href="#SSHKeystopic-3" target="_self">How User Keys Work</a> <a href="#SSHKeystopic-4" target="_self">First Steps – SSH Key Generation</a> <a href="#SSHKeystopic-5" target="_self">Linux/Mac Instructions:</a> <a href="#SSHKeystopic-6" target="_self">Windows Instructions:</a> <a href="#SSHKeystopic-7" target="_self">How SSH Key Authentication Works</a> <a href="#SSHKeystopic-8" target="_self">Managing SSH Keys</a> <a href="#SSHKeystopic-9" target="_self">Cloud IAM offers SSH Key Management</a> </div>\nIf you spend enough time in an IT environment and with the rise of cloud infrastructure such as AWS, you will likely come across the term SSH keys. \nIf you’ve already come across this IT term, then you might find yourself wondering, what are SSH keys?\n\nSSH (Secure Shell) keys are an access credential that is used in the SSH protocol and they are foundational to modern Infrastructure-as-a-Service platforms such as AWS, Google Cloud, and Azure.\nBefore this post delves into an explanation on what are SSH keys, let’s take a quick look at the SSH protocol.\n\n<h3 id="SSHKeystopic-1">The History of The SSH Protocol</h3>\nThe first version of the SSH protocol was developed in the summer of 1995 by Tatu Ylonen. \nTatu was a researcher at the University of Helsinki when a sniffing attack was discovered on the university network. \n\nA sniffing attack intercepts and logs the traffic that takes place on a network and can provide attackers with usernames and passwords which can then be used to gain access to critical IT assets.\nThousands of credentials were impacted, including those belonging to community partnerships. \nThis sniffing attack motivated Tatu to figure out how to make networks more secure, and this ultimately led to the creation of the SSH protocol (<a href="https://youtu.be/OHBdKM7s5V4">SSH.com</a>).\n\nToday, the SSH protocol is widely used to login remotely from one system into another, and its strong encryption makes it ideal to carry out tasks such as issuing remote commands and remotely managing network infrastructure and other vital system components. \nThis is especially important in the era of cloud infrastructure and remote work.\nTo use the SSH protocol, a couple pieces of software need to be installed. \n\nThe remote systems need to have a piece of software called an SSH daemon, and the system used to issue commands and manage the remote servers needs to have a piece of software called the SSH client. \nThese pieces of software are necessary to create a proper communication channel using the SSH protocol (<a href="https://www.digitalocean.com/community/tutorials/ssh-essentials-working-with-ssh-servers-clients-and-keys#ssh-overview">DigitalOcean</a>).\nEssentially, SSH keys are an authentication method used to gain access to an encrypted connection between systems and then ultimately use that connection to manage the remote system.\n\n<h3 id="SSHKeystopic-2">What are SSH keys?</h3>\nSSH keys come in many sizes, but a popular choice is an<a href="https://www.linkedin.com/pulse/2048-bit-encryption-what-why-does-matter-srini-vasan"> RSA 2048-bit encryption</a>, which is comparable to a 617 digit long password. \nOn Windows systems, it is possible to<a href="http://statistics.berkeley.edu/computing/ssh-keys"> generate your own SSH key pair</a> by downloading and using an SSH client like PuTTY. \n\nOn Mac and Linux systems, it is possible to generate an SSH key pair using a terminal window. \nWatch the video below to find out how to generate your own RSA key pair on Mac and Linux.\n<iframe src="https://www.youtube.com/embed/FocgH8gTFVw?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>\n\nSSH keys always come in pairs, and every pair is made up of a private key and a public key. \nWho or what possesses these keys determines the type of SSH key pair. \nIf the private key and the public key remain with the user, this set of SSH keys is referred to as user keys.\n\nIf the private and public keys are on a remote system, then this key pair is referred to as<a href="https://www.ssh.com/ssh/host-key"> host keys</a>. \nAnother type of SSH key is<a href="https://www.ssh.com/ssh/session-key"> a session key</a>. \nWhen a large amount of data is being transmitted, session keys are used to encrypt this information.\n\nNow let’s take a closer look at how a private key and public key work. \nTo keep things simple, we will focus on how user keys work.\n\n<h3 id="SSHKeystopic-3">How User Keys Work</h3>\nIn a user key set, the private key remains on the system being used to access the remote system (i.e. the user’s desktop or laptop) and is used to decrypt information that is exchanged in the SSH protocol.\nPrivate keys should never be shared with anyone and should be secured on a system – i.e. the system is secured (full disk encryption,<a href="https://jumpcloud.com/platform/multi-factor-authentication-mfa"> MFA</a>), in the user’s possession, and the private key is secured via passphrase.\nA public key is used to encrypt information, can be shared, and is used by the user and the remote server. \nOn the server end, the public key is saved in a file that contains a list of authorized public keys. \n\n<h3 id="SSHKeystopic-4">First Steps – SSH Key Generation</h3>\nBefore you can start using SSH keys, first you need to generate your own SSH key pair on the system you would like to use to access a remote system. \nPlease see the instructions below.\n\n<h3 id="SSHKeystopic-5">Linux/Mac Instructions:</h3>\n<strong>Recommended</strong>: Install or Update OpenSSH\n<code>sudo apt-get update\nsudo apt-get install openssh-server</code>\n\nFirst, load a command line terminal and type the following command:\n<img src="https://lh4.googleusercontent.com/j4-CVJ1I-xRjdZOaZ8cXqN2hSUpCCYWDFe2oQK9i4XFt84BhrimIatRnpfRcKwMgVsJwCoMReFzODKRTPt5sHAy0oHyWN3Vgt7NrqBpDJ-CgBmYfTYdO2kj8gdGJtPw0juumpuQt">\nYour two key files will be created in the /HOME/.ssh/ directory by default, including your private key, but you may specify a direct location. \n\n<strong>Never share your private key.</strong>\n<strong>$HOME/.ssh/id_rsa.pub (public key</strong>\n<strong>$HOME/.ssh/id_rsa (private net)</strong>\n\n<img src="https://lh3.googleusercontent.com/8ve6RT8yo_KzV422Ute-qa_mZoI6eJVAZQXqu0SSKnbCZGDLVSKyAPcyipPYWSE-m0nRbemjldlHlASXaMhmq9ShIEJWydAfgvw8EgZmNTqhUrcY4S1MfXVW48c-H_j_lFvKVE98">\n\nPer above, you’ll be given the option to set a passphrase to make it more difficult for unauthorized users to log into your accounts by protecting the confidentiality of your keypairs.\nYour public key is uploaded to your server to use SSH key authentication for access control. \n\nThe <a href="https://linuxhint.com/use-ssh-copy-id-command/">ssh-copy-id command</a>, which is part of the OpenSSH package, can be used to automate the transfer process in the syntax of:\n<code>ssh-copy-id username@host</code>\nYou may also add the key to your account using<a href="https://support.jumpcloud.com/support/s/article/how-do-i-add-an-ssh-key-to-my-jumpcloud-account"> JumpCloud</a>, or by manually placing the public SSH key on the remote server (<a href="https://www.digitalocean.com/community/tutorials/ssh-essentials-working-with-ssh-servers-clients-and-keys#basic-connection-instructions">DigitalOcean</a>).\n<a href="https://jumpcloud-1.wistia.com/medias/5usy6ga9lo?wvideo=5usy6ga9lo"><img src="https://embedwistia-a.akamaihd.net/deliveries/c8719e08ca0f214b1cab32d7d9f7cf71.jpg?image_play_button_size=2x&amp;image_crop_resized=960x540&amp;image_play_button=1&amp;image_play_button_color=41c8c6e0"></a>\n\n<a href="https://jumpcloud-1.wistia.com/medias/5usy6ga9lo?wvideo=5usy6ga9lo">Mac and Linux with CLI – jumpcloud-1</a>\n<h3 id="SSHKeystopic-6">Windows Instructions:</h3>\n<img src="https://lh4.googleusercontent.com/Xxs3ElpyXtbw_A92tJBEaHIr0rfnQ0klXz5DV5HRYCPQpDgYQYY-ulqCj7kfNek5m5B2fVBv3jNsUahOQhWZoIV3nS1YFYvVuzlHqnrWvMwb_eBa_PsV3XDweV1BPE3TBYSXyR4z">\n\nDownload and install the PuTTY SSH keygen program.\n\nLoad the PuTTYgen program\nClick the <strong>Generate</strong> button and select RSA (SSH-2)\nYou may opt for a 4096 bit key, but some applications may not accept it and it may result in increased CPU usage during the ‘handshake’ process.\nKey in a passphrase for additional security\nYou must select <strong>Save private key</strong> and specify a location\n<strong>Do not share this file with unauthorized individuals</strong>\nYou can copy and paste your public key from the field above with <strong>Select All </strong>or hit the <strong>Save public key</strong> button.\nYou may add the key to your account using<a href="https://support.jumpcloud.com/support/s/article/how-do-i-add-an-ssh-key-to-my-jumpcloud-account"> JumpCloud</a>\n<a href="https://jumpcloud-1.wistia.com/medias/gi8wc7hlbe?wvideo=gi8wc7hlbe"><img src="https://embed-fastly.wistia.com/deliveries/af124ab6985c9e4c76abe3183720f6cb.jpg?image_play_button_size=2x&amp;image_crop_resized=960x540&amp;image_play_button=1&amp;image_play_button_color=41c8c6e0"></a>\n<a href="https://jumpcloud-1.wistia.com/medias/gi8wc7hlbe?wvideo=gi8wc7hlbe">Windows SSH Pair Keygen using PuTTY – jumpcloud-1</a>\n\n<h3 id="SSHKeystopic-7">How SSH Key Authentication Works</h3>\nAfter completing the steps mentioned above, use your terminal to enter in your ssh username and the IP address of the remote system in this format: <code>ssh username@my_ip_address</code>. \nThis will initiate a connection to the remote system using the SSH protocol. \nThe protocol and specified username will then tell the remote server which public key to use to authenticate you. \nThen the remote server will use that public key to encrypt a random challenge message that is sent back to the client. \n\nThis challenge message is decrypted using the private key on your system.\nOnce the message is decrypted, it is combined with a previously arranged session ID and then sent back to the server. \nIf the message matches with what the server sent out, the client is authenticated, and you will gain access to the remote server. \n\nThis process proves to the server that you have the corresponding private key to the public key it has on file.\nHowever, the security that this authentication process provides can be undermined when SSH keys are not properly managed. \n\n<h3 id="SSHKeystopic-8">Managing SSH Keys</h3>\nIt is imperative that proper SSH key management is in place because they often grant access to mission-critical digital assets. \nAlso, companies tend to have a lot of SSH keys. \nIn fact, Fortune 500 companies will often have <em>several millions</em> of these.\n\nDespite the difficulty in trying to manually manage millions of SSH keys, having an SSH key management system in place is continuously overlooked. \nSSH.com did some digging and discovered a company that had 3 million SSH keys “that granted access to live production servers.\nOf those, 90% were no longer used. \n\nRoot access was granted by 10% of the keys ”. \nAn effective SSH key management system in place would have gone a long way in reducing this concerning security risk.\nIT has a couple options to<a href="https://jumpcloud.com/blog/identity-service-function-ssh-key-management/"> gain control over SSH keys</a> in their environment. \n\nOne of these includes using an SSH key management tool. \nHowever this means having to manage one more platforms in addition to managing an SSO provider, a directory service, and maybe a system management solution. \nA new solution has emerged that is providing IT with a second option:<a href="https://jumpcloud.com/platform"> JumpCloud Directory Platform</a>.\n\n<h3 id="SSHKeystopic-9">Cloud IAM offers SSH Key Management</h3>\nThis <a href="https://jumpcloud.com/blog/cloud-identity-and-access-management/">cloud-based identity and access management solution</a> provides IT with one central place to manage SSH keys. \nFurthermore, IT can also centralize user authentication to Mac, Linux, and Windows <a href="https://jumpcloud.com/blog/centralized-system-and-user-management/">devices</a>, cloud <a href="https://jumpcloud.com/blog/idaas-and-aws-cloud-servers/">servers</a>, wired and WiFi <a href="https://jumpcloud.com/blog/secure-wifi-networks-cloud-radius/">networks</a>, web-based and on-prem <a href="https://jumpcloud.com/blog/true-single-sign-on-systems-apps-network/">applications</a>, and virtual and on-prem storage. \nWith one central place to manage a user’s authentication to all of their resources, it becomes a si\nmple matter of a few clicks to deprovision users from all of their resources, including SSH key access to remote systems.\n\n\n',
'<h2>ModemPOOL</h2>\n猫池\n就是将相当数量的Modem使用特殊的拨号请求接入设备连接在一起，可以同时接受多个用户拨号连接的设备。\n\n<a href="https://www.aliexpress.com/w/wholesale-16-port-gsm-modem-pool.html" class="whitebut ">16-port-gsm-modem-pool</a>\n<a href="https://ozeki.hu/p_7672-how-to-send-sms-with-a-gsm-modem-pool.html" class="whitebut ">send-sms-with-a-gsm-modem-pool</a>\n\n',
'<h2>network address translation or port forwarding</h2>\nEnabling outside access to an internal computer\n\nPlease note: this tutorial is for advanced users. \nYour router\'s firewall is there to protect you from evildoers who try to control your computer over the Internet. \nMake sure that any service you expose to the Internet is secured with a strong password.\n\nEnabling outside access to an internal computer on a home network requires that you set up NAT - "network address translation," or port forwarding. \n\nForwarding sends requests for ports on the outside of your firewall to the right computer on the inside.\n\nFor instance, someone on the outside requests a page from a web server at your router\'s IP address. \nWith port forwarding set up, your router knows to forward requests for port 80 (a web server\'s default port) to the computer with the web server running only - and none of the others on your network.\n\nPort forwarding is only necessary when you want to expose a service to computers on the Internet outside your firewall. \n\nset up port forwarding:\n\nStep 1. \nDetermine your server\'s internal IP address.\n\nAll the computers on your internal network have an IP address which looks something like 192.168.0.XXX. \nGet on the computer with the server running and open a command window. \n\nThen type ipconfig to determine the machine\'s internal address, like so:\n\n\nC:\\Gina&gt;ipconfig\n\nWindows IP Configuration\n\nEthernet adapter Local Area Connection:\n\n        Connection-specific DNS Suffix  . \n:\n        IP Address. \n. \n\n. \n. \n. \n\n. \n. \n. \n\n. \n. \n. \n\n. \n: 192.168.0.11\n        Subnet Mask . \n. \n\n. \n. \n. \n\n. \n. \n. \n\n. \n. \n. \n\n: 255.255.255.0\n        Default Gateway . \n. \n. \n\n. \n. \n. \n\n. \n. \n. \n\n: 192.168.0.1\n\n\nIn this case, as you can see, the server\'s internal IP address is 192.168.0.11.\n\nStep 2. \nConfigure your router.\n\nMost routers have an web-based administrative interface that\'s located at http://192.168.0.1. \n(This address does depend on your model. \n\nConsult your router user guide for more info.)\n\nOnce you\'ve gone to the router administration, entered the password (if one is set up), there should be an area called "Port forwarding." There, you\'ll set the port number that requests from the Internet will come in, and the internal computer that should fulfill those requests. \nHere\'s a screenshot of my Netgear router set up to port forward 5900 to my VNC server, which is at 192.168.0.11 (see above). \nClick on the image to see a larger version.\n\nHere\'s a table of common services and their default port numbers.\n\nAny other services you port forward for that I missed? Add it in the comments to this article or drop me a note at tips at lifehacker.com.\n\n',
'<h2>How exactly do TCP connections work?</h2>\nhttps://www.ionos.com/digitalguide/server/know-how/introduction-to-tcp/\nTransmission Control Protocol\nTCP allows for transmission of information in both directions. \nThis means that computer systems that communicate over TCP can send and receive data at the same time, similar to a telephone conversation. \n\nThe protocol uses segments (packets) as the basic units of data transmission. \nIn addition to the payload, segments can also contain control information and are limited to 1,500 bytes. \nThe TCP software in the network protocol stack of the operating system is responsible for establishing and terminating the end-to-end connections as well as transferring data.\n\nThe TCP software is controlled by the various network applications, such as web browsers or servers, via specific interfaces. \nEach connection must always be identified by two clearly defined endpoints (client and server). \nIt doesn’t matter which side assumes the client role and which assumes the server role. \n\nAll that matters is that the TCP software is provided with a unique, ordered pair consisting of IP address and port (also referred to as "2-tuple" or "socket") for each endpoint.\n\n<h3>The three-way handshake: How a TCP connection is established in detail</h3>\nPrerequisites for establishing a valid TCP connection: Both endpoints must already have a unique IP address (IPv4 or IPv6) and have assigned and enabled the desired port for data transfer. \n\nThe IP address serves as an identifier, whereas the port allows the operating system to assign connections to the specific client and server applications.\nThe actual process for establishing a connection with the TCP protocol is as follows:\nFirst, the requesting client sends the server a SYN packet or segment (SYN stands for synchronize) with a unique, random number. \n\nThis number ensures full transmission in the correct order (without duplicates).\nIf the server has received the segment, it agrees to the connection by returning a SYN-ACK packet (ACK stands for acknowledgment) including the client\'s sequence number plus 1. \nIt also transmits its own sequence number to the client.\n\nFinally, the client acknowledges the receipt of the SYN-ACK segment by sending its own ACK packet, which in this case contains the server\'s sequence number plus 1. \nAt the same time, the client can already begin transferring data to the server.\n\n<img class="lazy" data-src="https://www.ionos.com/digitalguide/fileadmin/_processed_/d/e/csm_EN-tcp_1f6b3edf44.png">\nProcess of establishing a TCP connection (three-way handshake)\n\nSince the TCP connection is established in three steps, the connection process is called a three-way handshake.\n\nNote\nIf the server port is closed or access is blocked, the client receives a TCP RST packet (reset) instead of an acknowledgment packet.\n\n',
'<h2>netstat</h2>\n<a href="https://v.douyin.com/hrbyK4e/" class="whitebut ">自查电脑被监控</a>\n\nhttps://www.linuxprobe.com/netstat-common-method.html\n\nnetstat is a command-line network utility that displays network connections for Transmission Control Protocol (TCP), routing tables, and a number of network interface and network protocol statistics.\nThe following cheatsheet goes over a few common netstat commands. For more advanced commands you need to consult the official man pages. \n\nhttps://man.cx/netstat(1)\nhttps://linux.die.net/man/8/netstat\n\n# To view which users/processes are listening to which ports:\nsudo netstat -lnptu\n\n# To view routing table (use -n flag to disable DNS lookups):\nnetstat -r\n\n# Which process is listening to port <port>\nnetstat -pln | grep <port> | awk \'{print $NF}\'\n\n# Example output: 1507/python\n\n# Fast display of ipv4 tcp listening programs\nsudo netstat -vtlnp --listening -4\n\n# Displays network-related information such as open connections, open socket ports, etc.\n\n# List all ports:\nnetstat -a\n\n# List all listening ports:\nnetstat -l\n\n# List listening TCP ports:\nnetstat -t\n\n# Display PID and program names:\nnetstat -p\n\n# List information continuously:\nnetstat -c\n\n# List routes and do not resolve IP to hostname:\nnetstat -rn\n\n# List listening TCP and UDP ports (+ user and process if you\'re root):\nnetstat -lepunt\n\n# Print the routing table:\nnetstat -nr\n\n',
'<h2>Netstat Command for DOS and Windows</h2>\n<table>\n<tr><th>Displays protocol statistics and current TCP/IP network connections. </th></tr>\n<tr><th>NETSTAT [-a] [-e] [-n] [-s] [-p proto] [-r] [interval] </th></tr>\n<tr><th>-a  </th><td>Displays all connections and listening ports. (Server-side connections are normally not shown). </td></tr>\n<tr><th>-e  </th><td>Displays Ethernet statistics. This may be combined with the -s option. </td></tr>\n<tr><th>-n </th><td>Displays addresses and port numbers in numerical form.  </td></tr>\n<tr><th>-p proto </th><td>Shows connections for the protocol specified by proto; proto may be tcp or udp. If used with the -s option to display per-protocol statistics, proto may be tcp, udp, or ip. </td></tr>\n<tr><th>-r </th><td>Displays the contents of the routing table. </td></tr>\n<tr><th>-s </th><td>Displays per-protocol statistics. By default, statistics are shown for TCP, UDP and IP; the -p option may be used to specify a subset of the default. </td></tr>\n<tr><th>interval </th><td>Redisplays selected statistics, pausing interval seconds between each display. Press CTRL+C to stop redisplaying statistics. If omitted, netstat will print the current configuration information once</td></tr>\n</table>\n\n',
'<h2>Using A Laptop as a Wireless Router in Windows 10</h2>\nhttps://www.alphr.com/laptop-pc-wireless-router/\nOpen the “Settings” menu in Windows 10 or 11.\nSelect “Network & Internet”,\nthen click on “Mobile hotspot” from the left menu.\nToggle “Share my Internet connection with other devices” to on.\n\nTurn on the Wi-Fi on the other device (if not already active) and search for network.\n<img class="lazy" data-src="https://youwuqiong.top/wp-admin/img.php?imgUrl=https://i0.wp.com/www.alphr.com/wp-content/uploads/2020/05/2-1.png">\n\nUsing A Laptop as a Wireless Router in Windows 8\nNavigate to “Control Panel > Network Connections.”\n<img class="lazy" data-src="https://youwuqiong.top/wp-admin/img.php?imgUrl=https://i0.wp.com/www.alphr.com/wp-content/uploads/2020/05/4.png">\n\nRight-click your Wi-Fi adapter and select “Properties.”\n<img class="lazy" data-src="https://youwuqiong.top/wp-admin/img.php?imgUrl=https://i0.wp.com/www.alphr.com/wp-content/uploads/2020/05/5.png">\n\nSelect the “Sharing” tab, check the box next to “Allow other network users to connect through this computer’s Internet connection,” then click on “OK.”\n\n<img class="lazy" data-src="https://youwuqiong.top/wp-admin/img.php?imgUrl=https://i0.wp.com/www.alphr.com/wp-content/uploads/2020/05/6.png">\n\nOpen the Command Prompt as administrator.\nType the following:\nnetsh wlan set hostednetwork mode=allow ssid=”<YOURSSID>” key=”<PASSWORD>” and press “Enter.”\n<YOURSSID> is the network name and <PASSWORD> is the network password.\n\nNow, type: netsh wlan start hostednetwork and press “Enter.”\n\nThen, type: netsh wlan show hostednetwork to check that everything is functioning correctly.\n\n',
'<h2>DHCP on Home Networks</h2>\n<div id="DHCPtoc" class="toc"><a href="#DHCPtopic-0" target="_self">DHCP Client</a><br><a href="#DHCPtopic-1" target="_self"> Client Configuration</a><br><a href="#DHCPtopic-2" target="_self"> DHCP Server</a><br><a href="#DHCPtopic-3" target="_self">DHCP Server Location</a><br><a href="#DHCPtopic-4" target="_self"> DHCP Server  Settings and Configuration</a><br><a href="#DHCPtopic-5" target="_self"> Enabled</a><br><a href="#DHCPtopic-6" target="_self">Assigning Static Addresses Using DHCP</a><br><a href="#DHCPtopic-7" target="_self">Troubleshooting DHCP</a><br><a href="#DHCPtopic-8" target="_self">Common Questions and Answers</a><br><a href="#DHCPtopic-9" target="_self"> <b>Q-</b> Can I assign static IP addresses on the client  and still use DHCP?</a><br><a href="#DHCPtopic-10" target="_self"> <b>Q-</b> Can I assign DNS servers manually even though I\'m using DHCP?</a><br><a href="#DHCPtopic-11" target="_self"> Q<b>-</b> My IP address doesn\'t appear to change does this mean that I have a static IP address?</a><br><a href="#DHCPtopic-12" target="_self"> <b>Q-</b> Can I have more than one DHCP server on a network?</a><br><a href="#DHCPtopic-13" target="_self"> <b>Q-</b> Does a DHCP server provide IPv6 addresses?</a><br><a href="#DHCPtopic-14" target="_self"> Q- Do Wi-Fi Clients use DHCP</a><br><a href="#DHCPtopic-15" target="_self"> Q- How does a DHCP client locate a DHCP server?</a><br><a href="#DHCPtopic-16" target="_self"> Q-What is the IP address of the DHCP server?</a><br><a href="#DHCPtopic-17" target="_self"> Q- How do you find the address of a DHCP Server?</a><br><a href="#DHCPtopic-18" target="_self"> Q- Does DHCP provide the address of the default gateway?</a><br><a href="#DHCPtopic-19" target="_self"> Q- Should I assign static IP addresses to all network devices?</a><br><a href="#DHCPtopic-20" target="_self"> Q- Why should I assign a static IP address to network printers?</a><br><a href="#DHCPtopic-21" target="_self"> Q- Should DHCP be on or OFF?</a><br><a href="#DHCPtopic-22" target="_self">Video -Static vs Dynamic IP Addresses</a><br><a href="#DHCPtopic-23" target="_self">Terms and Acronyms</a><br><a href="#DHCPtopic-24" target="_self">Quick Quiz</a><br></div></center><br><br>\n\n<b>What is DHCP?\nDHCP</b> stands for <b>Dynamic Host configuration protocol</b>  and provides a mechanism for automatically allocating IP (IPv4) addresses to network devices e.g. computers.\nDHCP allows devices to join a home network without the need for any device setup.\nThe DHCP protocol consists of two components.\n\nA DHCP client\nA DHCP server\n<h3 id="DHCPtopic-0">DHCP Client</h3>\nAll modern operating systems come equipped with a <b>DHCP client,</b> and by default, they are all configured to use DHCP.\nA <b>DHCP client</b> is responsible for requesting an IP address and assigning it to the computer etc.\n<h4 id="DHCPtopic-1"> Client Configuration</h4>\nIf you go to you adaptor settings page (see<a href="/setting-up-static-ip-address-windows-10/" target="_blank"> this tutorial</a> for windows 10) or Wi-Fi settings page you will see a page similar to the one below:\n<img class="lazy loaded" data-src="https://stevessmarthomeguide.com/wp-content/uploads/standard-ip-address-settings.jpg" src="https://stevessmarthomeguide.com/wp-content/uploads/standard-ip-address-settings.jpg" data-was-processed="true">\nWhen you enable the setting to <b>obtain IP address automatically</b> you are enabling  the <b>DHCP client.</b>\nThe client can obtain an IP address from the DHCP server and also the DNS server addresses.\nHowever they are both configurable as seen in the screen shot above.\n<h4 id="DHCPtopic-2"> DHCP Server</h4>\nA <b>DHCP server</b> is responsible for allocating IP address and other information to requesting clients.\nThe <b>DHCP server</b> is configured with a <b>range of IP addresses</b> that it can assign, and also with other settings like DNS servers, default gateway addresses etc.\nIP addresses from a<b> DHCP server</b> are normally <b>leased</b>, and must be<b> renewed</b> periodically.\nThis renewal process happens in the background, and doesn’t require any user intervention.\nA DHCP client will request to keep it\'s IP address when it renews which is why device IP addresses don\'t normally change on home networks.\n<h3 id="DHCPtopic-3">DHCP Server Location</h3>\nOn home networks the DHCP server is on  the<b> home router</b> or<b> home hub</b>.\nMost home routers will have the DHCP server <b>enabled by default</b> (turned on).\nHowever you can use another computer e.g raspberry pi  as a DHCP server, but it is generally not done.\n<div class="lazy">data-If you are thinking of using another device to be a DHCP server it is important to understand that you can only have one DHCP server on a network.</div>.\n<h3 id="DHCPtopic-4"> DHCP Server  Settings and Configuration</h3>\nOn home networks there is generally nothing to be configured.\nIf you go the admin page on your <b>home router</b> you will see DHCP configuration options similar to the screen shot below.\n<img class="lazy" data-src="https://stevessmarthomeguide.com/wp-content/uploads/dhcp-server-settings.jpg">\nThe common settings are:\n\nEnabled\nAuthoritative DHCP\nServer Address Range\nLease Time\n\n<h4 id="DHCPtopic-5"> Enabled</h4>\nThis is normally selected to make the DHCP server active (on).\n<b>Authoritative DHCP</b>\nThis is normally selected to make the DHCP server authoritative for this address pool as it is usually the only server on the network.\n<b>DHCP Address Range</b>\nYou usually leave these as the default settings are usually adequate.\nYou should note that the <b>allocation range</b> on my home router is 192.168.1.64-192.168.1.253.\nThe home router itself uses address 192.168.1.254 and so it leaves me 192.168.1.1-.192.168.1.63 for allocating to <b>static clients</b> if needed.\nOnly assigning <b>static addresses</b> in this range will help avoid <b>IP address conflicts</b>.\nYou should also start at address 192..168.1.1 or 192..168.1.2 and work up in case you need to increase the address range at a later date.\n<b>Note:</b> Some networks use <b>192..168.1.1</b> for the default gateway address.\n<b>Subnet Mask</b> - Normally 255.255.255.0 on home networks see <a title="Home Network Subnet Mask Explained" href="https://stevessmarthomeguide.com/home-network-subnet-mask-explained/" target="_blank" rel="noopener">subnet masks explained.</a>\n<b>Default Gateway</b> - The IP address of your home router\n<b>Lease Time</b>\nIP addresses are leased to the client a must be renewed before the lease expires. You can see from my settings that the lease period is 1 day.\nThe default setting is generally used.\n<h3 id="DHCPtopic-6">Assigning Static Addresses Using DHCP</h3>\nMost devices on a network will be automatic IP addresses assigned using a DHCP server.\nHowever devices like:\n\nNetwork printers\nSmart Hubs\nNetwork Printers\n\nAlthough you can manually assign a static address to a client it is not really the best way as it is very inflexible.\nA better way is to use the DHCP server to assign the address on a <b>permanent basis</b> and almost all home routers have this ability.\nThis is usually known as <b>address reservation</b> and the screen shot below shows my Tplink router settings.\n<img class="lazy" data-src="https://stevessmarthomeguide.com/wp-content/uploads/tp-link-address-reservation.jpg">\nIt works by using the <b>MAC address</b> of the client(which is fixed), to fix the IP address to that client.\nUsing DHCP to assign <b>static IP addresses</b> greatly reduces the possibility of duplicate IP addresses.\n<h3 id="DHCPtopic-7">Troubleshooting DHCP</h3>\nYou will need to look at the clients and the home router.\nThe main client trouble shooting tool is the command line tool  <b>ipconfig</b> (windows) and<b> ifconfig</b> (Linux).\nThis tool will show you the<b> IP addresses</b> assigned to your device.\nWhat you are looking for when using this tool is that your computer has a valid IP address,Gateway address, and DNS server address.\n<img class="lazy" data-src="https://stevessmarthomeguide.com/wp-content/uploads/ipconfig-dhcp.jpg">\nIf your client has an IP address beginning with <b>169</b> or an address of <b>0.0.0.0</b> then something is wrong, and it can\'t locate a DHCP server.\nIn the screen shot above you can see that the client is configured for DHCP and that the IP address has been leased.\n<b>Router Checks - </b>You will also need to logon to your home router and check that<b> DHCP has been enabled.</b>\nIf you have many clients on the network then you may also need to <b>adjust the address range.</b>\nIf you do adjust the address range then make sure that you haven\'t already assigned static addresses in this range.\n<h3 id="DHCPtopic-8">Common Questions and Answers</h3>\n<h4 id="DHCPtopic-9"> <b>Q-</b> Can I assign static IP addresses on the client  and still use DHCP?</h4>\n<b>A-</b> Yes most DHCP servers (even on home networks) allow you to <b>exclude IP addresses</b> and address ranges.\n<h4 id="DHCPtopic-10"> <b>Q-</b> Can I assign DNS servers manually even though I\'m using DHCP?</h4>\n<b>A-</b> Yes there is a separate setting for that on the client configuration.\n<h4 id="DHCPtopic-11"> Q<b>-</b> My IP address doesn\'t appear to change does this mean that I have a static IP address?</h4>\n<b>A-</b> No not necessarily as when a DHCP client renews its IP address it asks for the same address and will normally be allowed to keep it.\n<h4 id="DHCPtopic-12"> <b>Q-</b> Can I have more than one DHCP server on a network?</h4>\n<b>A-</b> Yes and No.  You might find multiple DHCP servers on large corporate networks. However the set up is tricky and they must be configured so as not to assign the same IP addresses from the same address range. <b>On Home networks you should only have one.</b>\n<h4 id="DHCPtopic-13"> <b>Q-</b> Does a DHCP server provide IPv6 addresses?</h4>\n<b>A-</b> Currently No as IPv6 addresses on home networks are auto assigned by the client and don\'t need DHCP.\n<h4 id="DHCPtopic-14"> Q- Do Wi-Fi Clients use DHCP</h4>\nA- Yes-This is usually the default setting.\n<h4 id="DHCPtopic-15"> Q- How does a DHCP client locate a DHCP server?</h4>\nA- It uses broadcasts.\n<h4 id="DHCPtopic-16"> Q-What is the IP address of the DHCP server?</h4>\nA- This isn\'t really relevant as the client will locate it using <b>broadcasts</b>.\n<h4 id="DHCPtopic-17"> Q- How do you find the address of a DHCP Server?</h4>\nA- On windows the ipconfig /all command will show you the DHCP IP address of the DHCP server if the client is configured to use it.\n<img class="lazy" data-src="https://stevessmarthomeguide.com/wp-content/uploads/dhcp-server-address.jpg">\n<h4 id="DHCPtopic-18"> Q- Does DHCP provide the address of the default gateway?</h4>\nA- Yes\n<h4 id="DHCPtopic-19"> Q- Should I assign static IP addresses to all network devices?</h4>\nA- No only to devices you need to manage\n<h4 id="DHCPtopic-20"> Q- Why should I assign a static IP address to network printers?</h4>\nA- Because you will need to know the IP address in order to manage it.\n<h4 id="DHCPtopic-21"> Q- Should DHCP be on or OFF?</h4>\nA- On almost all home networks it should be on I can\'t think of a reason to turn it off.\n<h3 id="DHCPtopic-22">Video -Static vs Dynamic IP Addresses</h3>\n<iframe src="https://www.youtube.com/embed/2yOMNugsdE0?feature=oembed" frameborder="0" allow="accelerometer;" allowfullscreen=""></iframe>\n<h3 id="DHCPtopic-23">Terms and Acronyms</h3>\n<b>MAC address</b>- Also known as the Ethernet or physical address is fixed and part of the hardware.\n<b>Static Address</b> - An IP address that is assigned manually.\n<b>Dynamic Address</b> - An IP address assigned automatically and can change from time to time.\n<b>IP Address Conflict</b> - When Two computers(devices) are configured to use the same IP address.\n<b>Default Gateway</b> — The IP address of the device that provides access to the Internet i.e. your home router.\n<b>Broadcast</b> -A message that is sent to all clients on a network.\n<b>Resources and Related tutorials</b>\n<b>Useful Ipconfig commands</b>\n<b>ipconfig /all </b>  -This command will show IP and DNS settings\n<b>ipconfig /release</b>  -This command will release the IP address from DHCP\n<b>ipconfig /renew</b> -This command will renew the IP address using DHCP\n<b>Useful Rapberry Pi /Linux commands</b>\n<b>ifconfig</b> - Shows basic address details for all Interfaces.\n<b>dhclient</b> lets you renew and release IP addresses:\nto release use:\n<b>dhclient -r</b>\nto renew use:\n<b>dhclient</b>\nto target a particular interface (e.g eth0) use\n<b>dhclient -r eth0</b>\nto enable more details use the -v (verbose) switch\n<b>dhclient -r -v eth0</b>\n\n<h3 id="DHCPtopic-24">Quick Quiz</h3>\n<b>Q-1</b> Which devices do you think would require a static IP address?\nA- Your mobile Phone\nB -Your Tablet\nC -Your network router\nD- Smart switches on the network\n<b>Q 2</b>-You Haven\'t documented your network and need to manage a smart switch on the network how do you find it\'s IP address?\nA -Use the Ping command\nB -Look at address reservations on the DHCP server\nC- Look for address assignments on the DHCP server.\n<b>Q 3</b>- Using DHCP to assign <b>static IP addresses</b> greatly reduces the possibility of duplicate IP addresses?True or False?\nQ 4 Yo need to tell all clients the IP address of the DHCO server? True or False?\nQ5- On Which device do you normally find the DHCP server?\n\n',
'<h2>Port forwarding</h2>\nhow to set up virtual server on TP-Link wireless router?\nWhat is Port Forwarding?\n\nPort forwarding is a way of making your router use a specific port to communicate with certain devices. \n\nBy setting a specific port for your devices, you are telling your router to always accept requests for those ports and forward data to a device’s private IP address.\n\nIn order to understand port forwarding, it helps to understand a little about how routers work first. \n\nYour router’s job is to transmit an internet signal to all your devices over a local area network (LAN). \n\nTo do this, your router assigns each device in your LAN its own local IP address. \n\nFor example, your computer will have a private IP address like 192.168.0.2 or 10.0.0.2\n\nThen, on top of that, the applications and services on each device are also assigned a port number. \n\nFor example, an application on your computer will have an IP address with a port number attached like 192.168.0.2:80 or 10.0.0.2:80.\n\nWith this unique IP address and port number, your router knows which program or service to send information to. \n\nThis lets you and others access devices and programs on your LAN over a wide area network (WAN).\n\nExample\nShare my personal website I’ve built in a local network with my friends through the internet.\n<b>For example</b>, the personal website has been built on my home PC (192.168.0.106). \n\nI hope that my friends on the internet can visit my website in some way and the port number is 90. \nThe PC is connected to the router with the WAN IP address 218.18.232.154.\n<img src="https://static.tp-link.com/image001_1490601216454f.jpg">\n\n<strong>Step 1</strong> Log into the router’s web management page:\n<a href="https://www.tp-link.com/support/faq/87/">How do I log into the web-based Utility (Management Page) of TP-Link wireless router?</a>\n\n<strong>Step 2</strong> \nClick on <b>Advanced-&gt;NAT Forwarding<strong>-&gt;Virtual Server</strong></b>, then click <strong>Add </strong>button.\n<img src="https://static.tp-link.com/upload/faq/image-20211025190704-8_20211025111129c.png">\n\n<strong>Step 3</strong> In the Service section of this screen, type in the detailed information you confirmed with the service’s provider. \nFor this example, if you want to open port 90 for only one of your devices 192.168.0.106, you can configure it like below:\n<img src="https://static.tp-link.com/upload/faq/image-20211025190704-9_20211025111131e.png">\n\n<b>Service Type: </b>Select the service you want to use from the <b>View Existing Services</b> list. \nIf the<b> View Existing Services</b> menu does not list the service that you want to use, you can enter the <b>Service Type</b> manually.\n\n<b>External Port and Internal Port:</b> Select the service you want to use from the <b>View Existing Services </b>list, then the<b> </b><b>External Port</b> and <b>Internal Port</b> will be automatically filled in.\n\nIf the <b>View Existing Services</b> menu does not list the service that you want to use, you can enter the <b>External Port and Internal Port</b> manually. \n\nYou should verify the port number that the service needs.\n**Note: \n1. If you need to input a port range xx-xx when configuring the port forwarding, please leave the internal port empty.\n2. The External Port and Internal Port usually can be the same.\n\n<b>Internal IP: </b>Specify the IP address of the device you are opening the port for.<b> </b>\n<b>Protocol: </b>Specify the protocol used for this application from the pull-down list, if you are not sure, choose <b>ALL</b>.\n<strong>Step 4</strong> Click the <strong>Save</strong> button to save the settings. \n\n<strong>Note:</strong> To ensure the Virtual Server entry will take effect all the time. \nYou´d better assign a static IP address for your server, because its IP address may change when using the DHCP function. \n\nOr you can just do an IP address reservation for the server. \nPlease refer to the following link to do that:\n<a href="https://www.tp-link.com/support/faq/1381/">How to configure Address Reservation on TP-Link wireless router(new logo)?</a>\n\n<strong>Step 5</strong> Go to<b> Advanced-&gt;Status </b>page and check the <strong>WAN IP Address</strong> of the router. \nNow you can try to use the <b>http:// WAN IP: port number</b> (in this example: http:// 218.18.232.154:90) to visit your personal website.\n<img src="https://static.tp-link.com/upload/faq/image-20211025190704-10_20211025111130b.png">\n\nIf the WAN IP Address of the router is not a public IP Address, but a Private IP Address, that means there is another NAT device connected to the WAN port of the TP-Link router, you need to open the service ports on that device as well.\nNote： For the CG-NAT ISP: <strong>Comporium</strong> and <strong>Direct link - radio service</strong>, provide the customer a private IP, that will cause you can’t use the OpenVPN or port forwarding and affect the NAT Type. \nYou can contact the ISP and ask them to offer a Static IP address.\n\nFor how to find out the IP Address is a public one or a private one, please refer to this link:\n<a href="http://en.wikipedia.org/wiki/Private_network">http://en.wikipedia.org/wiki/Private_network</a>\n\n<strong>Note:</strong>\nA) If you want to open port 80 for a local device, please change the router’s remote management port number first since its default number is 80. \nAs for the internal port, 80 is reserved for the local management and cannot be modified although the remote management port has changed.\n\n<img  src="https://static.tp-link.com/upload/faq/image-20211025190704-11_20211025111129f.png" >\nGo to <b>Advanced-&gt;System Tools-&gt;Administration</b>, and then change the <strong>HTTP Port</strong> to other ports such as 8080 and <strong>Save</strong>.\n<img src="https://static.tp-link.com/upload/faq/image-20211025190704-12_20211025111131p.png">\n\nB) Some models support different External Ports and Internal ports. \nHere we will explain this configuration under different situations.\nFor example, if you want to open port 90 for only one of your devices 192.168.0.106, you can configure it like the instruction above.\n\nIf you have two or more devices (192.168.0.106 &amp;192.168.0.103 in this example) want the same port to be opened for a certain service, then you will have to use different External Ports\nFor the Internal Port, please put in the actual port number (90 in this example), then create different Service port numbers for the two devices (like 9000 and 9001 in this example).\n<img src="https://static.tp-link.com/upload/faq/image-20211025190704-13_20211025111130t.png">\n\n<img src="https://static.tp-link.com/upload/faq/image-20211025190704-14_20211025111131v.png">\nAfter this configuration, you can access the two devices using different External ports. \nIn this case, you can use 218.18.232.154:9000 to access 192.168.0.106 and 218.18.232.154:9001 to access 192.168.0.103.\n\n<h1>Port Forwarding feature on TP-Link</h1>\n\nVirtual servers can be used for setting up public services on your LAN. \nA virtual server is defined as a service port, and all requests from internet to this service port will be redirected to the computer specified by the server IP.\n\nHere takes TL-MR6400 as demonstration.\n\n1. Log into the router\'s web management page:\n\n2. Go to <b>Forwarding</b> &rarr; <b>Virtual Servers</b>, you can view and add virtual servers.\n\n<img src="https://static.tp-link.com/image001_1495592442505f.jpg">\n\n<b>Service Port</b> - The numbers of External Service Ports. \nYou can enter a service port or a range of service ports (the format is XXX - YYY, XXX is Start port, YYY is End port).\n\n<b>Internal Port</b> - The Internal Service Port number of the PC running the service application. \nYou can enter a specific port number, or leave it blank if the <b>Internal Port</b> is the same as the <b>Service Port</b>.\n\n<b>IP Address</b> - The IP Address of the PC providing the service application.\n\n<b>Protocol</b> - The protocol used for this application, either <b>TCP</b>, <b>UDP</b>, or <b>All</b> (all protocols supported by the router).\n\n<b>Status</b> - The status of this entry, &quot;Enabled&quot; means the virtual server entry is enabled. \nThe status of this entry is either <b>Enabled</b> or <b>Disabled</b>.\n\n<b>To setup a virtual server entry:</b>\n\n1. Click <b>Add New&hellip;.</b>\n\n<img src="https://static.tp-link.com/image002_1495592451169e.jpg">\n\n2. Select the service you want to use from the <b>Common Service Port</b> list. \nIf the Common Service Port list does not have the service that you want to use, type the number of the service port or service port range in the <b>Service Port</b> box.\n\n3. Type the IP Address of the computer in the <b>IP Address</b> box.\n\n4. Select the protocol used for this application, either <b>TCP</b> or <b>UDP</b>, or <b>All</b>.\n\n5. Select <b>Enabled</b> to enable the virtual server.\n6. Click <b>Save</b>.\n\n<b>Note:</b>\n\n1. You&acute;d better assign a static IP address for your server, so the Virtual Server entry will take effect all the time. \nOr you can just do an IP address reservation for the server. \n\n2. If you set the service port of the virtual server as 80, you must set the web management port on <b>Security</b> &rarr; <b>Remote Management</b> page to be any other value except 80 such as 8080. Otherwise there will be a conflict to disable the virtual server.\n\n',
'<h2>To open a port in the Windows firewall for TCP access</h2>\nOn the <b>Start</b> menu, select <b>Run</b>, type <b>WF.msc</b>, and then select <b>OK</b>.\n\nIn the <b>Windows Firewall with Advanced Security</b>, in the left pane, right-click <b>Inbound Rules</b>, and then select <b>New Rule</b> in the action pane.\n\nIn the <b>Rule Type</b> dialog box, select <b>Port</b>, and then select <b>Next</b>.\n\nIn the <b>Protocol and Ports</b> dialog box, select <b>TCP</b>. \nSelect <b>Specific local ports</b>, and then type the port number of the instance of the Database Engine, such as <b>1433</b> for the default instance. \nSelect <b>Next</b>.\n\nIn the <b>Action</b> dialog box, select <b>Allow the connection</b>, and then select <b>Next</b>.\n\nIn the <b>Profile</b> dialog box, select any profiles that describe the computer connection environment when you want to connect to the Database Engine, and then select <b>Next</b>.\n\nIn the <b>Name</b> dialog box, type a name and description for this rule, and then select <b>Finish</b>.\n\n',
'<h2>To open access to SQL Server when using dynamic ports</h2>\nOn the <b>Start</b> menu, select <b>Run</b>, type <b>WF.msc</b>, and then select <b>OK</b>.\n\nIn the <b>Windows Firewall with Advanced Security</b>, in the left pane, right-click <b>Inbound Rules</b>, and then select <b>New Rule</b> in the action pane.\n\nIn the <b>Rule Type</b> dialog box, select <b>Program</b>, and then select <b>Next</b>.\n\nIn the <b>Program</b> dialog box, select <b>This program path</b>. \nSelect <b>Browse</b>, and navigate to the instance of SQL Server that you want to access through the firewall, and then select <b>Open</b>. \nBy default, SQL Server is at <b>C:\Program Files\Microsoft SQL Server\MSSQLXX.MSSQLSERVER\MSSQL\Binn\Sqlservr.exe</b>. \nSelect <b>Next</b>. \nThe <code>MSSQLXX</code> version will be specific to your version of SQL Server.\n\nIn the <b>Action</b> dialog box, select <b>Allow the connection</b>, and then select <b>Next</b>.\n\nIn the <b>Profile</b> dialog box, select any profiles that describe the computer connection environment when you want to connect to the Database Engine, and then select <b>Next</b>.\n\nIn the <b>Name</b> dialog box, type a name and description for this rule, and then select <b>Finish</b>.\n\n\n',
'<h2>host your own website using WAMP Server</h2>\n<h3>Configure Windows Firewall to allow wampmanager, port 80 and 443</h3>\nPort 80 and 443 must be allow for both TCP and UDP packets. \nTo do this, create 2 <b>inbound rules</b> for TPC and UDP on Windows Firewall for port 80 and 443.\n<img src="https://i0.wp.com/blog.hsnyc.co/wp-content/uploads/2015/04/windows-firewall-inbound-rule-port-80.png">\nAlso, allow <b>wampmanager.exe</b> found in the wamp installation folder, in my case that is C:\wamp.\n<img src="https://i0.wp.com/blog.hsnyc.co/wp-content/uploads/2015/03/windows-firewall-inbound-rules.png">\n\n<h3>Configure Apache</h3>\nNow we need to make Apache listen to port 80 on our host machine. \nFor this, open your <b>httpd.conf</b> file found under C:\wamp\bin\apache\apache[version#]\conf and edit the following lines:\nListen 0.0.0.0:80\nServerName localhost:80\n\nChange it to..\nListen <b>youripaddress</b>:80\nServerName <b>youripaddress</b>\n\nwhere <b>youripaddress</b> is equal to the local ip address of your web server.\nFind &lt;Directory &#8220;c:/wamp/www/&#8221;&gt; and enter:\nOrder Allow,Deny\nAllow from all\n\nright before &lt;/Directory&gt;\nSave the file.\n\n<h3>Configure PHPMyAdmin Alias file</h3>\nThis will allow us to access PHPMyAdmin from the web. \nOpen <b>phpmyadmin.conf </b>found in<b> </b>C:\wamp\alias and edit the following line:\nRequire local\n\nand replace it with..\nRequire all granted\n\nSave the file. \nYou should now be able to access the site via http://youripaddress and PHPMyAdmin via http://youripaddress/phpmyadmin\n\n<h3>Put WAMP Server online</h3>\nThe last step is to put WAMP server online.\n<img src="https://i0.wp.com/blog.hsnyc.co/wp-content/uploads/2015/03/wamp-server-put-online.png">\n\n',
'<h2>Common and top web server software on the market</h2>\nThere are a number of common web servers available, some including:\n\n<b>Apache HTTP Server.</b> Developed by Apache Software Foundation, it is a free and open source web server for Windows, Mac OS X, Unix, Linux, Solaris and other operating systems; it needs the Apache license.\n\n<b>Microsoft Internet Information Services (IIS).</b> Developed by Microsoft for Microsoft platforms; it is not open sourced, but widely used.\n\n<b>Nginx.</b> A popular open source web server for administrators because of its lightresource utilization and scalability. \nIt can handle many concurrent sessions due to its event-driven architecture. \nNginx also can be used as a proxy server and load balancer.\n\n<b> Lighttpd. </b>A free web server that comes with the FreeBSD operating system. \nIt is seen as fast and secure, while consuming less CPU power.\n\n<b>Sun Java System Web Server. </b>\nA free web server from Sun Microsystems that can run on Windows, Linux and Unix. \nIt is well-equipped to handle medium to large websites.\n\nLeading web servers include:\nApache, Microsoft\'s Internet Information Services (IIS) and Nginx-- pronounced <em>engine X</em>. \n\nOther web servers include:\nNovell\'s NetWare server,\nGoogle Web Server (GWS) and\nIBM\'s family of Domino servers.\n\n\n\n',
'<h2>create HTTP Server</h2>\n<div id="HTTPServertoc" class="toc"><a href="#HTTPServertopic-0" target="_self">Basic HTTP Server</a><br><a href="#HTTPServertopic-1" target="_self">Returning Different Types of Content</a><br><a href="#HTTPServertopic-2" target="_self">Serving JSON</a><br><a href="#HTTPServertopic-3" target="_self">Serving CSV</a><br><a href="#HTTPServertopic-4" target="_self">Serving HTML</a><br><a href="#HTTPServertopic-5" target="_self">Serving an HTML Page From a File</a><br><a href="#HTTPServertopic-6" target="_self">Serving HTML Efficiently</a><br><a href="#HTTPServertopic-7" target="_self">Managing Routes Using an HTTP Request Object</a><br></div></center><br><br>\n\n<h3 id="HTTPServertopic-0">Basic HTTP Server</h3>\nIn the terminal, create a folder called <code>first-servers</code>:\n<code>mkdir first-servers\ncd first-servers</code>\n\nNow, create the file hello.js that will house the code:\nAdd the following line to <code>hello.js</code>:\n<code>const http = require("http");</code>\nThe <code>http</code> module contains the function to create the server. \nThe next step will be to define two constants, the host and port that our server will be bound to hello.js\n<code>\nconst host = \'localhost\';\nconst port = 8000;</code>\n\nLet’s add a special function, which in Node.js we call a <em>request listener</em>. \nThis function is meant to handle an incoming HTTP request and return an HTTP response. \nThis function must have two arguments, a request object and a response object. \n\nThe request object captures all the data of the HTTP request that’s coming in. \nThe response object is used to return HTTP responses for the server.\nWe want our first server to return this message whenever someone accesses it: <code>"My first server!"</code>.\n\nLet’s add that function next:\n<code>\nconst requestListener = function (req, res) {\n res.writeHead(200);\n res.end("My first server!");\n};</code>\nThe function would usually be named based on what it does. \n\nFor example, if we created a request listener function to return a list of books, we would likely name it <code>listBooks()</code>. \nSince this one is a sample case, we will use the generic name <code>requestListener</code>.\nAll request listener functions in Node.js accept two arguments: <code>req</code> and <code>res</code> (we can name them differently if we want). \n\nThe HTTP request the user sends is captured in a Request object, which corresponds to the first argument, <code>req</code>. \nThe HTTP response that we return to the user is formed by interacting with the Response object in second argument, <code>res</code>.\nThe first line <code>res.writeHead(200);</code> sets the HTTP status code of the response. \n\nHTTP status codes indicate how well an HTTP request was handled by the server. \nIn this case, the status code <code>200</code> corresponds to <code>"OK"</code>. \n\nThe next line of the function, <code>res.end("My first server!");</code>, writes the HTTP response back to the client who requested it. \nThis function returns any data the server has to return. \nIn this case, it’s returning text data.\n\nFinally, we can now create our server and make use of our request listener:\n<code>\nconst server = http.createServer(requestListener);\n server.listen(port, host, () =&gt; {\n console.log(`Server is running on http://${host}:${port}`);\n});</code>\nSave and exit.\n\nIn the first line, we create a new <code>server</code> object via the <code>http</code> module’s <code>createServer()</code> function. \nThis server accepts HTTP requests and passes them on to our <code>requestListener()</code> function.\nAfter we create our server, we must bind it to a network address. \n\nWe do that with the <code>server.listen()</code> method. \nIt accepts three arguments: <code>port</code>, <code>host</code>, and a callback function that fires when the server begins to listen.\nAll of these arguments are optional, but it is a good idea to explicitly state which port and host we want a web server to use. \n\nWhen deploying web servers to different environments, knowing the port and host it is running on is required to set up load balancing or a DNS alias.\nThe callback function logs a message to our console so we can know when the server began listening to connections.\n<strong>Note:</strong> Even though <code>requestListener()</code> does not use the <code>req</code> object, it must still be the first argument of the function.\n\nWith less than fifteen lines of code, we now have a web server. \nLet’s see it in action and test it end-to-end by running the program:\n<code>node hello.js</code>\n\nIn the console, we will see this output:\n<code>OutputServer is running on http://localhost:8000</code>\n\nNotice that the prompt disappears. \nThis is because a Node.js server is a long running process. \nIt only exits if it encounters an error that causes it to crash and quit, or if we stop the Node.js process running the server.\n\nIn a separate terminal window, we’ll communicate with the server using cURL, a CLI tool to transfer data to and from a network. \n\nEnter the command to make an HTTP <code>GET</code> request to our running server:\n<code>curl http://localhost:8000</code>\nWhen we press <code>ENTER</code>, our terminal will show the following output:\n<code>OutputMy first server!</code>\nWe’ve now set up a server and got our first server response.\nBefore we continue, let’s exit our running server by pressing <code>CTRL+C</code>. \n\nThis interrupts our server’s execution, bringing us back to the command line prompt.\nIn most web sites we visit or APIs we use, the server responses are seldom in plain text. \nWe get HTML pages and JSON data as common response formats. \n\nIn the next step, we will learn how to return HTTP responses in common data formats we encounter in the web.\n<h3 id="HTTPServertopic-1">Returning Different Types of Content</h3>\nThe response we return from a web server can take a variety of formats. \n\nJSON and HTML were mentioned before, and we can also return other text formats like XML and CSV. \nFinally, web servers can return non-text data like PDFs, zipped files, audio, and video.\nIn this article, in addition to the plain text we just returned, you’ll learn how to return the following types of data:\n\nJSON, CSV, HTML\nThe three data types are all text-based, and are popular formats for delivering content on the web. \n\nMany server-side development languages and tools have support for returning these different data types. \nIn the context of Node.js, we need to do two things:\n\nSet the <code>Content-Type</code> header in our HTTP responses with the appropriate value.\nEnsure that <code>res.end()</code> gets the data in the right format.\n\nLet’s see this in action with some examples. \nThe code we will be writing in this section and later ones have many similarities to the code we wrote previously. \nMost changes exist within the <code>requestListener()</code> function. \n\nLet’s create files with this “template code” to make future sections easier to follow.\nCreate a new file called <code>html.js</code>. \nThis file will be used later to return HTML text in an HTTP response. \n\nWe’ll put the template code here and copy it to the other servers that return various types.\nIn the terminal, enter the following:\n<code>touch html.js</code>\nNow open this file in a text editor:\n\n<code>nano html.js</code>\n\nLet’s copy the “template code.” Enter this in <code>nano</code>:\nfirst-servers/html.js\n<code>const http = require("http");\n\nconst host = \'localhost\';\nconst port = 8000;\nconst requestListener = function (req, res) {};\n\nconst server = http.createServer(requestListener);\nserver.listen(port, host, () =&gt; {\nconsole.log(`Server is running on http://${host}:${port}`);\n});</code>\nSave and exit <code>html.js</code> with <code>CTRL+X</code>, then return to the terminal.\n\nNow let’s copy this file into two new files. \nThe first file will be to return CSV data in the HTTP response:\n<code>cp html.js csv.js</code>\nThe second file will return a JSON response in the server:\n\n<code>cp html.js json.js</code>\n\nThe remaining files will be for later exercises:\n<code>cp html.js htmlFile.js\ncp html.js routes.js</code>\nWe’re now set up to continue our exercises. \n\nLet’s begin with returning JSON.\n<h3 id="HTTPServertopic-2">Serving JSON</h3>\n<em>JavaScript Object Notation</em>, commonly referred to as JSON, is a text-based data exchange format. \n\nAs its name suggests, it is derived from JavaScript objects, but it is language independent, meaning it can be used by any programming language that can parse its syntax.\nJSON is commonly used by APIs to accept and return data. \nIts popularity is due to lower data transfer size than previous data exchange standards like XML, as well as the tooling that exists that allow programs to parse them without excessive effort. \n\nIf you’d like to learn more about JSON, you can read our guide on How To Work with JSON in JavaScript.\nOpen the <code>json.js</code> file json.js\nWe want to return a JSON response. \n\nLet’s modify the <code>requestListener()</code> function to return the appropriate header all JSON responses have by changing the highlighted lines like so:\nfirst-servers/json.js\n<code>const requestListener = function (req, res) {\nres.setHeader("Content-Type", "application/json");\n};</code>\nThe <code>res.setHeader()</code> method adds an HTTP header to the response. \n\nHTTP headers are additional information that can be attached to a request or a response. \nThe <code>res.setHeader()</code> method takes two arguments: the header’s name and its value.\nThe <code>Content-Type</code> header is used to indicate the format of the data, also known as media type, that’s being sent with the request or response. \n\nIn this case our <code>Content-Type</code> is <code>application/json</code>.\nNow, let’s return JSON content to the user. \nModify <code>json.js</code> so it looks like this:\n\nfirst-servers/json.js\n<code>const requestListener = function (req, res) {\n\nres.setHeader("Content-Type", "application/json");\n res.writeHead(200);\n res.end(`{"message": "This is a JSON response"}`);\n};</code>\n\nLike before, we tell the user that their request was successful by returning a status code of <code>200</code>. \nThis time in the <code>response.end()</code> call, our string argument contains valid JSON.\nSave and exit <code>json.js</code> by pressing <code>CTRL+X</code>. \n\nNow, let’s run the server with the <code>node</code> command:\n<code>node json.js</code>\nIn another terminal, let’s reach the server by using cURL:\n<code>curl http://localhost:8000</code>\nAs we press <code>ENTER</code>, we will see the following result:\n\n<code>Output{"message": "This is a JSON response"}</code>\nWe now have successfully returned a JSON response, just like many of the popular APIs we create apps with. \n\nBe sure to exit the running server with <code>CTRL+C</code> so we can return to the standard terminal prompt. \nNext, let’s look at another popular format of returning data: CSV.\n<h3 id="HTTPServertopic-3">Serving CSV</h3>\n\nThe <em>Comma Separated Values</em> (CSV) file format is a text standard that’s commonly used for providing tabular data. \nIn most cases, each row is separated by a newline, and each item in the row is separated by a comma.\nIn our workspace, open the <code>csv.js</code> file with a text editor:\n\n<code>nano csv.js</code>\n\nLet’s add the following lines to our <code>requestListener()</code> function:\nfirst-servers/csv.js\n<code>const requestListener = function (req, res) {\nres.setHeader("Content-Type", "text/csv");\nres.setHeader("Content-Disposition", "attachment;filename=oceanpals.csv");\n};</code>\n\nThis time, our <code>Content-Type</code> indicates that a CSV file is being returned as the value is <code>text/csv</code>. \nThe second header we add is <code>Content-Disposition</code>. \nThis header tells the browser how to display the data, particularly in the browser or as a separate file.\n\nWhen we return CSV responses, most modern browsers automatically download the file even if the <code>Content-Disposition</code> header is not set. \nHowever, when returning a CSV file we should still add this header as it allows us to set the name of the CSV file. \nIn this case, we signal to the browser that this CSV file is an attachment and should be downloaded. \n\nWe then tell the browser that the file’s name is <code>oceanpals.csv</code>.\nLet’s write the CSV data in the HTTP response:\nfirst-servers/csv.js\n\n<code>const requestListener = function (req, res) {\nres.setHeader("Content-Type", "text/csv");\n\nres.setHeader("Content-Disposition", "attachment;filename=oceanpals.csv");\nres.writeHead(200);\nres.end(`id,name,email\n1,Sammy Shark,shark@ocean.com`);\n};</code>\n\nLike before we return a <code>200</code>/<code>OK</code> status with our response. \nThis time, our call to <code>res.end()</code> has a string that’s a valid CSV. \nThe comma separates the value in each column and the new line character (<code>\n</code>) separates the rows. \n\nWe have two rows, one for the table header and one for the data.\nWe’ll test this server in the browser. \nSave <code>csv.js</code> and exit the editor with <code>CTRL+X</code>.\n\nRun the server with the Node.js command:\n<code>node csv.js</code>\nIn another Terminal, let’s reach the server by using cURL:\n<code>curl http://localhost:8000</code>\nThe console will show this:\n\n<code>Outputid,name,email\n1,Sammy Shark,shark@ocean.com</code>\n\nIf we go to <code>http://localhost:8000</code> in our browser, a CSV file will be downloaded. \nIts file name will be <code>oceanpals.csv</code>.\nExit the running server with <code>CTRL+C</code> to return to the standard terminal prompt.\n\nHaving returned JSON and CSV, we’ve covered two cases that are popular for APIs. \nLet’s move on to how we return data for websites people view in a browser.\n<h3 id="HTTPServertopic-4">Serving HTML</h3>\n\nHTML, HyperText Markup Language, is the most common format to use when we want users to interact with our server via a web browser. \nIt was created to structure web content. \nWeb browsers are built to display HTML content, as well as any styles we add with CSS, another front-end web technology that allows us to change the aesthetics of our websites.\n\nLet’s reopen <code>html.js</code> with our text editor:\n<code>nano html.js</code>\nModify the <code>requestListener()</code> function to return the appropriate <code>Content-Type</code> header for an HTML response:\nfirst-servers/html.js\n\n<code>const requestListener = function (req, res) {\nres.setHeader("Content-Type", "text/html");\n};</code>\n\nNow, let’s return HTML content to the user. \nAdd the highlighted lines to <code>html.js</code> it looks\nfirst-servers/html.js\n\n<code>const requestListener = function (req, res) {\nres.setHeader("Content-Type", "text/html");\n\nres.writeHead(200);\nres.end(`&lt;html&gt;&lt;body&gt;&lt;h1&gt;This is HTML&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;`);\n};</code>\nWe first add the HTTP status code. \n\nWe then call <code>response.end()</code> with a string argument that contains valid HTML. \nWhen we access our server in the browser, we will see an HTML page with one header tag containing <code>This is HTML</code>.\nLet’s save and exit by pressing <code>CTRL+X</code>. \n\nNow, let’s run the server with the <code>node</code> command:\n<code>node html.js</code>\nWe will see <code>Server is running on http://localhost:8000</code> when our program has started.\nNow go into the browser and visit <code>http://localhost:8000</code>. \n\nOur page will look like this:\n<img src="https://assets.digitalocean.com/articles/67009/html-response.png">\nLet’s quit the running server with <code>CTRL+C</code> and return to the standard terminal prompt.\n\nIt’s common for HTML to be written in a file, separate from the server-side code like our Node.js programs. \nNext, let’s see how we can return HTML responses from files.\n<h3 id="HTTPServertopic-5">Serving an HTML Page From a File</h3>\nWe can serve HTML as strings in Node.js to the user, but it’s preferable that we load HTML files and serve their content. \nThis way, as the HTML file grows we don’t have to maintain long strings in our Node.js code, keeping it more concise and allowing us to work on each aspect of our website independently. \nThis “separation of concerns” is common in many web development setups, so it’s good to know how to load HTML files to support it in Node.js\n\nTo serve HTML files, we load the HTML file with the <code>fs</code> module and use its data when writing our HTTP response.\nFirst, we’ll create an HTML file that the web server will return. \nCreate a new HTML file:\n\n<code>touch index.html</code>\nNow open <code>index.html</code> in a text editor:\nOur web page will be minimal. \nIt will have an orange background and will display some greeting text in the center. \n\nAdd this code to the file:\nfirst-servers/index.html\n<code>&lt;!DOCTYPE html&gt;\n&lt;head&gt;\n&lt;title&gt;My Website&lt;/title&gt;\n&lt;style&gt;\n*, html { margin: 0; padding: 0; border: 0; }\nhtml { width: 100%; height: 100%; }\nbody { width: 100%; height: 100%; position: relative;\n       background-color: rgb(236, 152, 42); }\n.center { width: 100%; height: 50%; margin: 0; position:\n    absolute; top: 50%; left: 50%; transform:\n    translate(-50%, -50%); color: white;\n    font-family: "Trebuchet MS", Helvetica, sans-serif;\n    text-align: center; }\nh1 { font-size: 144px; }\np { font-size: 64px; }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div class="center"&gt;\n&lt;h1&gt;Hello Again!&lt;/h1&gt;\n&lt;p&gt;This is served from a file&lt;/p&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code>\nThis single webpage shows two lines of text: <code>Hello Again!</code> and <code>This is served from a file</code>. \n\nThe lines appear in the center of the page, one above each other. \nThe first line of text is displayed in a heading, meaning it would be large. \nThe second line of text will appear slightly smaller. \n\nAll the text will appear white and the webpage has an orange background.\nWhile it’s not the scope of this article or series, if you are interested in learning more about HTML, CSS, and other front-end web technologies, you can take a look at Mozilla’s Getting Started with the Web guide.\nThat’s all we need for the HTML, so save and exit the file with <code>CTRL+X</code>. \n\nWe can now move on to the server code.\nFor this exercise, we’ll work on <code>htmlFile.js</code>. \nOpen it with the text editor:\n\nAs we have to read a file, let’s begin by importing the <code>fs</code> module:\nfirst-servers/htmlFile.js\n<code>const http = require("http");\n\nconst fs = require(\'fs\').promises;</code>\n\nThis module contains a <code>readFile()</code> function that we’ll use to load the HTML file in place. \nWe import the promise variant in keeping with modern JavaScript best practices. \nWe use promises as its syntactically more succinct than callbacks, which we would have to use if we assigned <code>fs</code> to just <code>require(\'fs\')</code>. \n\nTo learn more about asynchronous programming best practices, you can read our How To Write Asynchronous Code in Node.js guide.\nWe want our HTML file to be read when a user requests our system. \nLet’s begin by modifying <code>requestListener()</code> to read the file:\n\nfirst-servers/htmlFile.js\n<code>const requestListener = function (req, res) {\n\nfs.readFile(__dirname + "/index.html")\n};</code>\nWe use the <code>fs.readFile()</code> method to load the file. \nIts argument has <code>__dirname + "/index.html"</code>. \n\nThe special variable <code>__dirname</code> has the absolute path of where the Node.js code is being run. \nWe then append <code>/index.html</code> so we can load the HTML file we created earlier.\nNow let’s return the HTML page once it’s loaded:\n\nfirst-servers/htmlFile.js\n<code>const requestListener = function (req, res) {\n\nfs.readFile(__dirname + "/index.html")\n.then(contents =&gt; {\nres.setHeader("Content-Type", "text/html");\n\nres.writeHead(200);\nres.end(contents);\n})\n};</code>\n\nIf the <code>fs.readFile()</code> promise successfully resolves, it will return its data. \nWe use the <code>then()</code> method to handle this case. \nThe <code>contents</code> parameter contains the HTML file’s data.\n\nWe first set the <code>Content-Type</code> header to <code>text/html</code> to tell the client that we are returning HTML data. \nWe then write the status code to indicate the request was successful. \nWe finally send the client the HTML page we loaded, with the data in the <code>contents</code> variable.\n\nThe <code>fs.readFile()</code> method can fail at times, so we should handle this case when we get an error. \nAdd this to the <code>requestListener()</code> function:\nfirst-servers/htmlFile.js\n\n<code>const requestListener = function (req, res) {\nfs.readFile(__dirname + "/index.html")\n\n.then(contents =&gt; {\nres.setHeader("Content-Type", "text/html");\nres.writeHead(200);\n\nres.end(contents);\n})\n.catch(err =&gt; {\n\nres.writeHead(500);\nres.end(err);\nreturn;\n});\n};</code>\nSave the file and exit <code>nano</code> with <code>CTRL+X</code>.\nWhen a promise encounters an error, it is rejected. \n\nWe handle that case with the <code>catch()</code> method. \nIt accepts the error that <code>fs.readFile()</code> returns, sets the status code to <code>500</code> signifying that an internal error was encountered, and returns the error to the user.\nRun our server with the <code>node</code> command:\n\n<code>node htmlFile.js</code>\n\nIn the web browser, visit <code>http://localhost:8000</code>. \nYou will see this page:\n<img src="https://assets.digitalocean.com/articles/67009/html-file.png">\n\nYou have now returned an HTML page from the server to the user. \nYou can quit the running server with <code>CTRL+C</code>. \nYou will see the terminal prompt return when you do.\n\nWhen writing code like this in production, you may not want to load an HTML page every time you get an HTTP request. \nWhile this HTML page is roughly 800 bytes in size, more complex websites can be megabytes in size. \nLarge files can take a while to load. \n\nIf your site is expecting a lot of traffic, it may be best to load HTML files at startup and save their contents. \nAfter they are loaded, you can set up the server and make it listen to requests on an address.\nTo demonstrate this method, let’s see how we can rework our server to be more efficient and scalable.\n\n<h3 id="HTTPServertopic-6">Serving HTML Efficiently</h3>\nInstead of loading the HTML for every request, in this step we will load it once at the beginning. \nThe request will return the data we loaded at startup.\n\nIn the htmlFile.js\n\nLet’s begin by adding a new variable before we create the <code>requestListener()</code> function:\nfirst-servers/htmlFile.js\n\n<code>let indexFile;\nconst requestListener = function (req, res) {</code>\nWhen we run this program, this variable will hold the HTML file’s contents.\n\nNow, let’s readjust the <code>requestListener()</code> function. \nInstead of loading the of <code first-servers="" htmlfile.js="" <code="">const requestListener = function (req, res) {\nres.setHeader("Content-Type", "text/html");\n\nres.writeHead(200);\nres.end(indexFile);\n};</code>\nNext, we shift the file reading logic from the <code>requestListener()</code> function to our server startup. \n\nMake the following changes as we create the server:\nfirst-servers/htmlFile.js\n<code>const server = http.createServer(requestListener);\nfs.readFile(__dirname + "/index.html")\n.then(contents =&gt; {\n\nindexFile = contents;\nserver.listen(port, host, () =&gt; {\nconsole.log(`Server is running on http://${host}:${port}`);\n});\n})\n.catch(err =&gt; {\n\nconsole.error(`Could not read index.html file: ${err}`);\nprocess.exit(1);\n});</code>\nSave the file and exit <code>nano</code> with <code>CTRL+X</code>.\nThe code that reads the file is similar to what we wrote in our first attempt. \n\nHowever, when we successfully read the file we now save the contents to our global <code>indexFile</code> variable. \nWe then start the server with the <code>listen()</code> method. \nThe key thing is that the file is loaded before the server is run. \n\nThis way, the <code>requestListener()</code> function will be sure to return an HTML page, as <code>indexFile</code> is no longer an empty variable.\nOur error handler has changed as well. \nIf the file can’t be loaded, we capture the error and print it to our console. \n\nWe then exit the Node.js program with the <code>exit()</code> function without starting the server. \nThis way we can see why the file reading failed, address the problem, and then start the server again.\nWe’ve now created different web servers that return various types of data to a user. \n\nSo far, we have not used any request data to determine what should be returned. \nWe’ll need to use request data when setting up different routes or paths in a Node.js server, so next let’s see how they work together.\n<h3 id="HTTPServertopic-7">Managing Routes Using an HTTP Request Object</h3>\nMost websites we visit or APIs we use usually have more than one endpoint so we can access various resources. \nA good example would be a book management system, one that might be used in a library. \nIt would not only need to manage book data, but it would also manage author data for cataloguing and searching convenience.\n\nEven though the data for books and authors are related, they are two different objects. \nIn these cases, software developers usually code each object on different endpoints as a way to indicate to the API user what kind of data they are interacting with.\nLet’s create a new server for a small library, which will return two different types of data. \n\nIf the user goes to our server’s address at <code>/books</code>, they will receive a list of books in JSON. \nIf they go to <code>/authors</code>, they will receive a list of author information in JSON.\nSo far, we have been returning the same response to every request we get. \n\nLet’s illustrate this quickly.\nRe-run our JSON response example:\n<code>node json.js</code>\nIn another terminal, let’s do a cURL request like before:\n\n<code>curl http://localhost:8000</code>\n\nYou will see:\n<code>Output{"message": "This is a JSON response"}</code>\n\nNow let’s try another curl command:\n<code>curl http://localhost:8000/todos</code>\nAfter pressing <code>Enter</code>, you will see the same result:\n<code>Output{"message": "This is a JSON response"}</code>\nWe have not built any special logic in our <code>requestListener()</code> function to handle a request whose URL contains <code>/todos</code>, so Node.js returns the same JSON message by default.\nAs we want to build a miniature library management server, we’ll now separate the kind of data that’s returned based on the endpoint the user accesses.\n\nFirst, exit the running server with <code>CTRL+C</code>.\nNow open <code>routes.js</code> in your text editor:\n<code>nano routes.js</code>\nLet’s begin by storing our JSON data in variables before the <code>requestListener()</code> function:\n\nfirst-servers/routes.js\n<code>const books = JSON.stringify([\n\n{ title: "The Alchemist", author: "Paulo Coelho", year: 1988 },\n{ title: "The Prophet", author: "Kahlil Gibran", year: 1923 }\n]);\n\nconst authors = JSON.stringify([\n{ name: "Paulo Coelho", countryOfBirth: "Brazil", yearOfBirth: 1947 },\n{ name: "Kahlil Gibran", countryOfBirth: "Lebanon", yearOfBirth: 1883 }\n\n]);</code>\n\nThe <code>books</code> variable is a string that contains JSON for an array of book objects. \nEach book has a title or name, an author, and the year it was published.\nThe <code>authors</code> variable is a string that contains the JSON for an array of author objects. \n\nEach author has a name, a country of birth, and their year of birth.\nNow that we have the data our responses will return, let’s start modifying the <code>requestListener()</code> function to return them to the correct routes.\nFirst, we’ll ensure that every response from our server has the correct <code>Content-Type</code> header:\n\nfirst-servers/routes.js\n<code>const requestListener = function (req, res) {\n\nres.setHeader("Content-Type", "application/json");\n}</code>\nNow, we want to return the right JSON depending path the\nLet’s create a <code>switch</code> statement on the request’s URL:\n\nfirst-servers/routes.js\n<code>const requestListener = function (req, res) {\n\nres.setHeader("Content-Type", "application/json");\nswitch (req.url) {}\n}</code>\nTo get the URL path from a request object, we need to access its <code>url</code> property. \n\nWe can now add cases to the <code>switch</code> statement to return the appropriate JSON.\nJavaScript’s <code>switch</code> statement provides a way to control what code is run depending on the value of an object or JavaScript expression (for example, the result of mathematical operations). \nIf you need a lesson or reminder on how to use them, take a look at our guide on How To Use the Switch Statement in JavaScript.\n\nLet’s continue by adding a <code>case</code> for when the user wants to get our list of books:\nfirst-servers/routes.js\n<code>const requestListener = function (req, Type"\nswitch (req.url) {\n\ncase "/books":\nres.writeHead(200);\nres.end(books);\n\nbreak\n}\n}</code>\nWe set our status code to <code>200</code> to indicate the request is fine and return the JSON containing the list of our books. \n\nNow let’s add another <code>case</code> for our authors:\nfirst-servers/routes.js\n<code>const requestListener = function (req, res) {\nres.setHeader("Content-Type", "application/json");\nswitch (req.url) {\n\ncase "/books":\nres.writeHead(200);\nres.end(books);\n\nbreak\ncase "/authors":\nres.writeHead(200);\n\nres.end(authors);\nbreak\n}\n}</code>\n\nLike before, the status code will be <code>200</code> as the request is fine. \nThis time we return the JSON containing the list of our authors.\nWe want to return an error if the user tries to go to any other path. \n\nLet’s add the default case to do this:\nroutes.js\n<code>const requestListener = function (req, res) {\nres.setHeader("Content-Type", "application/json");\nswitch (req.url) {\n\ncase "/books":\nres.writeHead(200);\nres.end(books);\n\nbreak\ncase "/authors":\nres.writeHead(200);\n\nres.end(authors);\nbreak\ndefault:\n\nres.writeHead(404);\nres.end(JSON.stringify({error:"Resource not found"}));\n}\n}</code>\n\nWe use the <code>default</code> keyword in a <code>switch</code> statement to capture all other scenarios not captured by our previous cases. \nWe set the status code to <code>404</code> to indicate that the URL they were looking for was not found. \nWe then set a JSON object that contains an error message.\n\nLet’s test our server to see if it behaves as we expect. \nIn another terminal, let’s first run a command to see if we get back our list of books:\n<code>curl http://localhost:8000/books</code>\nPress <code>Enter</code> to see the following output:\n\n<code>Output[{"title":"The Alchemist","author":"Paulo Coelho","year":1988},{"title":"The Prophet","author":"Kahlil Gibran","year":1923}]</code>\nSo far so good. \n\nLet’s try the same for <code>/authors</code>. \nType the following command in the terminal:\n<code>curl http://localhost:8000/authors</code>\nYou will see the following output when the command is complete:\n\n<code>Output[{"name":"Paulo Coelho","countryOfBirth":"Brazil","yearOfBirth":1947},{"name":"Kahlil Gibran","countryOfBirth":"Lebanon","yearOfBirth":1883}]</code>\nLast, let’s try an erroneous URL to ensure that <code>requestListener()</code> returns the error response:\n\n<code>curl http://localhost:8000/notreal</code>\n\nEntering that command will display this message:\n<code>Output{"error":"Resource not found"}</code>\n\nYou can exit the running server with <code>CTRL+C</code>.\nWe’ve now created different avenues for users to get different data. \nWe also added a default response that returns an HTTP error if the user enters a URL that we don’t support.\n\n',
'<h2>Setting up a static server using R</h2>\n<h3>Installing the <code>servr</code> package</h3>\nThe “R console” panel in RGui is use to type R code and execute it, much like the JavaScript console. \nThe first thing we need to do is install the <code>servr</code> package, which includes the static server function. \nType the following expression into the R Console and press Enter:\n<code>install.packages("servr")</code>\n\n<h3>Starting the server</h3>\nTo use the <code>servr</code> package, you need to load it into the R session:\n<code>library(servr)</code>\n\nNext, navigate to the directory on your computer where you want to start the static server, using the <code>setwd</code> function. \nFor example, if the directory you wish to serve is located at <code>C:\tmp\examples</code>, then you need to execute the following expression:\n\n<code>setwd("C:\\Users\\dorman\\Downloads")</code>\n\nNote that the path parts need to be separated with <code>\\</code> (or <code>/</code>), not with <code>\</code>!\n\nFinally, the server is started with the <code>httd</code> function:\n\n<code>httd()</code>\nTo allow other computers to connect to the server, use the following expression instead:\n\n<code>httd(host="0.0.0.0")</code>\n\nRunning either of the that last expressions should open the browser window with the served directory automatically. \nOtherwise, you can open the served site by browsing to the following URL (Figure I.2):\n\n<code>http://localhost:4321/</code>\n<img class="lazy" data-src="https://geobgu.xyz/web-mapping2/images/servr-localhost.png">\nFIGURE I.2: Page served using R package <code>servr</code>\n\nTo some degree, this package is like python -m SimpleHTTPServer or python -m http.server.\n\nYou can either run servr::httd() in an interactive R session, or run from command line:\n\n# default: port 4321, do not launch browser\nRscript -e "servr::httd()"\n\n# open a web browser\nRscript -e "servr::httd()" -b\n\n# listen on port 4000\nRscript -e "servr::httd()" -p4000\n\n# pass arguments to the httd() function\nRscript -e "servr::httd(,4000,TRUE)"\n\nThere is also a shell script under system.file(\'bin\', package = \'servr\'); if it is added to PATH, you can simply run\n\nservr  # serve the current directory\nservr -b  # launch the browser\nservr -b -p4000  # change port to 4000\n\n',
'<h2>cURL, a CLI tool</h2>\ncurl 138.19.128.21:7000 >> txt.html\n\ncurl https://www.hepingribao.com/home/  --insecure >>txt.txt\n\n',
'<h2>Turn Microsoft Defender Firewall on or off</h2>\n\nSelect <b>Start </b> , then open <b>Settings </b> . \nUnder <b>Privacy & security </b> , select <b>Windows Security </b> > <b>Firewall & network protection</b>.\n\nSelect a network profile: <b>Domain network</b>, <b>Private network</b>, or <b>Public network</b>.\n\nUnder <b>Microsoft Defender Firewall</b>, switch the setting to <b>On</b>. \n\nIf your device is connected to a network, network policy settings might prevent you from completing these steps. \nFor more info, contact your administrator.\n\nTo turn it off, switch the setting to <b>Off</b>. \nTurning off Microsoft Defender Firewall could make your device (and network, if you have one) more vulnerable to unauthorized access. \nIf there\'s an app you need to use that\'s being blocked, you can allow it through the firewall, instead of turning the firewall off.\n\nSelect the <b>Start </b> button > <b>Settings </b> > <b>Update & Security </b> > <b>Windows Security</b> and then <b>Firewall & network protection</b>. \n\nSelect a network profile: <b>Domain network</b>, <b>Private network</b>, or <b>Public network</b>.\n\nUnder <b>Microsoft Defender Firewall</b>, switch the setting to <b>On</b>. \nIf your device is connected to a network, network policy settings might prevent you from completing these steps. \nFor more info, contact your administrator.\n\nTo turn it off, switch the setting to <b>Off</b>. \nTurning off Microsoft Defender Firewall could make your device (and network, if you have one) more vulnerable to unauthorized access. \nIf there\'s an app you need to use that\'s being blocked, you can allow it through the firewall, instead of turning the firewall off.\n\n<b>Note:</b> If you get errors, or if the setting won\'t turn on, you can <a href="https://support.microsoft.com/help/17613" target="_blank">use the troubleshooter</a> and then try again.\n\n',
'<h2>Block or Allow TCP/IP Port in Windows Firewall</h2>\nWindows Firewall allows you to restrict outgoing/incoming network traffic for a specific application or TCP/IP port. \n\nNavigate to the <i>Advanced Settings</i> of the firewall. \nStart by opening up the control panel and typing \'Firewall\' into the search box type. \nThen, open Firewall and click on the ‘Advanced Settings’ link.\n\n<i>1. Open Windows Firewall and find the Advanced Settings. \n</i>To open Windows Firewall, type \'firewall.cpl\' into the search bar and press the Enter key.\nWhen \'Advanced Settings\' opens, click the <i>Advanced Settings</i> link in the left-hand pane of the main firewall dialog box. \n\nThis will bring up the \'Windows Firewall with Advanced Security\' window.\n<img class="lazy" data-src="https://www.action1.com/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2021/05/click-the-Advanced-Settings-link.png.webp">\n\n<i>2. Open the List of Inbound Rules.</i>\nOn the left-hand pane of the window, click on \'<i>Inbound Rules</i>\' to bring up the list of rules.\n<img class="lazy" data-src="https://www.action1.com/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2021/05/click-on-Inbound-Rules.png.webp">\n\n<i>3. Set up a New Rule.</i>\nFrom the Actions pane on the right-hand side, select ‘<i>New Rule</i>&#8230;’\n\n<img class="lazy" data-src="https://www.action1.com/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2021/05/Select-New-Rule.png.webp">\n\n<i>4. Open the New Inbound Rule Wizard.</i>\n\nSelect \'<i>Port</i>\' and then click \'<i>Next</i>.\' This will open the ‘<i>New Inbound Rule Wizard</i>’ window.\nFrom there, select ‘<i>Port</i>’ as the new <i>Rule Type</i> and click \'<i>Next</i>.\'\nClick on \'<i>Specific local ports</i>.\' Then choose a port number (e.g., 80).\n\nClick \'<i>Next</i>\' to continue.\n<img class="lazy" data-src="https://www.action1.com/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2021/05/Open-the-New-Inbound-Rule-Wizard.png.webp">\n\n<i>5. Block the Connection.</i>\nIn the Action window, select ‘<i>Block the connection</i>’ and click \'<i>Next</i>.\'\n<i>6. Apply Your New Rule to Each Profile Type.</i>\nIn the Profile window, tick the boxes to apply your rule to each of the three profile types: Domain, Private, and Public. \nClick \'<i>Next</i>\' to continue.\n\n<i>7. Name Your Rule and Configure the Settings.</i>\nChoose a name for your new rule, e.g., ‘<i>block suspicious ports</i>.’\n\nIf you want, you can also add an optional description to your rule.\nWhen you\'re done, click \'<i>Finish</i>\' to configure the settings.\n<img class="lazy" data-src="https://www.action1.com/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2021/05/Name-your-rule-and-configure-the-settings.png.webp">\n\n<h3>Open a Port in Windows Firewall</h3>\nYou may want to open a port in the Windows Firewall in order to let a specific IP address communicate with your computer (e.g., when you\'re playing games). \nThe procedure to open a port remains more or less the same. \n\nAll you need to do is follow the instructions in the New Inbound Rule wizard, specify the Port, and select \'Allow the connection.\'\n<h3>Turn off TCP/IP Port in Windows Firewall with Action1</h3>\nFollow the steps below to turn off the TCP/IP Port in Windows Firewall:\n\n1. Log in to the Action1 dashboard.\n2. In the menu on the left-hand side, select \'<i>Managed Endpoints</i>.\'\n<img class="lazy" data-src="https://www.action1.com/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2021/05/managed-endpoints-2.png.webp">\n\n3. Mark the endpoint for the port you want to block.\n4. Click the \'<i>More Actions</i>\' button and then select the <i>Run Command</i> option.\n\n<img class="lazy" data-src="https://www.action1.com/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2021/05/run-command-1.png.webp">\n\n5. In the window that opens, enter the command <i>netsh advfirewall firewall add rule name=&#8221;BlockAIM&#8221; protocol=TCP dir=out remoteport=4099 action=block</i>. \n\n(In this case, we\'re blocking port 4099).\n<img class="lazy" data-src="https://www.action1.com/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2021/05/netsh-advfirewall-firewall-add-rule-name-BlockAIM.png.webp">\n\n6. Click \'<i>Next Step</i>.\'\n7. Click \'<i>Add Endpoints</i>\' and then select the endpoints to which you will apply this blocking rule.\n\n<img class="lazy" data-src="https://www.action1.com/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2021/05/select-managed-endpoints-2.png.webp">\n\n8. Click \'<i>Next Step</i>\' and schedule the execution time of your command.\n\n<img class="lazy" data-src="https://www.action1.com/wp-content/webp-express/webp-images/doc-root/wp-content/uploads/2021/05/schedule-and-finish-1.png.webp">\n\n9. Click \'Finish.\'\n\n',
'<h2>block a port</h2>\n1.Click "Start | Control Panel | System and Security | Windows Firewall."\n2.Select "Advanced Settings." Click "Inbound Rules" to block an inbound port; click "Outbound Rules" to block an outbound port.\n3.Select "New Rule." Choose "Port" from the options and then click "Next."\n4.Choose "TCP" or "UDP," depending on which protocol the port uses. \nClick "Specific Local Ports."\n5.Enter the port number or numbers into the available field; separate multiple numbers with a comma (e.g., "80, 20, 443"). \nClick "Next."\n6.Click "Block the Connection," then "Next." Choose which network location or locations – public, private or domain – the rule applies to and then click "Next."\n7.Create a name for the rule and enter an optional description. \nClick "Finish" to block the ports on the computer.\n\n',
'<h2>On-link on the result of "route print"</h2>\nThey are addresses that can be resolved locally. \nThey don\'t need a gateway because they don\'t need to be routed.\n\nIt\'s just a route that\'s directly reachable (the NIC is in direct contact with it; on the same subnet). \nThe routes that have a gateway IP listed must be contacted through that gateway.\n\nThe destination machine would see the packet, and take it off the network directly.\n\n',
'<h2>Windows IP Commands ipconfig, nslookup, ping, tracert, netstat</h2>\n<div id="netCmdstoc" class="toc"><a href="#netCmdstopic-0" target="_self">ipconfig</a><br><a href="#netCmdstopic-1" target="_self">nslookup</a><br><a href="#netCmdstopic-2" target="_self">ping command</a><br><a href="#netCmdstopic-3" target="_self">tracert command</a><br><a href="#netCmdstopic-4" target="_self">netstat command</a><br><a href="#netCmdstopic-5" target="_self">route command</a><br><a href="#netCmdstopic-6" target="_self">arp command</a><br><a href="#netCmdstopic-7" target="_self">HOSTNAME</a><br></div></center><br><br>\n\nThe most popular Windows CMD commands (from the DOS prompt) that are related to networking etc:\n\n<h3 id="netCmdstopic-0">ipconfig</h3>\nThis is one of the most useful IP commands on Windows. \nIt displays tons of useful information about the current network settings on the machine such as IPv4 and IPv6 address of all network interface cards (Ethernet adapters, WiFi adapters, virtual network adapters etc), MAC address, default gateway, subnet mask, DNS server, DHCP information etc.\n\nIf you want to find the local IP address assigned to your computer or the MAC address of your Ethernet Adapter (shown as “<i>Physical Address</i>” in the command output as shown in the picture below), this is the quickest way to find this information.\n\nHere is a screenshot example of what you can expect as output from ipconfig:\n\n<img class="lazy" data-src="https://www.networkstraining.com/wp-content/uploads/2018/07/ipconfig-command.jpg">\n\nAs shown above, you get information such as IPv4 and IPv6 address, MAC address, Default Dateway, DNS Servers etc.\n\nHere are some different options of this command:\n\n<i>ipconfig /?</i>  : Displays all available options.\n\n<i>ipconfig /all</i>  : This will display output as shown on the screenshot above but for ALL network connection adapters of the computer (Wired Ethernet, WiFi, Vmware adapters etc).\n\n<i>ipconfig /release</i>  : This will release the current IPv4 addresses which were assigned dynamically from a DHCP server. \nIf you specify also a connection name at the end, it will release only the IP of that connection adapter.\n\n<i>ipconfig /release6</i>  : Same as above but for the IPv6 address.\n\n<i>ipconfig /renew</i>  : This usually comes after the above command and is used to request a new IP address from a DHCP server.\n\n<i>ipconfig /renew6</i>  : Same as above but for the IPv6 address.\n\n<i>ipconfig /flushdns</i>  : This deletes the local DNS resolver cache of the computer. \nThis cache stores DNS entries of frequently accessed internet resources so that the computer will not query an external DNS server every time you try to access an internet resource (website etc). \nThis command is useful when troubleshooting DNS connection problems.\n\n<i>ipconfig /</i><i>displaydns </i>  : It shows the local DNS resolver cache entries as explained above.\n\n<i>ipconfig /register</i><i>dns </i> : Refreshes all DHCP addresses and also communicates again with the external DNS server to make sure its reachable etc. \nVery useful when troubleshooting DNS and network connectivity problems of the local computer.\n\n<h3 id="netCmdstopic-1">nslookup</h3>\n<i> </i>“nslookup” stands for “Name System Lookup” and is very useful in obtaining Domain Name System (DNS) related information about a domain or about an IP address (reverse DNS lookup).\n\n<i>nslookup [domain name]: </i>The most popular usage of this command is to find quickly the IP address of a specific domain name (A-record) as shown below:\n\nExample: \n\n<i>nslookup www.networkstraining.com</i>\n\n<img class="lazy" data-src="https://www.networkstraining.com/wp-content/uploads/2018/07/nslookup-command.jpg">\n\nAs shown above, the “nslookup” command followed by a domain name will show you the IPv4 and IPv6 addresses  (A records and AAAA records) assigned to the specific domain.\n\n<i>nslookup [IP Address]:</i> This will perform a reverse-DNS lookup and will try to match the given IP address in the command with its corresponding domain name.\n\nExample: \n\n<i>nslookup 8.8.8.8</i>\n\n<img class="lazy" data-src="https://www.networkstraining.com/wp-content/uploads/2018/07/nslookup-reverse-dns.jpg">\n\nAs shown on the screenshot above, the IP address 8.8.8.8 is mapped with the name “<i>google-public-dns-a.google.com</i>”. \nYou should note however that not all IP addresses are assigned to a domain name so a lot of times you will not get any information from the command above.\n\nThere are several other interesting features of the nslookup command such as finding the authoritative DNS servers of a domain, the SOA and MX records of a domain and much more.\n\n<h3 id="netCmdstopic-2">ping command</h3>\nNow let\'s examine one of the most popular utilities related to network connectivity.\n\nProbably the first command that every computer user runs on the command line when having connectivity problems is the “<i>ping</i>” command.\n\nThis will quickly show you if can send and receive packets (<i>icmp</i> packets to be exact) from your computer and hence shows whether you have network connectivity or not.\n\nNote also that “ping” is useful for testing connectivity for both the local computer from where you execute the command and also for a remote computer or server which you try to reach.\n\nIf for example you try to “ping” your local default gateway IP address and you get replies back (icmp echo replies), this means your local computer is properly connected to the network.\n\nNow, if you “ping” a remote server on the Internet and you get replies back, it means that the remote server is properly connected to its network as well.\n\n<i>ping /?</i>  : Displays all available options as shown below:\n\n<img class="lazy" data-src="https://www.networkstraining.com/wp-content/uploads/2018/07/ping-help.jpg">\n\n<i>ping [IP Address]</i>  : By default it will send 4 ICMP packets to the stated IP address.\n\nExample: \n\n<i>ping 8.8.8.8</i>\n\n<img class="lazy" data-src="https://www.networkstraining.com/wp-content/uploads/2018/07/ping-ip.jpg">\n\nAs you can see from the screenshot above, pinging the IP 8.8.8.8 results in sending 4 packets and then receiving back 4 packets from that IP.\n\n<i>ping [hostname or domain]</i>  : When “pinging” a hostname or domain name, the command will resolve first the name to IP address and then send the icmp packets to that IP.\n\nExample: \n\n<i>ping www.networkstraining.com</i>\n\n<img class="lazy" data-src="https://www.networkstraining.com/wp-content/uploads/2018/07/ping-domain.jpg">\n\n<i>ping [IP address] -t</i>  :This will send ping packets (icmp echo requests) continuously to the target IP.\n\n<i>ping -n 10 [IP address]</i> :This will send 10 ping packets (icmp echo requests) to the target IP.\n\n<i>ping -l 1500 [IP address]</i> :This will send ping packets (icmp echo requests) with size of 1500 bytes length to the target IP.\n\n<i>ping -a [IP address]</i> :The -a switch tells the computer to try to find the hostname assigned to the specific IP address and then ping the IP.\n\n<i>ping -6 [domain or IP]</i> :The -6 switch tells the computer to send IPv6 packets to the target.\n\n<h3 id="netCmdstopic-3">tracert command</h3>\n“<i>tracert</i>” in Windows stands for “Trace Route”. \nIn Linux, the same command is “<i>traceroute</i>”.\n\nThe command traces the path that a TCP/IP packet takes towards a destination target and shows some information (if available) of the routing nodes within this path.\n\nJust like the “ping” command, “tracert” sends also ICMP echo packets to the destination with varying Time-to-Live (TTL) values.\n\n<i>tracert [domain or IP]</i> : Traces the TCP/IP path to the specified destination target IP or domain.\n\nExample: \n\n<i>tracert www.networkstraining.com</i>\n\n<img class="lazy" data-src="https://www.networkstraining.com/wp-content/uploads/2018/07/tracert-domain.jpg">\n\nAs shown above, tracing the path to domain <i>www.networkstraining.com</i> shows all the intermediary routing nodes (with their hostname and IP address) until the final target destination.\n\nWhen troubleshooting connection problems in a large network, you can use tracert to see where the packets stop before reaching the target and focus your efforts to find the problem on the node which does not route packets.\n\n<h3 id="netCmdstopic-4">netstat command</h3>\nAnother important command is the Network Statistics (“netstat”) utility found in both Windows and Linux OS.\n\nIt shows the established network TCP/IP connections of the local computer with remote hosts, open ports on the machine, the process ID (PID) of each connection etc.\n\nPersonally I use this command mostly for security forensic purposes to identify if there are backdoors running on the computer, malicious connections to external Command-and-Control servers etc.\n\nHere are some popular usages of this command:\n\n<i>netstat -ano</i> : Displays all connections and listening ports (-a), addresses and ports in numerical form (-n) and also the process ID of each connection (-o).\n\n<i>netstat -vb</i> : Very useful to examine also which executable and which sequence created each connection and each port.\n\nExample:\n\nC:\WINDOWS\system32&gt;<i>netstat -vb</i>\n\n<img class="lazy" data-src="https://www.networkstraining.com/wp-content/uploads/2018/07/netstat-vb.jpg">\n\nAs shown above, for each established connection you can see the executable (e.g <i>chrome.exe</i>, <i>googledrivesync.exe</i> etc) that created the connection.\n\n<i>netstat -p tcp -f</i> : The “<i>-p tcp</i>” switch will show only TCP connections and the “<i>-f</i>” switch will show the FQDN name of each connection instead of just IP address.\n\nExample:\n\nC:\WINDOWS\system32&gt;<i>netstat -p tcp -f</i>\n\n<img class="lazy" data-src="https://www.networkstraining.com/wp-content/uploads/2018/07/netstat-pf.jpg">\n\n<h3 id="netCmdstopic-5">route command</h3>\nThe “route” command is used to manipulate the local routing table of the computer. \nYou can print the current routing table, add new static routes, delete entries etc.\n\nPersonally, the way I use the “route” command is to add a permanent static route entry in a computer. \nFor example, there might be a specific network subnet which is not accessible via the default gateway of the computer. \nInstead, this remote subnet might be accessible via a different gateway IP. \nBy adding a static route in the computer’s routing table you will be able to reach that remote subnet from a different gateway.\n\n<i>route PRINT</i> : Displays the current routing table of the computer\n\n<i>route ADD [Destination network] MASK [mask] [gatewayIP]</i>: This adds a static route in the table.\n\nExample:\n\n<i>route ADD 10.10.10.0 MASK 255.255.255.0 192.168.1.2</i>\n\nThe above command will add a static route for destination subnet 10.10.10.0/24 via gateway 192.168.1.2\n\n<h3 id="netCmdstopic-6">arp command</h3>\nARP stands for “Address Resolution Protocol” and is one of the core networking protocols that work in Layer 2 level and facilitate communication in a LAN.\n\nThe job of ARP is to find the physical address (MAC address) of the target and map it with its corresponding Layer 3 IP address when communicating in a LAN. \nThe ARP cache table stores mappings of IP addresses with their corresponding MAC address.\n\n<i>arp -a </i>: Displays all ARP cache mappings (IP to MAC address)\n\nExample:\n\nC:\WINDOWS\system32&gt;<i>arp -a</i>\n\n<img class="lazy" data-src="https://www.networkstraining.com/wp-content/uploads/2018/07/arp-a.jpg">\n\nAs you can see from above, the local computer has learned dynamically (type=dynamic) using the ARP protocol two other local devices (192.168.10.7 and 192.168.10.254) and has stored their MAC address (Physical Address) in the ARP table.\n\n<i>arp -d [IP address] </i>: This will delete the arp entry for the specified IP address.\n\nThe above is useful when you changed hardware on a specific node (e.g you have changed the default gateway router) and you want to remove old arp entries. \nUsually it’s not needed to do anything in such a case but sometimes its required on some older computers.\n\n<h3 id="netCmdstopic-7">HOSTNAME</h3>\nThe HOSTNAME command displays the hostname of the system. The hostname command is much easier to use than going into the system settings to search for it.\n\n',
'<h2>NETSTAT</h2>\nNETSTAT [-a] [-b] [-e] [-f] [-n] [-o] [-p proto] [-r] [-s] [-t] [-x] [-y] [interval]\n\nDisplays protocol statistics and current TCP/IP network connections.\n\n-a\nDisplays all connections and listening ports.\n\n-b\nDisplays the executable involved in creating each connection or listening port.\n\nIn some cases well-known executables host multiple independent components, and in these cases the sequence of components involved in creating the connection or listening port is displayed.\n\nIn this case the executable name is in [] at the bottom, on top is the component it called, and so forth until TCP/IP was reached.\n\nNote that this option can be time-consuming and will fail unless you have sufficient permissions.\n\n-e\nDisplays Ethernet statistics.\nThis may be combined with the -s option.\n\n-f\nDisplays Fully Qualified Domain Names (FQDN) for foreign addresses.\n\n-n\nDisplays addresses and port numbers in numerical form.\n\n-o\nDisplays the owning process ID associated with each connection.\n\n-p proto\nShows connections for the protocol specified by proto; proto may be any of: TCP, UDP, TCPv6, or UDPv6.\nIf used with the -s option to display per-protocol statistics, proto may be any of: IP, IPv6, ICMP, ICMPv6, TCP, TCPv6, UDP, or UDPv6.\n\n-q\nDisplays all connections, listening ports, and bound nonlistening TCP ports.\nBound nonlistening ports may or may not be associated with an active connection.\n\n-r\nDisplays the routing table.\n\n-s\nDisplays per-protocol statistics.\nBy default, statistics are shown for IP, IPv6, ICMP, ICMPv6, TCP, TCPv6, UDP, and UDPv6; the -p option may be used to specify a subset of the default.\n\n-t\nDisplays the current connection offload state.\n\n-x\nDisplays NetworkDirect connections, listeners, and shared endpoints.\n\n-y\nDisplays the TCP connection template for all connections.\nCannot be combined with the other options.\n\ninterval\nRedisplays selected statistics, pausing interval seconds between each display.\nPress CTRL+C to stop redisplaying statistics.\nIf omitted, netstat will print the current configuration information once.\n\n',
'<h2>虚拟IP Vrtual IP Address</h2>\n是一种不与特定计算机或者特定计算机网卡相对应的IP地址。\n所有发往这个IP地址的数据包最后都会经过真实的网卡到达目的主机的目的进程。\n\n虚拟ip的用处\n虚拟IP主要是用来网络地址转换，网络容错和可移动性。\n虚拟IP比较常见的一个用例就是在系统高可用性（High Availability HA）方面的应用\n\n通常一个系划外的情况而发统会因为日常维护或者非计生宕机，为了提高系统对外服务的高可用性，就会采用主备模式进行高可用性的配置。\n当提供服务的主机M宕机后，服务会切换到备用主机S继续对外提供服务。\n而这一切用户是感觉不到的，在这种情况下系统对客户端提供服务的IP地址就会是一个虚拟IP，当主机M宕机后，虚拟IP便会漂浮到备机上，继续提供服务。\n\n在这种情况下，虚拟IP就不是与特定计算主机或者特定某个物理网卡对应的了，而是一种虚拟或者是说逻辑的概念，它是可以自由移动自由漂浮的，这样一来既对外屏蔽了系统内部的细节，又为系统内部的可维护性和扩展性提供了方便。\nARP协议其实现原理主要是靠TCP/IP的ARP协议。\n因为ip地址只是一个逻辑地址，在以太网中mac地址才是真正用来进行数据传输的物理地址，每台主机中都有一个ARP高速缓存，存储同一个网络内的IP地址与MAC地址的对应关 系，以太网中的主机发送数据时会先从这个缓存中查询目标IP对应的MAC地址，会向这个MAC地址发送数据。\n\n操作系统会自动维护这个缓存。\n这就是整个实现的关键。\n\nvirtual IP addresses\nVirtual IP addresses are IP addresses that are not tethered to particular machines. \nThus, they can rotate among nodes in a Content Gateway cluster.\nIt is common for a single machine to represent multiple IP addresses on the same subnet. \n\nThis machine would have a primary or real IP address bound to its interface card and also serve many more virtual addresses.\nYou can set up your user base to use a DNS round-robin pointing at virtual IP addresses, as opposed to using the real IP addresses of the Content Gateway machines.\nBecause virtual IP addresses are not bound to machines, a Content Gateway cluster can take addresses from inactive nodes and distribute those addresses among the remaining live nodes.\n\nUsing a proprietary management protocol, Content Gateway nodes communicate their status with their peers. \nIf a node fails, its peers notice the failure and negotiate which of the remaining nodes will mask the fault by taking over the failed node\'s virtual interface.\n\nVirtual IP (VIP)\nWhat it is used for.\nHow it works.\nHow it is charged.\nHow to get a VIP and assign it to several instances to create a fault-tolerant system.\nHow to get a VIP and assign it as a second address to the network interface.\n\n<h3>What it is used for</h3>\nUsing VIP you can create a fault-tolerant infrastructure. \n\nAssign it to several instances at once and the address will pass from one machine to another: if the main one is not available the address is instantly passed to another and this instance will send responses to requests. \nIf the second machine is not available the address is passed to the third one and so on (you specify the order). \nAs a result, your users will always get a response when requesting the IP because the machines support each other.\n\nYou can also assign a VIP as a second address for the network interface.\n<h3>How it works</h3>\n<em>Fault-tolerant system</em>. \nMost of our machines run on Linux kernel-based OS (Ubuntu, CentOS, Fedora, Debian, CoreOS, Fedora-CoreOS, SUSE). \nFor them, a fault-tolerant system can be created using keepalived, a system daemon for Linux that balances the load between servers. \nIf the main instance fails, the daemon passes the VIP to the backup one. \n\nIt uses VRRP (Virtual Router Redundancy Protocol) to pass the VIP address.\n<em>VIP as a second address for the network interface</em>. \nYou reserve a VIP and assign it to an instance, first in the settings of our system, then in the settings of the machine. \n\nAs a result, the VIP becomes the address of this instance on a par with its regular IP: the machine can receive and transmit data on behalf of both addresses.\n<h3>How it is charged</h3>\nVIP is a format of using Reserved IP. \nIts tariffication does not differ from the tariffication of reserved addresses: the IP price per month is displayed in the order window, you pay only for the time from creating the IP to deleting it. \nFor example, if you had reserved an IP and then deleted it after an hour, you will be charged only for an hour of use. \nThe price doesn’t depend on whether the address is assigned to the instance or not.\n\n<img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/4405920800529/1.png" >.\n\n<h3>How to get a VIP and assign it to several instances to create a fault-tolerant system</h3>\n\nIn the "Networks" → "Reserved IPs" section, reserve an address in a public or private network (select the one where you want to create a fault-tolerant system).\n\n<img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/5287253010449/mceclip0.png" ><img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/4405920807057/3.png" >.\n<img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/4405927142545/4.png" >.\n\n<ol start="2"><li>\nConvert your reserved IP to VIP and assign it to instances inside our system. \nTo do this, click the selector next to the IP and select "VIP settings". \n\nIn the pop-up window, enable the "Is VIP" slider and assign this address to required instances using the "Add Instance" button.</li></ol>\n\n<img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/5287267730193/mceclip1.png" ><img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/4405920811537/6.png" >.\n\n<ol start="3"><li>\nInstall keepalived on your instances. \nThe up-to-date instruction for installing it for the required operating system you can find on the Internet. \nUsing the same instructions, edit the keepalived configuration file on the machines: set the state "MASTER" for the main instance, and state "BACKUP" for the backup ones. \n\nAlso, set the “priority” value, it determines the order with which the VIP will be passed between devices. \nIf the master server fails the address will be transferred to the machine with the highest priority value, if the second machine fails the VIP will go to the next priority device, and so on.\n</li><li>\nRun keepalived on your instances and add it to the autostart list. \nThe fault-tolerant system will start working.\n</li></ol>\n<h3>How to get a VIP and assign it as a second address to the network interface</h3>\n\n<ol start="1"><li>\nIn the "Networks" → "Reserved IPs" section, reserve an address in a public or private network (select the one where you want to add a second address for the network interface).\n</li></ol>\n<img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/5287045722257/mceclip2.png" >\n\n<img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/4405927154065/8.png" >.\n\n<img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/4405920816145/9.png" >.\n\n<ol start="2"><li>\nAssign your VIP to an instance inside our system. \n\nTo do this, click the selector next to the IP and select "VIP settings". \nIn the pop-up window, enable the "Is VIP" slider and assign the VIP to the desired machine using the "Add Instance" button.\n</li></ol>\n<img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/5287180326929/mceclip3.png" ><img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/4405920818321/11.png" >.\n\n<ol start="3"><li>\nConfigure VIP in instance settings.\n</li></ol>\n<strong><em>Instructions for instances on any OS except Windows</em></strong>\nConnect to the instance. \n\nThe VIP can be configured on the fly with a simple command (you have to run it as an administrator):\nip addr add <strong>[VIP]</strong>/<strong>[mask] </strong>dev <strong>[interface name]</strong>\nThe command will instantly assign the VIP to your instance; the binding will remain in effect as long as the equipment is turned on. \n\nAfter rebooting, you can enter the command again and the VIP will again belong to the machine.\nIn this command:\n● VIP is the reserved IP that you use as a VIP. \n<img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/4405927164049/12.png" >.\n\n● Mask is a subnet mask, you can view it in the settings of the instance in the "Networking" tab by expanding the line with the interface. \n<img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/4405920832913/13.png" >.\n\n● Interface name is the name of the instance’s network interface, you can find it using the command:     \nifconfig\nThe name will appear at the beginning of the first line.\n\n<img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/4405927169169/14.png" >.\n\nFor example, if your reserved IP is 45.147.140.22, the subnet mask is 24, and the interface name is enp1s0, then the command is: ip addr add 45.147.140.22/24 dev enp1s0. \nAnd to run it, for example, on an Ubuntu system as an administrator you need to add "sudo" at the beginning:\n\n<img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/4405927171089/15.png" >.\n\nThe VIP will be configured. \nTo check if it works, try connecting to the instance via SSH.\n using your VIP: the connection should be successful. \n\nIf the connection doesn’t work, most likely you entered the wrong command to assign the IP or forgot to add it to the machine inside our system. \nRepeat steps №2 and №3.\nVIP can also be bound to an instance permanently. \n\nTo do this, you need to add the address to the network settings within the system. \nThe directory and structure of the configuration file may be different not only in different operating systems but even within releases of the same system. \nWe deliberately do not leave a specific instruction — it may become out of date at any time. \n\nTo bound the VIP, open the official documentation of the operating system of your machine on the Internet and configure the address according to the instructions from there.\n<em><strong>Instructions for instances on Windows OS</strong></em>\n<ol start="1"><li>\nConnect to the instance, open a command prompt and enter the command:\n</li></ol>\nipconfig\nYou will see the connection parameters. \n\nDo not close the command prompt: you will need the values ​​from the IPv4 Address, Subnet Mask and Default Gateway lines for the step №4.\n<img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/4405920838161/16.png" >.\n\n<ol start="2"><li>\nOpen Control Panel → Network and Internet → Network Connections. \nRight-click the adapter and select Properties.\n</li></ol>\n<img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/4405920840081/17.png" >.\n\n<ol start="3"><li>\nClick the line "Internet Protocol Version 4 (TCP/IPv4)" and then click "Properties".\n</li></ol>\n<img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/4405927177745/18.png" >.\n\n<ol start="4"><li>\nCopy IP, subnet mask, and default gateway from the command prompt to the corresponding lines. \n\nThen click "Advanced ...".</li></ol>\n\n<img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/4405920841489/19.png" >.\n\n<ol start="5"><li>\nClick "Add ...". \nIn the pop-up window, enter your VIP (the reserved IP that you previously added to the instance as a VIP) in the "IP address" line, and enter the subnet mask from the command prompt in the "Subnet mask" line. \nThen click "Add".\n</li></ol>\n<img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/4405920843281/20.png" >.\n<img class="lazy" data-src="https://support.gcore.com/hc/article_attachments/4405920845585/21.png" >.\n<ol start="6"><li>\nConfirm all changes with the "OK" buttons.\n</li><li>\nThe VIP will be configured. \n\nTo check if it works, try connecting to the instance.\n using your VIP: the connection should be successful. \nIf the connection fails, most likely you have configured the adapter incorrectly or forgot to assign the VIP to the instance inside our system. \nRepeat the steps of the instructions again.\n</li>\n\n',
'<h2>Windows 10 变成 Linux 服务器</h2>\nWindows 下的 WSL 可以提供 Linux 虚拟环境，但如果想让 Linux 对外提供服务还需要做一些网络配置。\n默认 WSL 下的 Linux 只能通过虚拟IP在本地进行访问，局域网或者本机之外的终端是无法访问 Windows 上的 Linux 环境的。\n\n我们以 WSL 下的 Linux ssh 服务为例，讲一下如何将 Linux 下的服务映射到局域网。\n首先进入到 Linux 虚拟机中，修改 sshd_config 文件，将密码认证打开：\n<code>$ /etc/ssh/<k>sshd_config</k>\nPermitRootLogin <k>yes</k>\nPasswordAuthentication <k>yes</k>\n\n</code>然后重启 ssh 服务：\n<code># /etc/init.d/ssh restart\n* Restarting OpenBSD Secure Shell server sshd   [ OK ]</code>此时就可以通过 Linux 的 IP 进行访问了，通过命令 ip a 可以查看 Linux 的IP：\n\n<code># ip a\n<k>eth0</k>: &lt;BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000\n\n<k>link</k>/ether 00:15:5d:69:57:3f brd ff:ff:ff:ff:ff:ff\n<k>inet</k> 172.21.65.35/20 brd 172.21.79.255 scope global eth0\n<k>valid_lft</k> forever preferred_lft forever</code>这里 172.21.65.35 即是 Linux 的IP，此时局域网还无法访问 Linux 的 ssh 服务。\n\n因为 Linux 的网卡是桥接的，只有 Windows 主机能看到。\n此时我们需要将此端口映射出去。\n执行以下命令可以将 22 端口映射至局域网：\n\n<code>C:\> netsh interface portproxy add v4tov4 listenport=22 listenaddress=0.0.0.0 connectport=22 connectaddress=172.21.65.35\nC:\>netshinterfaceportproxyshowall\n\n侦听ipv4:连接到ipv4:\n地址            端口        地址            端口\n--------------- ----------  --------------- ----------\n\n0.0.0.0         22          172.21.65.35    22</code>此时通过 netstat 也能看到 22 端口是开放状态：\n\n<code>C:\> netstat -ano | findstr :22\n\nTCP    0.0.0.0:22             0.0.0.0:0              LISTENING       4492\nTCP    127.0.0.1:22           0.0.0.0:0              LISTENING       13656\nTCP    [::1]:22               [::]:0                 LISTENING       13656\n\n</code>这里能看到 127.0.0.1也开放了22端口，原因是 .wslconfig 中配置了 localhostForward 选项：\n<code>$ cat ~/.wslconfig\n[wsl2]\n\nlocalhostForwarding=<k>true</k></code>\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/ulAibOLeecVsVmol4hR68zGmzwbxS8XZ6ibGUWyr5lqxtc0vdehUnh2iaymLUcib0lqWH1RXxCGpyBhWGp9CsdQd2g/640">此时将防火墙策略放行22端口，局域网的其它终端就可以访问 Linux 的 ssh 服务了。\n其它端口也可以使用这种方式映射出去，如果开始了 localhostForwarding 功能，实际上可以使用 127.0.0.1 作为 connectionaddress，此时 netsh 命令可以改写为：\n<code>C:\>netshinterfaceportproxyaddv4tov4listenport=22listenaddress=0.0.0.0connectport=22connectaddress=127.0.0.1\n\n</code>即最后一段不用写Linux虚拟机IP，因为默认端口已经 forward至 127.0.0.1了，我们只是再将其映射一遍至 0.0.0.0如果想删除映射，此时有没有好的办法？\n自问自答，同样可以使用 netsh 命令删除配置：\n<code>C:\> netsh interface portproxy show all\n\nC:\> netsh interface portproxy delete v4tov4 listenport=22 listenaddress=0.0.0.0\nC:\> netsh interface portproxy show all</code>\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/ulAibOLeecVsVmol4hR68zGmzwbxS8XZ6O2sCbGNmhERzvZ2Jp1jlDicsRJKBaJbXrDrew53m91T2Nv5dAt84b3w/640">\n到此基本上就将 WSL 的网络部分讲完了，官网有文档，但只讲了如何映射，并没有讲如何删除配置。\n微软官网文档地址：\n\n<code>https://learn.microsoft.com/zh-cn/windows/wsl/networking</code>\n\n',
'<h2>SSH vs SSL/TLS Differences and Similarities?</h2>\n\n<div id="SSHSSLtoc" class="toc"><a href="#SSHSSLtopic-0" target="_self">similarities and differences between SSH vs TLS/SSL protocols.</a><br><a href="#SSHSSLtopic-1" target="_self">What is SSH?</a><br><a href="#SSHSSLtopic-2" target="_self">What is SSL/TLS?</a><br><a href="#SSHSSLtopic-3" target="_self">SSH vs SSL/TLS – Differences Between both Security Protocols</a><br><a href="#SSHSSLtopic-4" target="_self"><k>Similarities Between SSH and SSL/TLS</k></a><br><a href="#SSHSSLtopic-5" target="_self">Conclusion</a><br></div></center><br><br>\n\n<h3 id="SSHSSLtopic-0">similarities and differences between SSH vs TLS/SSL protocols.</h3> <a href="#top" target="_self"><b>⇧</b></a><br>\n<k>SSH and SSL/TLS</k> are employing <a href="https://www.ssl2buy.com/wiki/diffie-hellman-rsa-dsa-ecc-and-ecdsa-asymmetric-key-algorithms">Asymmetric cryptography</a>. \n\nThese security protocols are intended to keep your personal information private during data transmission and secure communication over the Internet and public networks.\nSSH (Secure Shell) and SSL/TLS (<a href="https://www.ssl2buy.com/wiki/what-is-ssl-secure-sockets-layer">Secure Sockets Layer</a>/ <a href="https://www.ssl2buy.com/wiki/tls-1-3-protocol-released-move-ahead-to-advanced-security-and-privacy">Transport Layer Security</a>) are very similar as compare of security aspects – encryption, authentication and integrity processes. \nBut when you are hunting for SSH vs SSL/TLS, here we are exploring similarities and differences between SSH vs SSL/TLS protocols.\n\n<h3 id="SSHSSLtopic-1">What is SSH?</h3> <a href="#top" target="_self"><b>⇧</b></a><br>\nSecure shell, more commonly known as SSH, is a way to securely communicate with a remote computer. \nSSH is used for executing commands remotely by interacting with another system’s operating shell. \n\nOriginally created for UNIX-based computers, SSH is now easily available on Windows.\nYou will notice that SSH runs on TCP port 22. \nOther login methods in Putty — telnet and Rlogin, for instance — don’t have the security that SSH does. \n\nThe SSH protocol was created to replace insecure protocols for remote connections. \nSSH is a cryptographic protocol that creates a tunnel between two remote computers. \nOnce the tunnel is established, the remote system shell is visible, and shell commands can be securely transmitted across the connection. \n\nHere is an illustration of an SSH handshake:\n<img class="lazy" data-src="https://www.ssl2buy.com/wp-content/uploads/2020/01/SSH-Handshake.jpg">\n<h3 id="SSHSSLtopic-2">What is SSL/TLS?</h3> <a href="#top" target="_self"><b>⇧</b></a><br>\n\nWe combine these two protocols as one because they do much the same thing. \nBoth are still used, but TLS is gradually replacing SSL in network implementations. \nLike SSH, these are both cryptographic protocols. \n\nBut the setup is different. \nAn SSL/TLS connection uses the <a href="https://www.ssl2buy.com/wiki/public-key-infrastructure-pki-everything-that-you-should-know-about-it">Public Key Infrastructure</a> (PKI) and <a href="https://www.ssl2buy.com">digital certificates</a> to provide security and integrity to website transactions.\n\nSecure Sockets Layer (SSL) and Transport Layer Security (TLS) are mechanisms for securing websites. \nWhile SSL 2.0 and 3.0 are obsolete version, they have been deprecated by IETF in favor of TLS (Some have suggested that TLS is an upgraded version of SSL 3.0). \nThe difference is that TLS is more robust and secure against modern threats and vulnerabilities. \n\nIf we look at TLS versions, then TLS 1.2 and 1.3 are recent versions that are adopted by major browser authorities. \nTLS 1.2 supports advanced encryption like ECC and AEAD cipher blocks while <a href="https://www.ssl2buy.com/wiki/tls-1-3-protocol-released-move-ahead-to-advanced-security-and-privacy">TLS 1.3</a> adds features of TLS 1.2 as well provides downgrade attack prevention.\n<a href="https://www.ssl2buy.com/wiki/ssl-vs-tls">SSL and TLS</a> are handshake protocols. \n\nThey are part of a server/client architecture that involves requests and responses to negotiate a connection between two computers. \nHere is an illustration of a TLS 1.3 handshake:\n<img class="lazy" data-src="https://www.ssl2buy.com/wp-content/uploads/2020/01/ssl2buy-tls12-13.jpg">\n\nSSL and TLS use <a href="https://www.ssl2buy.com/wiki/digital-signature-vs-digital-certificate-the-differences-that-set-them-apart">digital signatures</a> generated by Certificate Authorities to enable a trust relationship between users and providers. \nOnce the connection is established, it becomes possible to securely transmit sensitive information, such as might be passed between a bank and its customers. \nThe standard TCP port used for Hypertext Transfer Protocol over SSL/TLS (HTTPS) is <a href="https://www.ssl2buy.com/wiki/port-443">port 443</a>.\n\n<h3 id="SSHSSLtopic-3">SSH vs SSL/TLS – Differences Between both Security Protocols</h3> <a href="#top" target="_self"><b>⇧</b></a><br>\nSSH and SSL/TLS generally have different purposes. \nSSH is often used by network administrators for tasks that a normal internet user would never have to deal with. \n\nSSL/TLS, on the other hand, is used by the average internet user all the time. \nAny time someone uses a website with a URL that starts with HTTPS, he is on a site with SSL/TLS.\n<k>SSH</k> (Secure Shell)\n<k>SSL/TLS</k> (Secure Socket Layer/Transport Socket Layer)\n\nSSH runs on port 22\nSSL runs on port 443\n\nSSH is for securely executing commands on a server.\nSSL is used for securely communicating personal information.\n\nSSH uses a username/password authentication system to establish a secure connection.\nSSL normally uses X.509 digital certificates for server and client authentication.\n\nSSH is working based on network tunnels.\nSSL is working based on digital certificates.\n\nSSH is a remote protocol\nSSL is a security protocol\n\nIt is used to reduce security threats for remote server login\nIt allows secure transition of data between a server and the browser thus, keeps information intact.\n\nSSH follows authentication process by server’s verification done by client, session key generation, and client’s authentication\nSSL follows authentication process by exchange of digital certificate\nData integrity is measured with algorithms like SHA, SHA-2, SHA-256\n\nData integrity is measured with the message digest and added to encrypted data before the data is sent.\n<h3 id="SSHSSLtopic-4"><k>Similarities Between SSH and SSL/TLS</k></h3> <a href="#top" target="_self"><b>⇧</b></a><br>\nIt’s understandable that someone might get SSH and SSL confused, since both are three-digit abbreviations that start with the same letter. \n\nBut there are other similarities. \nFirst, these are both (and all three) protocols that are used in secure connections. \nBoth use encryption to protect data that passes between two network devices.\n\nThe purpose of both types of protocols is to create a reliable connection. \nWithout these two mechanisms, we would not have the security necessary to conduct business on the internet that we have today.\n<h3 id="SSHSSLtopic-5">Conclusion</h3> <a href="#top" target="_self"><b>⇧</b></a><br>\nWhile there are other applications for these protocols, the basic differences are clear. \nSSH is generally a tool for technicians, and SSL/TLS is a mechanism for securing websites that is transparent to the user. \n\nOf course, these two are not mutually exclusive. \nSSH may use SSL/TLS as part of its secure solution. \n\nThere are a variety of possible implementations for these versatile protocols. \nThey are necessary these days with all the online threats that we face. \n\n',
'<h2>什么是防火墙以及如何使用VPN翻墙</h2>\n<a href="https://windscribe.com/" class="whitebut ">windscribe 中国可用VPN</a>\n<a href="https://www.getzoog.com/" class="whitebut ">zoog 中国可用VPN</a>\n\n<h3>使用VPN绕过防火墙</h3>\n<k>VPN</k>可轻松通过<k>隧道</k>绕过防火墙。\n几乎所有<k>VPN都有一个隧道协议，可以屏蔽你的流量，并在浏览网页时为你提供完整的匿名性和安全性</k>。\n\n<k>通过连接到你选择的位置的服务器，你将收到一个新的IP地址</k>，以让你瞒骗政府、你的互联网服务提供商（ISP）以及其他在窥探你的在线活动的人，让他们以为你人在一个完全不同的位置。\n此外，VPN还会隐藏所有可能会被滥用的流量和连接数据。\n\n<h3>选择最佳VPN以绕过防火墙</h3>\n目前VPN市场上有数百甚至数千种VPN服务可供选择。\n其中一些是免费的。\n虽然它们可以绕过某些防火墙，<k>但它们无法让你观看所有你最喜爱的节目并绕过严格的政府（如中国、俄罗斯、伊朗或土耳其等国）审查</k>。\n\n选择VPN以绕过防火墙时，必须考虑以下事项：\n<h3>1 <k>安全协议和加密</k></h3>\n你将需要一个<k>具有多种安全协议和各种加密层的VPN</k>，才能<k>绕过严峻的防火墙</k>。\n\n一些值得关注的协议包括：\n<ul>\n<li><k>OpenVPN</k></li>\n<li><k>Layer-2-Tunnel Protocols (L2TP)</k></li>\n<li><k>Point-to-Point Tunneling Protocols (PPTP)</k></li>\n<li><k>Secure Socket Tunneling Protocol (SSTP)</k></li>\n</ul>\n<k>OpenVPN是目前最可靠、最安全、最灵活的协议，可以帮你克服任何防火墙的阻挡</k>。\n除了必须确保VPN具备OpenVPN外，还要确保它具有<k>256位AES加密以及DNS和IPv6泄漏保护</k>。\n\n<h3>2 <k>服务器库</k></h3>\n你在选择VPN服务时，<k>必须确保该公司拥有大量的服务器</k>，因为<k>大多数防火墙会根据用户的IP地址阻止用户</k>。\n防火墙将根据IP地址黑名单选择允许或限制谁进入。\n\n你的VPN需要拥有大量的服务器，以便你在你使用的服务器无效时，切换到另一台服务器。\n请记得<k>检查公司是否在你便好的国家拥有服务器</k>，因为如果你想观看美国Netflix，你将需要在美国拥有大量服务器的VPN，以持续<k>观看你最爱的电视剧</k>。\n<h3>3 <k>速度</k></h3>\n\n如果你打算使用VPN来获取电影、节目和游戏，那么<k>选择提供高速且无带宽限制的服务</k>非常重要。\n我们建议选择在你所在地<k>附近有服务器的VPN，因为这可能会进一步提高你的互联网速度。\n</k>\n\n<h3>绕过防火墙的2大VPN服务</h3>\n现在你已了解防火墙是什么以及<k>VPN如何帮你翻墙</k>，以下是我们针对<k>绕过防火墙推荐的前2大VPN服务</k>：\n\nExpressVPN\nCyberGhost VPN\nOpenVPN\n<h3>结论</h3>\n\n<k>选择具有正确安全协议和加密的VPN，是绕过所有类型防火墙的关键</k>。\n同样重要的是，你应该购买在你偏好的位置和你的所在地附近有服务器的VPN，以访问你想要的内容和提高你的互联网速度。\n\n<a href="https://www.youtube.com/watch?v=_oNirsJJcpI" class="whitebut ">翻墙史断代</a>\n\n<a href="https://www.youtube.com/playlist?list=PL6OyR2nH4Y3mfMkEog5uDqXs40KJ79n9e" class="whitebut ">翻墙方法大全</a>\n\n<a href="https://www.youtube.com/watch?v=cyt0KXRX-aU" class="whitebut ">翻墙教程</a>\n<a href="https://bit.ly/42CUvLU" class="whitebut ">机场网址</a>\n<a href="https://bit.ly/3S21d7R" class="whitebut ">翻墙软件下载</a>\n\n',
'<h2>翻墙、科学上网指南</h2>	\n什么是翻墙（翻墙工具）\n翻墙顾名思义，就是翻过某个墙，这墙意思是「中国网路防火长城(GFW)」。\n\n某些国家、监狱或情报机构，会执行所谓的网路审查，就是某些网站被墙给阻隔掉了，是不能看的，故也就产生翻墙的需求。\n现在有各种不同的方式来翻墙，本文会一一介绍和比较优缺点。\n<em>备注：\n有时翻墙也被称作科学上网，用来翻墙的软体称作翻墙软体，常被称作梯子。</em>\n翻墙最新政策: 最近因应中国百年党庆，中美关系政策，共产党实施所谓白单政策，也就是只有在白单上面的网站跟软体可以使用，相较于过去宽松的黑单政策(黑单:意思就是黑名单)，白单政策几乎全面抹杀中国翻墙软体，最近已经收到小伙伴通知:有名的国内翻墙软体光年VPN，PandaVPN已经无法使用。\n\n现在经过我测试: StrongVPN, ExpressVPN，Surfshark是目前能翻墙的欧美VPN，也相对较安全，建议使用StrongVPN, ExpressVPN，Surfshark。\n如果小伙伴坚持不用欧美VPN，那我们推荐一款FlowVPN，本土制且有中文介面，但稳定度不如欧美VPN。\n<h3>墙知乎网站声明</h3>\n声明如下: 本网站跟其他网站不一样，不会有弹出推荐的VPN广告，也不会跟你搜集任何电子邮件，因为我并没有直接受惠于我推荐的任何VPN厂商，我也不是他们员工，他们也没有付钱给我叫我帮他写几句好话，我针对超过一百款以上的翻墻软件进行测速，加上我自己在中美工作多年经验，能用的，我就坐速度测试并且推荐，不能用的我就写不能用，希望让大家可以自由享受高墻后的自在晴空。\n<h3>主流翻墙软件协议</h3>\n<img class="lazy" data-src="https://g7i2c9s5.rocketcdn.me/wp-content/uploads/2021/04/add-a-heading-1-1.png" />   以下来介绍几个跟翻墙有关的技术名词，了解这些名词可以帮助网友在选择翻墙软件时具备更好的基础知识，更多可以參考 <a href="https://wallzhihu.com/tech/">全网最全面最详细的翻牆技术大全-含实作</a>。\n如果只是想尽快翻墙的朋友，可以直接前往「翻墙软件推荐」。\n\n<h3>VPN</h3>\n听过翻墙的朋友们，肯定听过VPN这个名词，现在来解释VPN跟翻墙是什么关系。\nVPN是一种加密的方式，能过保护使用者的IP、位置、个人资讯不外泄，所以VPN可以视作是一种伪装(如果更学术的讲，叫做加密)。\n经过伪装(加密)后的使用者IP、位置、跟个人资讯，就可以翻墙来访问一些被防火墙屏蔽的网站。\n\n许多美国人也常使用VPN，目的不是为了翻墙，而是想要保护自己的资料不外泄（像是我自己在疫情期间，需要远端办公，也是透过VPN）。\n目前主流的VPN均为美国公司所开发，然而由于中国政府近年来强力打击加密流量，因此绝大多数的VPN已经无法在中国使用。\n\n<h3>SSR</h3>\nSSR全名是ShadowsocksR，想像成有一个中间者可以访问被屏蔽的网站，其访问后再告诉使用者网站资讯。\n由于中间者并没有受到防火长城的限制，因此可以借此来达到翻墙的目的。\nSSR（ShadowsocksR）是一种基于SOCKS5代理的加密网络协议，它是在Shadowsocks协议的基础上进行改进和升级的，具有更高的安全性和稳定性。\n\nSSR支持多种加密和协议，可以让用户在不同的网络环境下选择最合适的配置。\n相比于其他VPN协议，SSR更为轻量级，使用更加简单方便。\nSSR的实现方式是在服务器和客户端之间建立一条加密的通信隧道，通过将原始数据进行加密和混淆，保护用户的网络流量不被监视和干扰。\n\n在使用SSR时，用户可以通过自定义加密方式、协议、混淆等配置参数来进一步提高网络安全性和隐私保护水平。\n由于其出色的隐私保护能力和安全性，SSR成为了许多用户在国内外上网、翻墙的首选技术。\n但是需要注意的是，由于在某些地区使用SSR被认为是非法行为，用户需要谨慎选择合适的使用方式和地点。\n\n同时，用户在使用SSR时需要选择可靠的SSR服务提供商，并注意随时更新和升级客户端软件，以避免遭受不必要的安全风险。\n<em><mark>备注：\n学术上来说，SSR（或類似V2Ray、Trojan）借由建立Sock5代理伺服器，进行资料传需，且经由筛选资料来防止被防火墙辨认，进而达到翻墙的效果。\n</mark></em>\n\n<h3>Trojan 翻墙技术</h3>\nTrojan是一种基于HTTPS协议的加密网络代理技术，它可以在传输过程中使用TLS1.3协议对数据进行加密，提高了传输的安全性和隐私保护水平。\n\nTrojan同时支持多种加密方式，可以让用户自行选择最适合自己的加密方式和协议，更加灵活方便。\n与SSR类似，Trojan也可以通过客户端和服务器之间的加密隧道来保护用户的网络流量，防止其被网络监视和拦截。\n但相较于SSR，Trojan更加隐蔽，因为它使用了与Web流量相同的端口和协议，难以被防火墙和流量监测软件检测出来。\n\n在使用Trojan时，用户需要先配置服务器端的Trojan服务，并且使用合适的客户端软件连接服务器，即可享受高速、稳定的代理服务。\n但需要注意的是，由于在某些地区使用Trojan被认为是非法行为，用户需要谨慎选择使用方式和地点，遵守当地的法律法规，以避免遭受不必要的风险和损失。\n\n<h3>V2Ray</h3>\n最后来说说近年很红的V2Ray. \n技术细节可以参考<a href="https://guide.v2fly.org/en_US/">V2Ray Beginniner\'s Guide</a>。\n或是GitHub<a href="https://github.com/v2fly/v2ray-step-by-step">https://github.com/v2fly/v2ray-step-by-step</a>。\n\nV2ray是一种基于VMess协议的网络代理技术，它可以在传输过程中使用TLS协议进行加密，保证了数据的安全性和隐私保护水平。\nV2ray支持多种加密方式和传输协议，包括TCP、mKCP、WebSocket、HTTP/2等，可以让用户根据实际需求自行选择最适合自己的配置方式。\n与SSR和Trojan不同，V2ray使用了更加先进的动态端口分配机制，即可避免被防火墙和流量监测软件检测出来。\n\n同时，V2ray还支持基于路由策略的流量控制和负载均衡等功能，可以让用户更加灵活地管理和优化网络流量。\n在使用V2ray时，用户需要先配置服务器端的V2ray服务，并使用相应的客户端软件连接服务器，即可享受高速、稳定的代理服务。\n需要注意的是，V2ray在某些地区被认为是非法技术，用户需要谨慎选择使用方式和地点，并遵守当地的法律法规，以避免遭受不必要的风险和损失。\n\n简单说，V2Ray可以当作是进化版的SSR，包含各种不同的混淆跟伪装。\n<h3>翻墙与科学上网的常见问题：</h3>\n<h3>翻牆的墙到底是什麽?</h3>\n“墙”在这里指的是中国政府所实行的“防火墙”（Great Firewall），是一个由多个技术和政策手段构成的网络过滤系统，其目的是监控、审查和过滤互联网上的信息，以控制公民对网络上信息的访问和传播。\n中国的防火墙起源于20世纪90年代末期，当时中国政府开始担心互联网的普及会对国家政权的稳定造成影响，因此推出了一系列控制互联网内容的政策和技术手段。\n\n最初的防火墙主要限制了国外网站的访问，但随着中国互联网的快速发展，防火墙的功能也在不断扩展和加强。\n在中国的防火墙中，有一些被称为“黑名单”的政策和技术手段，可以过滤掉政府认为敏感或不良的内容，比如政治敏感话题、色情、暴力等。\n此外，中国政府还通过技术手段监控网民的网络活动，并对违反规定的网民进行惩罚。\n\n尽管防火墙对中国互联网的发展产生了一定的负面影响，但它也帮助中国政府维护了社会稳定和国家安全。\n然而，防火墙也被批评为侵犯了人权和言论自由，因为它限制了中国公民对网络上信息的自由访问和传播。\n\n<h3>翻墙法律问题 (翻墙是否触法)</h3>\n关于翻墙的法律问题一直是大家关心的，按照中国境内的法律，大致有分以下3种情况：\n如果是自己上网下载翻墙软体，自己收看油管/脸书等，情节轻微，一般不会受罚。\n如果是散播翻墙软体或推销翻墙软体给他人使用，则按情节轻重来判断是否受罚。\n\n如果是自己制作翻墙软体或是贩售翻墙软体来营利，则明确违法。\n所以小伙伴们翻墙，不管是要自己上网看油管(youtube)影片，上脸书与国外朋友聊天，或是收看Neflix精彩影集，甚至是阅读Arxiv期刊文章等，基本上不用担心法律问题。\n\n特别提醒：\n这边指的翻墙是必须使用「非中国政府提供」的翻墙软件。\n网路上许多翻墙软体都是由中国政府出资的钓鱼使用，过去曾经发生过网友使用蓝灯VPN遭到警方逮捕的新闻，本站会将各大翻墙VPN进行IP检测，确保所提供的翻墙软件均符合隐蔽用户IP的安全能力。\n<h4>两个特别危险的VPN，具有洩漏个人安全的风险。</h4>\n请网友千万不要使用\n\n<h4>中国翻墙软件黑名单百科</h4>\n<a href="https://wallzhihu.com/vpn-blacklist/">中国翻墙软件黑名单百科</a>\n使用如下的VPN，轻则不能翻墙，重则个人资料外洩，像是信用卡资料，网站帐号密码，电子邮件等重要资讯外洩，所以请网友千万不要使用如下的翻墙软件。\n<h3>軟件一: 熊猫VPN(PandaVPN)</h3>\n\n由于熊猫VPN跟蓝灯VPN采用相同的协议，均是代理协议。\n在加密方面又没有光年VPN来得优异，经过专业IP检测工具发现翻墙后的IP位置仍然可以被查询到，未来会不会出现类似蓝灯VPN的案例我们不得而知，因此不推荐该产品。\n<h3>軟件二: 蓝灯(Lantern)VPN</h3>\n\n蓝灯VPN 曾是开源专案，是一种使用V2ray技术的VPN，在国内曾经红极一时，但2020曾发生使用蓝灯vpn浏览维基百科而遭公安抓捕的纪录。\n属于极度危险的VPN，主是因为是开源加上中国法律规定: 自製VPN是要受罚的，请网友们不要冒险尝试。\n以下大家可以搜寻维基百科的纪录。\n\n<h3>中国VPN有争议的黑名单</h3>\n<h3>中国VPN有争议的黑名单 2023 8月更新</h3>\n中国VPN有很多不能用的且有争议的VPN，通常都满足上面几个危险特徵，数量实在太多，我也不该用长条式全部列出来，乾脆用一个表格，记录他们，好让大家直接搜寻这张表，并且也附上我觉得有争议的部分，也挑出几个特别的VPN，来分析一下细节，如果资讯有误，欢迎告知，我不愿意冤枉他人，但也不愿意小伙伴们受害，如果有小伙伴买了某类VPN，但不能用，可以告知，我会亲自下载且测试，可参考我部分文章。\n\n<a href="https://wallzhihu.com/lanternvpn/">蓝灯VPN(开源)</a>\n<a href="https://wallzhihu.com/pandavpn/">Panda VPN(不确定能用)</a>\n<a href="https://wallzhihu.com/wangvpn/">老王VPN(已经有人被抓)</a>\n\n<a href="https://wallzhihu.com/qingfengshenzhen/">佛跳墙VPN (不确定能用) </a>\n<a href="https://wallzhihu.com/vpn-cat-master/">Kitten VPN (不确定能用)</a> <a href="https://wallzhihu.com/shendeng/">神灯VPN (不确定能用) </a>\n<a href="https://wallzhihu.com/lightyearvpn/">光年VPN(跑路)</a>极光VPN (不确定能用) <a href="https://wallzhihu.com/heidong/">黑洞VPN (不确定能用) </a>\n\n<a href="https://wallzhihu.com/turbovpn/">Turbo VPN (不确定能用) </a>\n<a href="https://wallzhihu.com/astrillvpn-vpn/">Astrill VPN(价格太高)</a>大象VPN (不确定能用) VyprVPN (不确定能用) <a href="https://wallzhihu.com/urban-vpn/">UrbanVPN(免费VPN)</a>\n<a href="https://wallzhihu.com/ipvanish-vpn/">IPVanish VPN (价格太高) </a>\n\n<a href="https://wallzhihu.com/cyberghost/">CyberGhost (价格太高) </a>\n<a href="https://wallzhihu.com/protonvpn/">Proton VPN (不确定能用)</a>  Windscribe (免费VPN) <a href="https://wallzhihu.com/mayi-vpn/">蚂蚁VPN (不确定能用)  </a>\n<a href="https://wallzhihu.com/789vpn/">789vpn(加速器) (不确定能用)</a>  <a href="https://wallzhihu.com/vpn-proxy-master/">VPN Proxy Master (不确定能用) </a> <a href="https://wallzhihu.com/purevpn/">PureVPN (不确定能用) </a> <a href="https://wallzhihu.com/flyvpn/">Flyvpn (不确定能用)  </a>\n\n<a href="https://wallzhihu.com/private-vpn/">Private VPN (不确定能用) </a> Kuto VPN (不确定能用)  <a href="https://wallzhihu.com/360vpn/">360VPN (不确定能用)  </a>\n<a href="https://wallzhihu.com/hotspot-shield/">hotspot shield (免费VPN) </a>\n<a href="https://wallzhihu.com/rocket110-vpn/">火箭 VPN  (不确定能用)   </a>\n\n<a href="https://wallzhihu.com/letsvpn/">LetsVPN(快连VPN)  (不确定能用)  </a> <a href="https://wallzhihu.com/greenvpn/">GreenVPN  (不确定能用)   </a>tenonvpn (小型VPN) 边缘VPN (小型VPN) Testflight VPN (不确定能用)\n夏时VPN(小型VPN)云帆VPN  (不确定能用)   VPN hub  (不确定能用)   <a href="https://wallzhihu.com/goj-life/">狗急加速VPN (小型VPN) </a>飞鱼VPN (小型VPN) PlexVPN (小型VPN) <a href="https://wallzhihu.com/seagulltool/">海鸥网络加速助手</a>(风险VPN)<a href="https://wallzhihu.com/thunder-vpn/">Thunder VPN(闪电VPN)(非常不稳定)</a>\n<h3>翻墙的好处是什么？</h3>\n以下是您应该寻找的一款好的VPN的特质，它们可以让您更好地利用翻墙服务：\n海外流媒体解锁功能：\n\n翻墙工具可以访问海外流媒体平台，如Netflix、Disney+、Hulu、HBO、BBC iPlayer、Amazon Prime Video、ESPN等。\n这些平台提供了丰富的影视资源，包括未删减的影片和4K高清版。\n社交平台和营销：\n\n外贸从业者可以利用翻墙工具访问海外社交平台，如Youtube、Facebook、Twitter、Instagram、Vimeo、Pinterest、Reddit、Tumblr、Tiktok、Quora等，以便在这些平台上做营销推广并与客户进行沟通。\n国际金融和投资：\n通过翻墙工具，您可以访问美股、港股等投资信息，以及虚拟货币比特币等最新投资趋势。\n\n海外资料信息查阅：\n翻墙可以访问全球最全最大的百科网站Wikipedia维基百科，以及全球知名的博客网站，如Blogspot、Medium、Wordpress等。\n此外，还可以使用全球知名的搜索引擎Google、Yahoo、Bing、Duckduckgo等，以及在线教育平台TED、Coursera、Udemy等。\n\n海外音乐娱乐：\n通过翻墙，您可以访问全球知名的在线听歌平台，如Spotify、Apple Music、Amazon Music、Pandora、YouTube Music、Soundcloud等。\n这些平台拥有数量庞大的歌曲库，其中许多还提供无损音频。\n\n海外新闻媒体网站：\n通过翻墙，您可以访问全球知名的新闻媒体网站，如BBC、CNN、Google News、The New York Times、Yahoo! News等，了解全球各地的奇闻趣事，并学习英文。\n但是，需要注意的是，切勿浏览与政治、经济、文化、宗教等相关的新闻。\n\n<h3>更多翻墙的好处</h3>\n保护个人隐私：\n透过翻牆，可以隐藏您的真实IP地址和位置，避免被追踪和监视。\n\n网路自由：\n翻牆可以让你浏览被封锁的网站，例如维基百科、Facebook、Twitter和YouTube等，让你可以自由地访问和分享信息。\n突破地域限制：\n\n有些网站和应用程序仅在特定国家或地区提供，透过翻牆，可以访问这些地区的网站和应用程序。\n防止网络攻击：\n翻牆可以加密您的网络连接，保护您的数据不被黑客和骇客窥探和盗取。\n\n保护您的商业利益：\n如果您是一个企业家，翻牆可以让您轻松地访问国外的商业信息和市场调查，以便更好地了解全球市场。\n加速网路连接：\n\n某些地区的网络连接速度可能较慢，透过翻牆连接到其他地区的服务器，可以加速网络连接速度。\n检测广告欺诈：\n透过翻牆，可以浏览其他国家的网站，以更全面的角度检测广告欺诈和网路诈骗。\n\n进行匿名浏览：\n透过翻牆，可以匿名地浏览网站和下载文件，不会被其他人追踪或发现。\n为游戏提供更好的体验：\n\n如果您是一个游戏爱好者，翻牆可以让您访问其他国家或地区的游戏服务器，提供更好的游戏体验。\n无限制的使用：\n翻牆可以让您自由访问互联网，不会受到任何限制，您可以自由地浏览、下载和分享信息。\n\n<h3>如果想要从海外访问中国境内的网站 可以吗?</h3>\n通常情况下，可以通过科学上网的方式翻墙访问中国的网站和APP。\n然而，由于中国政府对网络进行了强制审查和封锁，所以需要使用特殊的VPN（虚拟专用网络）工具来绕过防火墙限制。\n\n不过需要注意的是，使用科学上网的方式访问中国网站和APP存在一定的风险，因为中国政府一直在打击使用VPN等科学上网工具的行为，也会对翻墙流量进行监控和封锁。\n此外，一些中国的网站和APP也可能不支持海外IP地址的访问。\n這時你需要所謂的回國VPN技術。\n\n可以参考我的文章: <a href="https://wallzhihu.com/vpn-into-china-2/" data-type="URL" data-id="https://wallzhihu.com/vpn-into-china-2/">回国VPN</a>\n<h3>我花钱购买的科学上网工具不能使用，怎麽半</h3>\n如果您购买的 VPN 突然无法使用，可能是因为以下原因：\n\n服务器故障或维护：\n检查您的 VPN 服务器是否正在维护中或出现故障，这可能会导致无法连接。\n网路问题：\n\n如果您的网路连接存在问题，也可能会影响 VPN 的使用，请检查您的网路设置。\nVPN 设置问题：\n如果您的 VPN 配置不正确，也可能会导致无法使用，请检查您的 VPN 设置是否正确。\n\n以下是一些可能的解决方式：\n更换 VPN 服务器：\n如果您的 VPN 服务器正在维护中或出现故障，可以尝试更换其他服务器。\n\n重新启动 VPN：\n有时重新启动 VPN 可以解决一些连接问题，您可以试试重新启动 VPN。\n检查网路设置：\n\n如果您的网路设置存在问题，您可以尝试重启路由器或联网设备，并确保您的网路设置正确。\n联繫 VPN 提供商：\n如果您无法解决问题，您可以联繫您的 VPN 提供商，请求技术支援。\n\n他们可以帮助您解决问题，或者提供替代方案。\n<h3>如何与家人朋友共享翻墙软件</h3>\n购买支持多个设备连接的翻墙软件服务。\n\n大多数翻墙软件服务都允许您在多个设备上同时使用同一账户。\n您需要确认您购买的翻墙软件服务提供了足够多的设备连接数，以便您能够与您的家人和朋友分享。\nSurshark 允许无线设备，strongvpn, expressvpn, flowvpn 支持同时五个设备。\n\n创建一个翻墙软件账户。\n一旦您购买了翻墙软件服务，您将获得一个账户。\n您需要将此账户的登录信息（例如用户名和密码）分享给您想要共享翻墙软件服务的家人和朋友。\n\n告诉您的家人和朋友如何安装和使用翻墙软件软件。\n如果您的家人和朋友是电脑或手机用户，他们需要下载和安装翻墙软件软件。\n您可以提供翻墙软件服务商的下载链接，或者直接向他们发送安装文件。\n\n安装完成后，您需要向他们提供您的翻墙软件账户信息，以便他们能够在软件中登录并开始使用VPN服务。\n确认您的翻墙软件服务是否允许共享账户。\n某些翻墙软件服务可能不允许共享账户，或者限制同一时间内多个设备的连接数。\n\n在与家人和朋友共享翻墙软件之前，请确保您的翻墙软件服务允许共享账户并且支持您想要连接的设备数量。\n<h3>免费VPN存在多种风险和问题</h3>\n使用免费VPN存在多种风险和问题，因此不应该轻易使用免费VPN，以下是一些原因：\n\n安全问题：\n大部分免费VPN的提供商都没有经过充分的安全检查，可能存在漏洞和安全问题，使得用户的个人信息和数据面临被窃取、泄露的风险。\n隐私问题：\n\n很多免费VPN的提供商为了维持运营，会在用户使用时收集个人信息，并将这些信息出售给第三方或用于广告投放等目的，这会损害用户的隐私权。\n速度和带宽限制：\n由于免费VPN的提供商通常没有足够的资源和资金，因此它们会限制用户的速度和带宽，导致用户的网络体验较差。\n\n稳定性和可靠性问题：\n由于免费VPN的提供商通常没有充足的资源和技术支持，使得他们的服务器可能会经常出现故障或者不稳定，导致用户无法正常连接或者断线。\n广告骚扰：\n\n一些免费VPN的提供商会在用户使用时强制插入广告，影响用户的体验。\n法律风险：\n免费VPN的提供商可能会违反当地的法律法规，导致用户面临法律风险。\n\n综上所述，由于免费VPN存在的多种风险和问题，建议用户使用付费的可信VPN服务，以确保其个人信息和数据的安全和隐私，同时保证较好的网络体验和服务质量。\n<h3>如何加速科学上网</h3>\n科学上网是一个复杂的过程，其速度受到许多因素的影响，其中包括本地网络带宽、科学上网工具的质量、服务器节点的物理距离等等。\n\n但是，如果你想在科学上网的道路上跑得更快，以下是一些方法：\n选择最好的科学上网工具。\n如今，市场上有很多VPN工具可供选择，但如果你想要最高品质的体验，那么ExpressVPN绝对是首选。\n\n它是业内著名的科学上网工具之一，不仅在中国可用，而且连接速度极快。\n选择距离你最近的服务器节点。\n如果你是在中国使用科学上网工具，那么中国周边地区的服务器节点是最佳选择，比如中国香港、中国台湾、日本、韩国和新加坡等地区的服务节点。\n\n通过选择物理距离更短的服务器节点，可以更快地加载网页和流媒体。\n打开科学上网工具的拆分隧道功能。\n当你访问国外网站时，开启拆分隧道功能可以使你的数据流量经过翻墙VPN的服务器，从而更好地保护你的上网隐私；\n\n而当你访问国内网站时，关闭该功能可以减少服务器的负担，从而提高网速。\n正确使用科学上网工具。\n科学上网的工具和协议不断更新，因此了解最新的科学上网技巧和方法是很重要的。\n\n选择正确的VPN协议或翻墙模式，选择经过特殊优化的流媒体服务器和P2P服务器等，也是提高连接速度的有效方法。\n此外，你还可以与其他科学上网用户交流，寻求帮助和建议。\n有些VPN服务提供商还会提供24小时的客户支持服务，可以随时为你解答科学上网的问题。\n\n不管你是在中国还是其他地方，提升科学上网速度的方法多种多样，只要你能不断探索，就能找到最适合自己的方法。\n<h3>科学上网(翻墙软件)支持那些设备?</h3>\n科学上网（翻墙软件）支持的设备有很多，通常包括以下几类：\n\n电脑：\n包括 Windows、macOS、Linux 等操作系统的电脑设备。\n手机和平板电脑：\n\n包括 Android、iOS 等移动设备，以及 Android 平板、iPad 等平板电脑设备。\n路由器：\n一些科学上网服务商提供专门的路由器翻墙服务，支持路由器的操作系统通常为 OpenWRT 或 DD-WRT 等。\n\n其他智能设备：\n如智能电视、游戏机、智能音响等，支持科学上网的设备可以通过连接路由器等方式实现翻墙访问。\n需要注意的是，不同的科学上网服务商支持的设备和操作系统可能会有所不同，需要根据自己的设备类型和需求选择合适的科学上网软件和服务。\n\n<h3>游戏加速器跟VPN是一样的吗</h3>\n游戏加速器和VPN不完全相同，它们的作用和功能有所不同。\nVPN（Virtual Private Network）是一种加密通信协议，通过在公共网络上建立安全的私人网络连接来保护用户的在线隐私和安全。\n\nVPN将用户设备和互联网之间的通信路线转换为虚拟私人通道，从而隐藏用户真实的IP地址和网络流量，提供加密和匿名的网络连接。\n而游戏加速器则是一种网络优化工具，它通过加速网络数据传输来降低游戏延迟和提高游戏的流畅度。\n它可以优化用户的网络连接，减少网络丢包和延迟，提高游戏连接速度和稳定性，从而提供更好的游戏体验。\n\n虽然游戏加速器和VPN在一些方面都可以提高网络连接速度和稳定性，但它们的作用和应用场景有所不同。\nVPN更多用于保护用户的隐私和安全，而游戏加速器则主要用于优化游戏连接。\n<h3>中囯翻墙常见问题</h3>\n\n翻墻到底有沒有違法? 翻墻會不會發現? 被發現會怎樣? 如果只是使用翻墻VPN來看一下臉書阿，油管阿，會不會有問題。\n這類的問題真的層出不窮，詳細的解答，可以參考我的長文<a href="https://wallzhihu.com/china-ban-vpn/">在中国地区使用VPN翻墙是否违法-2023最详细解析</a>。\n裡面有許多判例，我稍微整理如下:\n\n个人使用VPN违法吗？\n按照我上述列出的，近年来中国出现了很多起因为翻墙被抓的事件，现在可以保证的是：\n在中国贩售自己制作的VPN是保证违法的，也有零星人士使用免费或是开源VPN导致被公安抓捕，但是整体而言，还是没有完全禁止，还是可以使用一些付费VPN来观看油管，脸书，甚至是学术文章。\n\n这方面还是没有问题的。\n中国还能用的VPN有哪些？\n可以参考我底下写的中国还能用的安全VPN，或是<a href="https://wallzhihu.com/best-vpn-china/">中国VPN翻墙指南含翻墙软件</a>。\n\n个人贩卖VPN违法吗？\n按照工信部：\n未经批准 不得自行建立或租用VPN开展跨境经营活动，简单说啦: 就是不可以: 未经电信主管部门批准，不得自行建立或租用专线（含虚拟专用网络VPN）等其他信道开展跨境经营活动\n\n个人使用VPN会被发现吗？\n这问题没有标准答案，跟你使用的技术有关，有VPN，Trojan, SSR，等，我将在底下谈到四种危险VPN的讯号，如果有任一个特徵符合，那就满危险的，因为防火牆不断的升级，使用VPN当然是有机会被发现的。\n所以使用VPN翻墙最好低调一点。\n\n<h3>翻墙与科学上网总结</h3>\n相信看完本文的小伙伴们，已经知道什么是翻墙，以及如何翻墙等基本知识。\n在过去一年由于防火长城日渐完善，VPN已经不再是翻墙的主流协议，依照我个人的经验\n\n<a href="https://wallzhihu.com/fanqiang-strong" target="_blank">StrongVPN</a>是目前使用上最为顺手的翻墙软件。\n\n\n',
'<h2>useful programs</h2>\nVPN指的是代理服务器，也就是网民俗称的“翻墙软件”，而它要翻的那个墙就是“防火墙”。\n\n<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Proxy_servers_and_tunneling">Proxy servers and tunneling</a>\n<br>\n\n<a href="https://support.microsoft.com/en-us/windows/use-a-proxy-server-in-windows-03096c53-0554-4ffe-b6ab-8b1deee8dae1">Use a proxy server in Windows</a>\n<br>\n<a href="https://www.zhihu.com/question/22191196">android proxy server</a>\n<br>\n<a href="https://vpnoverview.com/privacy/anonymous-browsing/free-proxy-servers/">Free Proxy Servers List</a> 47.91.88.100 45.77.56.114\n<br>\n<a href="http://act.cqnews.net/tomcat-docs/proxy-howto.html">Apache Tomcat Servlet Proxy Support</a>\n<br>\n',
'<h2>change DNS settings using Control Panel on Windows 11</h2>\nTo change the DNS settings with Control Panel, use these steps:\nOpen <k>Control Panel</k>.\nClick on <k>Network and Internet</k>.\nClick on <k>Network and Sharing Center</k>.\nClick the <k>Change adapter settings</k> option in the left pane.\n\n\n<img src="https://cdn.mos.cms.futurecdn.net/97FGrNdJKbTxhE2Z9MdBfV.jpg">\n\n\nRight-click the active network interface and select the <k>Properties</k> option.<k>Quick tip:</k> You\'ll know which adapter is connected to the network because it won\'t have a "Disabled" or "Network cable unplugged" label.\n\n<img src="https://cdn.mos.cms.futurecdn.net/fNDx7Dr9PcaF6t2A3XpkV6.jpg">\n\nSelect and check the <k>Internet Protocol Version 4 (TCP/IPv4)</k> option.\n\n<img src="https://cdn.mos.cms.futurecdn.net/Qw9QxituieTrQy9mMD3E4b.jpg">\n\nClick the <k>Properties</k> button.\nSelect the <k>Use the following DNS server addresses</k> option.<k>Quick note:</k> When you select the option to specify the DNS settings manually, the computer will continue to receive the TCP/IP address from the DHCP server (router).\nUnder the "Preferred DNS server" section, confirm the primary DNS address.If you want to use Cloudflare, Google Public DNS, or Cisco OpenDNS, you can use these settings:<k>Cloudflare:</k> 1.1.1.1\n<k>Google Public DNS:</k> 8.8.8.8\n<k>OpenDNS:</k> 208.67.222.222\n\n<img src="https://cdn.mos.cms.futurecdn.net/jqNPgxGXU5eA737evr8mEo.jpg">\n\nUnder the "Alternate DNS server" section, confirm the secondary DNS address the system will use if the primary is not reachable.You can use one of the secondary addresses from these companies:<k>Cloudflare:</k> 1.0.0.1\n<k>Google Public DNS:</k> 8.8.4.4\n<k>OpenDNS:</k> 208.67.220.220\n\n(Optional) Click the <k>Advanced</k> button.\nClick the <k>DNS</k> tab.\nClick the <k>Add</k> button.\nSpecify additional alternate DNS server addresses.\n\n\n<img src="https://cdn.mos.cms.futurecdn.net/2h3yJHJ5z5JnuigS7BHvhJ.jpg">\n\nClick the <k>Add</k> button.<k>Quick tip:</k> In addition to adding more addresses, you can also edit and remove resolvers, and you have an option on the side to change their priority.\nClick the <k>OK</k> button.\nClick the <k>Close</k> button.\n\nOnce you complete the steps, the computer will immediately start using the specified DNS settings.\n',
'<h2>How to change DNS settings using Settings on Windows 10</h2>\nTo change the DNS addresses through the Settings app, use these steps:\n<ol start="1">Open <k>Settings</k>.\nClick on <k>Network &amp; Internet</k>.\nClick on <k>Ethernet</k> or <k>Wi-Fi</k>.\nSelect the connection that connects Windows 10 to the network.\n\n<img src="https://cdn.mos.cms.futurecdn.net/HthToAVdr5xDPouFHic8oP.jpg">\n\nUnder the "IP settings" section, click the <k>Edit</k> button.\n\n<img src="https://cdn.mos.cms.futurecdn.net/Bz5JRSJEXif3MYhMZZBxwB.jpg">\n\n\nUse the "Edit IP settings" drop-down menu and select the <k>Manual</k> option.\nTurn on the <k>IPv4 toggle</k> switch.\nUnder the "Preferred DNS server" section, confirm the primary DNS address.To use Cloudflare, Google Public DNS, or Cisco OpenDNS, use these settings:<k>Cloudflare:</k> 1.1.1.1\n<k>Google Public DNS:</k> 8.8.8.8\n<k>OpenDNS:</k> 208.67.222.222\n\n\n<img src="https://cdn.mos.cms.futurecdn.net/actDqugRApcUQbrFCgjpFU.jpg">\n\n\nUnder the "Alternate DNS server" section, confirm the secondary DNS address.You can use one of the secondary addresses from these companies:<k>Cloudflare:</k> 1.0.0.1\n<k>Google Public DNS:</k> 8.8.4.4\n<k>OpenDNS:</k> 208.67.220.220\n\nClick the <k>Save</k> button.\nRestart the device.\n\nAfter you complete the steps, you should now be able to connect to the internet using the new resolvers. The restart may be necessary to regain an IP address configuration for the device.\n\nAlthough the Settings app should be the recommended option to change the DNS settings on your computer, we\'re not listing this option first because it can be confusing for some people.\n',
'<h2>How to change DNS settings using Command Prompt on Windows 10</h2>\nAlternatively, it\'s also possible to change the DNS configuration using Command Prompt on Windows 10.\n\nTo use Command Prompt to change the computer DNS settings, use these steps:\nOpen <k>Start</k>.\nSearch for <k>Command Prompt</k>, right-click the top result, and select the <k>Run as administrator</k> option.\nType the following command to launch the tool to change the networking settings and press <k>Enter</k>:<code>netsh</code>\nType the following command to identify the names of the network adapters and press <k>Enter</k>:<code>interface show interface</code>\nType the following command to set the primary DNS IP address and press <k>Enter</k>:<code>interface ip set dns name="ADAPTER-NAME" source="static" address="X.X.X.X"</code>In the command, change <k>"ADAPTER-NAME"</k> with the name of the network adapter you identified on <k>step 4</k>, and change <k>"X.X.X.X"</k> with the IP address you want to use.To use Cloudflare, Google Public DNS, or Cisco OpenDNS, you can use these settings:<k>Cloudflare:</k> 1.1.1.1 and 1.0.0.1\n<k>Google Public DNS:</k> 8.8.8.8 and 8.8.4.4\n<k>OpenDNS:</k> 208.67.222.222 and 208.67.220.220\nThis example sets the primary DNS address to 1.1.1.1:<code>interface ip set dns name="Ethernet1" source="static" address="1.1.1.1"</code>\n\n<img src="https://cdn.mos.cms.futurecdn.net/YKjbAfzR9zGMLshVz4P3Nm.jpg">\n\n\nType the following command to add an alternative DNS IP address and press <k>Enter</k>:<code>interface ip add dns name="ADAPTER-NAME" addr="X.X.X.X" index=2</code>In the command, change <k>"ADAPTER-NAME"</k> with the name of your network adapter you queried on <k>step 4</k>, and change <k>"X.X.X.X"</k> with the secondary address.This example sets the secondary DNS address to 1.0.0.1:<code>interface ip add dns name="Ethernet1" addr="1.0.0.1" index=2</code><k>Quick tip:</k> You can repeat the above steps to add more addresses if necessary. However, in the command, you must increase the number of the index option by <k>1</k>. For instance, interface <code>ip add dns name="Ethernet1" addr="8.8.8.8" index=3</code>\n\nOnce you complete the steps, Windows 10 will start using the new DNS server addresses to resolve domain names to numeric addresses that your device can understand.\n\n<table>\n<thead><tr><th>IP Address</th><th>Location</th><th>ASN Number</th><th>Software / Version</th><th>DNSSEC</th><th>Reliability</th></tr></thead>\n<tbody>\n<tr><td>210.2.4.8<td>Beijing, Beijing<td>AS24409<td>__</td><td>Yes</td><td>36 % </td></tr>\n<tr><td>180.76.76.76<td>Beijing, Beijing<td>AS38365<td>__</td><td>No</td><td>91 % </td></tr>\n<tr><td>210.5.56.145<td>Hong Kong, Hong Kong<td>AS4809\n<td>Who knows?</td><td>No</td><td>71 % </td></tr>\n<tr><td>210.5.56.146<td>Hong Kong, Hong Kong<td>AS4809\n<td>Who knows?</td><td>No</td><td>75 % </td></tr>\n<tr><td>223.6.6.6<td>Hangzhou, Zhejiang<td>AS37963<td>__</td><td>No</td><td>75 % </td></tr>\n<tr><td>114.114.115.115<td>Xinfeng, Jiangxi<td>AS174<td>__</td><td>No</td><td>72 % </td></tr>\n<tr><td>223.5.5.5<td>Hangzhou, Zhejiang<td>AS37963<td>__</td><td>No</td><td>74 % </td></tr>\n<tr><td>114.114.114.114<td>Xinfeng, Jiangxi<td>AS174<td>__</td><td>No</td><td>75 % </td></tr>\n<tr><td>2001:da8::666<td>Beijing, Beijing<td>AS23910\n<td>9.12.0</td><td>Yes</td><td>98 % </td></tr>\n<tr><td>218.92.205.30<td>Dafeng, Guangxi<td>AS4134<td>__</td><td>No</td><td>68 % </td></tr>\n<tr><td>218.92.243.74<td>Nanjing, Jiangsu<td>AS4134<td>__</td><td>No</td><td>72 % </td></tr>\n<tr><td>218.93.124.186<td>Jintan, Guangdong<td>AS4134<td>__</td><td>No</td><td>72 % </td></tr>\n<tr><td>218.93.26.250<td>Changzhou, Jiangsu<td>AS4134<td>__</td><td>No</td><td>70 % </td></tr>\n<tr><td>218.94.193.170<td>Suzhou, Jiangsu<td>AS4134<td>__</td><td>No</td><td>72 % </td></tr>\n<tr><td>221.224.200.54<td>Suzhou, Jiangsu<td>AS4134<td>__</td><td>No</td><td>17 % </td></tr>\n<tr><td>221.231.118.114<td>Nanjing, Jiangsu<td>AS4134<td>__</td><td>No</td><td>73 % </td></tr>\n<tr><td>58.210.39.78<td>Suzhou, Jiangsu<td>AS4134<td>__</td><td>No</td><td>66 % </td></tr>\n<tr><td>58.211.171.214<td>Changshu, Jiangsu<td>AS4134<td>__</td><td>No</td><td>66 % </td></tr>\n<tr><td>58.215.247.10<td>Yixing, Shanxi<td>AS4134<td>__</td><td>No</td><td>67 % </td></tr>\n<tr><td>58.220.109.50<td>Yangzhou, Jiangsu<td>AS4134<td>__</td><td>No</td><td>64 % </td></tr>\n<tr><td>58.220.239.150<td>Yangzhou, Jiangsu<td>AS4134<td>__</td><td>No</td><td>70 % </td></tr>\n<tr><td>58.221.113.130<td>Nantong, Jiangsu<td>AS4134<td>__</td><td>No</td><td>62 % </td></tr>\n<tr><td>58.221.250.86<td>Zhangzhishan, Jiangsu<td>AS4134<td>__</td><td>No</td><td>41 % </td></tr>\n<tr><td>101.226.4.6<td>Shanghai, Shanghai<td>AS4812<td>__</td><td>Yes</td><td>70 % </td></tr>\n<tr><td>218.30.118.6<td>Beijing, Beijing<td>AS23724<td>__</td><td>Yes</td><td>55 % </td></tr>\n<tr><td>123.125.81.6<td>Beijing, Beijing<td>AS4808<td>__</td><td>Yes</td><td>59 % </td></tr>\n<tr><td>240c::6666<td>Chaoyang, Liaoning<td>AS45275<td>__</td><td>Yes</td><td>95 % </td></tr>\n<tr><td>240c::6644<td>Chaoyang, Liaoning<td>AS45275<td>__</td><td>Yes</td><td>98 % </td></tr>\n<tr><td>1.2.4.8<td>Beijing, Beijing<td>AS24151<td>__</td><td>Yes</td><td>36 % </td></tr>\n<tr><td>2400:3200::1<td>Hangzhou, Zhejiang<td>AS37963<td>__</td><td>No</td><td>58 % </td></tr>\n<tr><td>2400:3200:baba::1<td>Hangzhou, Zhejiang<td>AS37963<td>__</td><td>No</td><td>53 % </td></tr>\n<tr><td>182.254.116.116<td>Shenzhen, Guangdong<td>AS45090<td>__</td><td>Yes</td><td>75 % </td></tr>\n<tr><td>123.123.123.123<td>Beijing, Beijing<td>AS4808<td>__</td><td>No</td><td>5 % </td></tr>\n</tbody>\n</table>\n\n',
'<h2>首选DNS服务器地址建议尝试多个，备用可不填写！</h2>\n\n114 114.114.114.114\n阿里  223.5.5.5\n百度  180.76.76.76\n腾讯  119.29.29.29\n移动/铁通 101.226.4.6   \n海外地区DNS\nOpenDNS 208.67.222.222\nV2EX DNS  199.91.73.222\nGoogle DNS  8.8.8.8\n\n\nhttps://zhuanlan.zhihu.com/p/265364903\n修改DNS\n\n',
'<h2>Adding the IP-to-hostname mapping in /etc/hosts</h2>\n\nOpen the <b>/etc/hosts</b> file.\nvi /etc/hosts\n\nAdd a line of text in the format <i>ip-address localhost localhost.localdomain</i>.\n\nAs shown in Figure 1, enter <b>192.168.1.158</b> <b>imctest</b> <b>imctest</b><b>.IMC</b> to map <b>192.168.1.158</b> to the host name <b>imctest</b> in the <b>IMC</b> domain.\n\nFigure 1: Modifying the /etc/hosts file\n<img src="https://techhub.hpe.com/eginfolib/networking/docs/IMC/v7_3/5200-1293/content/images/image7.png" width="529" height="98">\nSave and close the file.\n\n',
'<h2>IPv6新手入门</h2>\n<a href="https://www.youtube.com/watch?v=dQ1AMXAiEJk" class="whitebut ">IPv6新手入门 电脑路由器配置IPv6地址，IPv6通信流程</a>\n\n',
'<h2>用宝塔面板搭建网站</h2>\n<a href="https://www.bt.cn/new/index.html" class="whitebut ">服务器运维面板</a>\n\n用xshell等远程连接软件连接云服务器\n在云服务器上安装宝塔面板\n在宝塔面板上安装WordPress\n网站预览优点：\n速度快，采用了宝塔面板之后，只是花了一点点时间学习了Nginx，然后在一个小时内能搭建起来好几个网站。\n\n宝塔面板教程系列 ：\nhttp://tencent.yundashi168.com/bt-panel\n\n宝塔面板可以搭建任何开源建站程序，包括主流的WordPress，帝国CMS,织梦程序等，也可以搭建Java开源的建站程序，例如OneBlog程序。\n\n因为宝塔面板可以一键轻松的安装PHP LNMP运行环境和Java的Tomcat+Mysql环境。\n当然其它更复杂一点的开发环境也可以去安装。\n\n',
'<h2>DNS</h2>\nOpen up the command prompt\n\nTo see your current DNS settings, type <k>ipconfig /displaydns</k> and press Enter.\nTo delete the entries, type <k>ipconfig /flushdns</k> and press Enter.\n\nTo see your DNS settings again, type <k>ipconfig /displaydns</k> and press Enter.\nYou should see blank records or you might get the message "Could not display the DNS Resolver Cache."\nTo perform a DNS lookup, type ping scisweb.ulster.ac.uk and press Enter.\n\nTo see your DNS settings again, type <k>ipconfig /displaydns</k> and press Enter.\nYou should see a DNS record for scisweb.ulster.ac.uk that includes the IP address and other information. \nAnother field in the DNS cache is a TTL value, which is different from the TTL in an IP packet. \n\nThis DNS TTL value is sent by the DNS server maintaining the scisweb.ulster.ac.uk record. \nIt is measured in seconds and tells your DNS client how long to cache the DNS record as a safeguard against clients holding on to DNS records whose IP addresses might have changed.\nTo open your computer’s Hosts file, run Notepad as administrator. \n\nC:\Windows\System32\Drivers\Etc. \n\nDouble-click the hosts file to open it.\nYou should now have a hosts file open with various settings.\nAfter the last line in the file, type 193.61.191.104 university, and then save the file and exit Notepad.\n\nAt the command prompt, type <k>ipconfig /displaydns</k> and press Enter to see that the entry is in your DNS cache.\nType ping university and press Enter.\nDelete the DNS cache again by typing <k>ipconfig /flushdns</k> and press Enter.\n\nDisplay your DNS cache by typing <k>ipconfig /displaydns</k> and press Enter.\nNotice that the university entry remains in the cache because the Hosts file data always stays in the cache.\nType nslookup scisweb.ulster.ac.uk and press Enter.\n\nYour DNS server’s name and IP address are displayed, along with the name and IP address of www.ulster.ac.uk. \nYou use Nslookup to look up a host’s IP address without actually communicating with it.\nType nslookup and press Enter.\n\nYou should now have entered Nslookup’s interactive mode. \nYou should see an arrow prompt.\nType www.google.com and press Enter.\n\nNotice that more than one address is returned along with one or more aliases (other names that www.google.com goes by).\nType www.google.com again (or press the up arrow to repeat the last line you typed) and press Enter.\nYou should see the IP addresses returned in a different order. \n\n(If you don’t, keep trying, and the order will change.)\nThe www.google.com page can be reached by a number of different IP addresses, and the addresses are returned in a different order so that a different server is used each time, which is called load balancing.\nNslookup is also used to do reverse lookups, in which the IP address is given and the hostname is returned.\n\nIf you are ever concerned that your DNS server is not working correctly, you can test it with Nslookup and compare the results of your DNS server with the results from another server, such as Google\'s.\n\n',
'<h2>Router entry</h2>\n<a href="http://192.168.0.1/webpages/index.html?t=84b48e13" class="whitebut ">admin123.</a>\n\n',
'<h2>To scan all IP addresses currently on the local network</h2>\nuse network scanning tools or write a script using a programming language like Python.\nHere\'s an example using Python and the scapy library:\n\npython\nfrom scapy.all import ARP, Ether, srp\n\n# Create an ARP request packet\narp = ARP(pdst="192.168.1.0/24")  # Replace with your network subnet\n\n# Create an Ethernet frame\nether = Ether(dst="ff:ff:ff:ff:ff:ff")  # Broadcast MAC address\n\n# Combine ARP and Ethernet frames\npacket = ether / arp\n\n# Send the packet and capture the response\nresult = srp(packet, timeout=3, verbose=0)[0]\n\n# Process the response\nclients = []\nfor sent, received in result:\n    clients.append({\'ip\': received.psrc, \'mac\': received.hwsrc})\n\n# Print the list of devices\nprint("IP\t\t\tMAC Address")\nprint("-----------------------------------------")\nfor client in clients:\n    print(f"{client[\'ip\']}\t\t{client[\'mac\']}")\n\nSave the script as a .py file and run it.\nIt will send an ARP request to each IP address in the specified network subnet and collect the IP and MAC addresses of the devices that respond.\nThe subnet 192.168.1.0/24 is just an example; replace it with your local network subnet.\n\n',
'<h2>香港國內1卡2號 plan</h2>\n<a href="https://www.youtube.com/watch?v=OS0N4hz8TjM" class="whitebut ">月費$11 香港國內1卡2號 plan</a>\n\n',
'<h2>免費網域註冊</h2>\n<a href="https://www.youtube.com/watch?v=ztF0aWZS5Z8" class="whitebut ">免費網域註冊</a>\n\n',
'<h2>build a network file server and connect it to a local router</h2>\n\nSet up the Network File Server:\n\nChoose a computer or dedicated device that will act as the file server.\nInstall an operating system on the server, such as Windows Server, Linux, or a NAS (Network-Attached Storage) operating system.\nConfigure the server with adequate storage capacity for your file-sharing needs.\nInstall and configure file server software, such as Samba for Linux or Windows File Sharing for Windows Server.\n\nConnect the File Server to the Local Router:\nConnect the file server to the local router using an Ethernet cable. Ensure that the cable is securely plugged into both the server\'s network interface card (NIC) and an available LAN port on the router.\nPower on the file server and ensure it successfully connects to the router.\n\nConfigure Network Settings:\nAssign a static IP address to the file server. This IP address should be within the same network subnet as the local router. Consult the server\'s operating system documentation for instructions on setting a static IP address.\n\nConfigure the router to ensure it recognizes and communicates with the file server. This typically involves configuring port forwarding or enabling network discovery, depending on the router\'s settings. Refer to the router\'s documentation for specific instructions.\n\nSet Up File Sharing:\nConfigure the file server software to share the desired files or directories. This may involve creating user accounts, setting access permissions, and defining shared folders. Consult the documentation of your chosen file server software for detailed instructions.\n\nTest file sharing by accessing the shared folders from other devices connected to the same local network. You should be able to browse, upload, and download files from the file server.\n\nBy following these steps, you can build a network file server and connect it to a local router. This will allow you to share files and access them from other devices on the same local network.\n\n',
'<h2>Network-Attached Storage (NAS)</h2>\nNetwork-Attached Storage (NAS) is a type of dedicated file storage device or server that is connected to a computer network, typically a local area network (LAN) or a larger network such as the internet.\nNAS provides centralized storage and file-sharing capabilities to multiple devices on the network.\n\nHere are some key features and characteristics of NAS:\n<k>Storage:</k> NAS devices are designed to provide large storage capacity, ranging from a few terabytes to multiple petabytes, depending on the model and configuration.\n\nThey use multiple hard drives or solid-state drives (SSDs) arranged in various RAID configurations to ensure data redundancy and to improve performance.\n\n<k>File Sharing:</k> NAS devices allow multiple users and devices on the network to access and share files stored on the NAS.\nThey typically support common file sharing protocols such as Server Message Block (SMB)/Common Internet File System (CIFS) for Windows, Network File System (NFS) for Linux and Unix, and Apple File Protocol (AFP) for Mac.\n\n<k>Data Protection:</k> NAS devices often include built-in features for data protection, such as RAID (Redundant Array of Independent Disks) configurations, which can provide fault tolerance and data redundancy.\nSome NAS devices also support data backup and synchronization with remote servers or cloud storage services.\n\n<k>Remote Access:</k> Many NAS devices offer remote access capabilities, allowing users to access their files stored on the NAS from outside the local network.\nThis is typically achieved through secure remote access protocols, such as Virtual Private Network (VPN), secure web access, or dedicated mobile apps.\n\n<k>Additional Services:</k> NAS devices often provide additional services beyond basic file storage and sharing.\nThese can include media streaming, surveillance camera management, application hosting, cloud integration, and more.\nSome NAS devices also support expandability through the addition of extra storage bays or expansion units.\n\nNAS devices provide a convenient and scalable solution for centralized storage and file sharing in both home and business environments.\nThey offer data accessibility, data protection, and collaboration capabilities, making them popular for personal use, small businesses, and enterprise-level deployments.\n\n',
'<h2>install a NAS (Network-Attached Storage) device to a local router</h2>\n\n<k>Choose a NAS Device:</k>\nSelect a NAS device that fits your storage needs and budget.\nThere are various NAS options available from different manufacturers with varying features, storage capacities, and price points.\n\n<k>Connect the NAS to the Router:</k>\nPower off both the router and the NAS device.\nUse an Ethernet cable to connect one end to an available LAN port on the router and the other end to the NAS device\'s Ethernet port.\nEnsure the connection is secure.\n\n<k>Power On the NAS and Router:</k>\nPlug in the power cords for the NAS device and the router.\nWait for both devices to power up and initialize.\nThis may take a few minutes.\n\n<k>Configure NAS Settings:</k>\nAccess the NAS device\'s administration interface by entering its IP address in a web browser.\nThe IP address can usually be found in the NAS device\'s user manual or obtained from the router\'s connected devices list.\nFollow the manufacturer\'s instructions to set up the NAS device.\nThis typically involves configuring network settings, creating user accounts, and setting up storage volumes or RAID configurations.\nCustomize other settings such as file sharing protocols, security options, and remote access as per your requirements.\n\n<k>Set Up Router Settings:</k>\nAccess the router\'s administration interface by entering its IP address in a web browser.\nNavigate to the router\'s settings related to DHCP, port forwarding, and network sharing.\nEnsure that the router\'s DHCP server is enabled to assign IP addresses to devices on the network, including the NAS device.\nConfigure port forwarding or network sharing settings if you want to access the NAS device remotely or from outside the local network.\nThis step may vary based on your router\'s interface and settings.\n\n<k>Test and Access the NAS:</k>\nOnce the NAS and router configurations are complete, test the connectivity by accessing the NAS device from a computer or device on the same local network.\nUse the NAS device\'s IP address or network name to access shared folders or the NAS administration interface.\nThis will depend on the NAS device and its configuration.\nVerify that you can browse, upload, and download files to and from the NAS device.\n\nThe exact steps may vary depending on the specific NAS device and router model you are using, so it\'s always recommended to refer to the user manuals and documentation provided by the manufacturers for detailed instructions.\n\n',
'<h2>connect a NAS device directly to a router USB port</h2>\nIt is not common to connect a NAS device directly to a router using a USB port.\nNAS devices are typically designed to be connected to a router or network switch using Ethernet ports.\nHowever, there are some routers and NAS devices that support USB connections for specific purposes such as adding external storage or sharing USB printers.\n\nIf your router and NAS device support USB connectivity, you may be able to connect them using a USB cable.\nHowever, the functionality and compatibility of such a connection will depend on the specific router and NAS models and their respective capabilities.\n\nHere are a few scenarios where USB connectivity between a router and NAS might be supported:\n\n<k>USB Storage Expansion:</k>\nSome routers have USB ports that allow you to connect external storage devices such as USB hard drives or USB flash drives.\nIn this case, you can connect a USB storage device to the router, and the NAS functionality may be enabled on the router itself, allowing you to access the USB storage as network-attached storage.\n\n<k>Printer Sharing:</k>\nSome routers have USB ports that can be used for connecting USB printers.\nNAS devices with built-in print server functionality can be connected to the router\'s USB port to enable printer sharing over the network.\n\n<k>USB NAS Adapters:</k>\nThere are also USB NAS adapters available that can convert a USB storage device into a network-attached storage device.\nThese adapters connect to the USB port of a NAS-enabled router, allowing you to use the USB storage as network storage.\n\nIt\'s important to note that the specific features and compatibility will vary depending on the router and NAS device models.\n\n',
'<h2>connect USB drives to a router\'s USB port and use them as a NAS</h2>\n\n<k>Check Router Compatibility:</k>\nEnsure that your router supports USB storage functionality and NAS features.\nCheck the router\'s documentation or manufacturer\'s website to confirm if it has USB ports and NAS capabilities.\n\n<k>Prepare USB Drives:</k>\nFormat the USB drives in a compatible file system, such as FAT32 or NTFS, depending on the router\'s requirements.\nBackup any important data on the drives, as they may be formatted during the setup process.\n\n<k>Connect USB Drive to Router:</k>\nPlug the USB drive into one of the USB ports on the router.\nThe port may be labeled explicitly for storage or have a USB icon.\n\n<k>Router Configuration:</k>\nAccess the router\'s administration interface by entering its IP address in a web browser.\nNavigate to the USB storage or NAS settings section.\nThe location and naming may vary depending on the router\'s firmware and interface.\n\nEnable USB storage or NAS functionality and configure the settings as per your preferences.\nThis may involve options such as sharing permissions, user accounts, access protocols (SMB, FTP, etc.), and media server settings.\nAssign a name or label to the USB drive for easy identification.\n\n<k>Network Access:</k>\nOnce the USB drive is configured as NAS, other devices on the same network should be able to access it.\nOn a computer or device connected to the network, open the file explorer or file manager.\nLocate the network or NAS section, and you should see the router or NAS device listed.\nAccess the router or NAS device and browse the shared folders or drives.\nYou might need to provide login credentials if password protection is enabled.\n\n<k>Mounting Drives on Devices:</k>\nOn some operating systems, the USB drives may be automatically detected and mounted as network drives.\nYou can access them through the file explorer or file manager.\nIf the drives are not automatically mounted, you may need to manually map or mount the network drives using their network paths or IP addresses.\nConsult the documentation or support resources of your operating system for specific instructions.\n\n',
'<h2>闲置安卓手机充当软路由</h2>\n<a href="https://www.youtube.com/watch?v=r6nXCgYkXTQ" class="whitebut ">闲置安卓手机充当软路由，突破第三方VPN限制</a>\n\n',
'<h2>网络命令</h2>\n<div id="networkCmdtoc" class="toc"><a href="#networkCmdtopic-0" target="_self">1、Ping命令格式</a><br><a href="#networkCmdtopic-1" target="_self">2、ping命令的基本应用</a><br><a href="#networkCmdtopic-2" target="_self">3、ping命令的常用参数选项</a><br><a href="#networkCmdtopic-3" target="_self">一、查看和诊断网络连接类命令</a><br><a href="#networkCmdtopic-4" target="_self"> 1. ping</a><br><a href="#networkCmdtopic-5" target="_self"> 2. traceroute (Linux) / tracert (Windows)</a><br><a href="#networkCmdtopic-6" target="_self"> 3. nslookup</a><br><a href="#networkCmdtopic-7" target="_self"> 4. dig</a><br><a href="#networkCmdtopic-8" target="_self"> 5. telnet</a><br><a href="#networkCmdtopic-9" target="_self"> 6. netstat</a><br><a href="#networkCmdtopic-10" target="_self"> 7. ipconfig (Windows) / ifconfig (Linux)</a><br><a href="#networkCmdtopic-11" target="_self"> 8. route</a><br><a href="#networkCmdtopic-12" target="_self"> 9. mtr</a><br><a href="#networkCmdtopic-13" target="_self">二、配置网络设备类命令</a><br><a href="#networkCmdtopic-14" target="_self"> 1. hostname</a><br><a href="#networkCmdtopic-15" target="_self"> 2. ip</a><br><a href="#networkCmdtopic-16" target="_self"> 3. nmcli</a><br><a href="#networkCmdtopic-17" target="_self"> 4. systemctl (Linux)</a><br><a href="#networkCmdtopic-18" target="_self"> 5. ethtool</a><br><a href="#networkCmdtopic-19" target="_self"> 6. iwconfig</a><br><a href="#networkCmdtopic-20" target="_self"> 7. brctl</a><br><a href="#networkCmdtopic-21" target="_self"> 8. vlan</a><br><a href="#networkCmdtopic-22" target="_self"> 9. ip link</a><br><a href="#networkCmdtopic-23" target="_self">三、网络安全与访问控制类命令</a><br><a href="#networkCmdtopic-24" target="_self"> 1. ssh</a><br><a href="#networkCmdtopic-25" target="_self"> 2. iptables</a><br><a href="#networkCmdtopic-26" target="_self"> 3. ufw</a><br><a href="#networkCmdtopic-27" target="_self"> 4. fail2ban</a><br><a href="#networkCmdtopic-28" target="_self"> 5. tcpdump</a><br><a href="#networkCmdtopic-29" target="_self"> 6. wireshark</a><br><a href="#networkCmdtopic-30" target="_self"> 7. nmap</a><br><a href="#networkCmdtopic-31" target="_self"> 8. hping3</a><br><a href="#networkCmdtopic-32" target="_self"> 9. openssl</a><br></div></center><br><br>\n\nping 是个使用频率极高的实用程序，主要用于确定网络的连通性。\n这对确定网络是否正确连接，以及网络连接的状况十分有用。\n简单的说，ping就是一个测试程序\n\n如果ping运行正确，大体上就可以排除网络访问层、网卡、Modem的输入输出线路、电缆和路由器等存在的故障，从而缩小问题的范围。\nping能够以毫秒为单位显示发送请求到返回应答之间的时间量。\n如果应答时间短，表示数据报不必通过太多的路由器或网络，连接速度比较快。\n\nping还能显示TTL（Time To Live，生存时间）值，通过TTL值可以推算数据包通过了多少个路由器。\n\n<img src="https://mmbiz.qpic.cn/mmbiz_png/OAmMqjhMehrO4GOMqmW7HoHia20qILXLqgGcYCLibI4vIMBC6xRGHnxtXRuH49LP7BbQwgToicKxDmsAj7ZFCnXhA/640">\n<h4 id="networkCmdtopic-0">1、Ping命令格式</h4>\nping 主机名\nping 域名\nping IP地址\n\n<img src="https://mmbiz.qpic.cn/mmbiz_png/OAmMqjhMehrO4GOMqmW7HoHia20qILXLqaib7ZMceEhqK5ic23XqV3hcmlItUNSABW0sR3wfRYicO2yO0WAUN7s3Wg/640">\n如图所示，使用ping命令检查到IP地址210.43.16.17的计算机的连通性，该例为连接正常。\n共发送了四个测试数据包，正确接收到四个数据包。\n\n<h4 id="networkCmdtopic-1">2、ping命令的基本应用</h4>\n一般情况下，用户可以通过使用一系列ping命令来查找问题出在什么地方，或检验网络运行的情况。\n下面就给出一个典型的检测次序及对应的可能故障：\n① ping 127.0.0.1如果测试成功，表明网卡、TCP/IP协议的安装、IP地址、子网掩码的设置正常。\n如果测试不成功，就表示TCP/IP的安装或设置存在有问题。\n\n② ping 本机IP地址如果测试不成功，则表示本地配置或安装存在问题，应当对网络设备和通讯介质进行测试、检查并排除。\n\n③ ping局域网内其他IP如果测试成功，表明本地网络中的网卡和载体运行正确。\n但如果收到0个回送应答，那么表示子网掩码不正确或网卡配置错误或电缆系统有问题。\n\n④ ping 网关IP这个命令如果应答正确，表示局域网中的网关路由器正在运行并能够做出应答。\n\n⑤ ping 远程IP如果收到正确应答，表示成功的使用了缺省网关。\n对于拨号上网用户则表示能够成功的访问Internet（但不排除ISP的DNS会有问题）。\n\n⑥ ping localhostlocal host是系统的网络保留名，它是127.0.0.1的别名，每台计算机都应该能够将该名字转换成该地址。\n否则，则表示主机文件（/Windows/host）中存在问题。\n\n⑦ ping www.baidu.com对此域名执行Ping命令，计算机必须先将域名转换成IP地址，通常是通过DNS服务器。\n如果这里出现故障，则表示本机DNS服务器的IP地址配置不正确，或它所访问的DNS服务器有故障。\n如果上面所列出的所有ping命令都能正常运行，那么计算机进行本地和远程通信基本上就没有问题了。\n\n但是，这些命令的成功并不表示你所有的网络配置都没有问题，例如，某些子网掩码错误就可能无法用这些方法检测到。\n<h4 id="networkCmdtopic-2">3、ping命令的常用参数选项</h4>\nping IP -t：连续对IP地址执行ping命令，直到被用户以Ctrl C中断。\nping IP -l 2000：指定ping命令中的特定数据长度（此处为2000字节），而不是缺省的32字节。\nping IP -n 20：执行特定次数（此处是20）的ping命令。\n\nipconfig命令ipconfig实用程序可用于显示当前的TCP/IP配置的设置值。\n这些信息一般用来检验人工配置的TCP/IP设置是否正确。\n而且，如果计算机和所在的局域网使用了动态主机配置协议DHCP，使用ipconfig命令可以了解到你的计算机是否成功地租用到了一个IP地址，如果已经租用到，则可以了解它目前得到的是什么地址，包括IP地址、子网掩码和缺省网关等网络配置信息。\n\n下面给出最常用的选项：\n1、ipconfig当使用不带任何参数选项ipconfig命令时，显示每个已经配置了的接口的IP地址、子网掩码和缺省网关值。\n\n2、ipconfig /all当使用all选项时，ipconfig能为DNS和WINS服务器显示它已配置且所有使用的附加信息，并且能够显示内置于本地网卡中的物理地址（MAC）。\n如果IP地址是从DHCP服务器租用的，ipconfig将显示DHCP服务器分配的IP地址和租用地址预计失效的日期。\n图为运行ipconfig /all命令的结果窗口。\n\n<img src="https://mmbiz.qpic.cn/mmbiz_png/OAmMqjhMehrO4GOMqmW7HoHia20qILXLqyBP4XbApcvNEzicKl4fvCEJw4OVtErmZW6RIsqeqZfdzEXHudBRoY5Q/640">\n3、ipconfig /release和ipconfig /renew这两个附加选项，只能在向DHCP服务器租用IP地址的计算机使用。\n如果输入ipconfig /release，那么所有接口的租用IP地址便重新交付给DHCP服务器（归还IP地址）。\n如果用户输入ipconfig /renew，那么本地计算机便设法与DHCP服务器取得联系，并租用一个IP地址。\n大多数情况下网卡将被重新赋予和以前所赋予的相同的IP地址。\n\n<img src="https://mmbiz.qpic.cn/mmbiz_png/OAmMqjhMehrO4GOMqmW7HoHia20qILXLqJYlpZzgQJO1JQIPibV1LSAoEIjIahvxaSZNDVIibxwZtCEY9icblB7GaA/640">\n\narp命令（地址转换协议）ARP是TCP/IP协议族中的一个重要协议，用于确定对应IP地址的网卡物理地址。\n使用arp命令，能够查看本地计算机或另一台计算机的ARP高速缓存中的当前内容。\n此外，使用arp命令可以人工方式设置静态的网卡物理地址/IP地址对，使用这种方式可以为缺省网关和本地服务器等常用主机进行本地静态配置，这有助于减少网络上的信息量。\n按照缺省设置，ARP高速缓存中的项目是动态的，每当向指定地点发送数据并且此时高速缓存中不存在当前项目时，ARP便会自动添加该项目。\n常用命令选项：① arp –a：用于查看高速缓存中的所有项目。\n\n<img src="https://mmbiz.qpic.cn/mmbiz_png/OAmMqjhMehrO4GOMqmW7HoHia20qILXLqe8SiaTTnLKCOib4EFzxhvtL0UUn6nnFELqgaG8bxK0h6wDTnvzEDaOAg/640">\n② arp -a IP：如果有多个网卡，那么使用arp -a加上接口的IP地址，就可以只显示与该接口相关的ARP缓存项目。\n③ arp -s IP 物理地址：向ARP高速缓存中人工输入一个静态项目。\n该项目在计算机引导过程中将保持有效状态，或者在出现错误时，人工配置的物理地址将自动更新该项目。\n④ arp -d IP：使用本命令能够人工删除一个静态项目。\n\ntraceroute命令掌握使用traceroute命令测量路由情况的技能，即用来显示数据包到达目的主机所经过的路径。\ntraceroute命令的基本用法是，在命令提示符后键入“tracert host_name”或“tracert ip_address”，其中，tracert是traceroute在Windows操作系统上的称呼。\n\n<img src="https://mmbiz.qpic.cn/mmbiz_png/OAmMqjhMehrO4GOMqmW7HoHia20qILXLq0LTnetGQAwumm4z6WQ9unk8xMIicOgAOibViaNFYlqEpxia40FNKPtaQLw/640">\n输出有5列：第一列是描述路径的第n跳的数值，即沿着该路径的路由器序号；第二列是第一次往返时延；第三列是第二次往返时延；第四列是第三次往返时延；第五列是路由器的名字及其输入端口的IP地址。\n如果源从任何给定的路由器接收到的报文少于3条（由于网络中的分组丢失），traceroute在该路由器号码后面放一个星号，并报告到达那台路由器的少于3次的往返时间。\n此外，tracert命令还可以用来查看网络在连接站点时经过的步骤或采取哪种路线，如果是网络出现故障，就可以通过这条命令查看出现问题的位置。\n\n\n以下是按作用分类的30个常用网络命令\n\n<h3 id="networkCmdtopic-3">一、查看和诊断网络连接类命令</h3>\n<pk id="networkCmdtopic-4"> 1. ping</pk>\n• 作用：测试与目标主机的连通性。\n• 示例：ping 8.8.8.8\n\n<pk id="networkCmdtopic-5"> 2. traceroute (Linux) / tracert (Windows)</pk>\n• 作用：显示数据包从源到目的地的路由路径。\n• 示例：tracert www.google.com\n\n<pk id="networkCmdtopic-6"> 3. nslookup</pk>\n• 作用：查询域名的DNS解析记录。\n• 示例：nslookup www.google.com\n\n<pk id="networkCmdtopic-7"> 4. dig</pk>\n• 作用：查询DNS信息（比nslookup更强大）。\n• 示例：dig www.google.com\n\n<pk id="networkCmdtopic-8"> 5. telnet</pk>\n• 作用：测试目标主机指定端口的连通性。\n• 示例：telnet 192.168.1.1 80\n\n<pk id="networkCmdtopic-9"> 6. netstat</pk>\n• 作用：查看当前网络连接状态、端口及路由信息。\n• 示例：netstat -an\n\n<pk id="networkCmdtopic-10"> 7. ipconfig (Windows) / ifconfig (Linux)</pk>\n• 作用：查看和配置网络接口的信息。\n• 示例：ipconfig /all\n\n<pk id="networkCmdtopic-11"> 8. route</pk>\n• 作用：查看和配置主机的路由表。\n• 示例：route -n\n\n<pk id="networkCmdtopic-12"> 9. mtr</pk>\n• 作用：结合ping和traceroute功能，实时显示网络路径信息。\n• 示例：mtr www.google.com\n\n10. ss\n• 作用：显示网络连接信息（比netstat更高效）。\n• 示例：ss -tuln\n\n<h3 id="networkCmdtopic-13">二、配置网络设备类命令</h3>\n<pk id="networkCmdtopic-14"> 1. hostname</pk>\n• 作用：查看或设置设备的主机名。\n\n• 示例：hostname myserver\n<pk id="networkCmdtopic-15"> 2. ip</pk>\n• 作用：查看和配置网络接口、路由、IP地址等。\n\n• 示例：ip addr show\n<pk id="networkCmdtopic-16"> 3. nmcli</pk>\n• 作用：管理网络连接（NetworkManager工具）。\n\n• 示例：nmcli device show\n<pk id="networkCmdtopic-17"> 4. systemctl (Linux)</pk>\n• 作用：控制网络服务启动、停止和状态查询。\n\n• 示例：systemctl restart NetworkManager\n<pk id="networkCmdtopic-18"> 5. ethtool</pk>\n• 作用：查看和修改网络接口的配置，如速度、双工模式等。\n\n• 示例：ethtool eth0\n<pk id="networkCmdtopic-19"> 6. iwconfig</pk>\n• 作用：管理无线网络接口。\n\n• 示例：iwconfig wlan0\n<pk id="networkCmdtopic-20"> 7. brctl</pk>\n• 作用：管理网桥设备。\n\n• 示例：brctl show\n<pk id="networkCmdtopic-21"> 8. vlan</pk>\n• 作用：配置VLAN（虚拟局域网）。\n\n• 示例：vconfig add eth0 10\n<pk id="networkCmdtopic-22"> 9. ip link</pk>\n• 作用：配置网络接口的状态（如启用/禁用）。\n\n• 示例：ip link set eth0 up\n10. arp\n• 作用：显示或修改ARP表（MAC地址与IP地址的映射）。\n• 示例：arp -a\n\n<h3 id="networkCmdtopic-23">三、网络安全与访问控制类命令</h3>\n<pk id="networkCmdtopic-24"> 1. ssh</pk>\n• 作用：通过安全的方式远程登录和管理网络设备。\n• 示例：ssh user@192.168.1.1\n\n<pk id="networkCmdtopic-25"> 2. iptables</pk>\n• 作用：管理Linux系统的防火墙规则。\n• 示例：iptables -L\n\n<pk id="networkCmdtopic-26"> 3. ufw</pk>\n• 作用：简单管理防火墙规则的工具（适用于Ubuntu）。\n• 示例：ufw allow 22/tcp\n\n<pk id="networkCmdtopic-27"> 4. fail2ban</pk>\n• 作用：保护系统免受暴力破解攻击。\n• 示例：fail2ban-client status\n\n<pk id="networkCmdtopic-28"> 5. tcpdump</pk>\n• 作用：捕获和分析网络数据包。\n• 示例：tcpdump -i eth0\n\n<pk id="networkCmdtopic-29"> 6. wireshark</pk>\n• 作用：图形化网络协议分析工具。\n• 示例：wireshark\n\n<pk id="networkCmdtopic-30"> 7. nmap</pk>\n• 作用：扫描网络，发现开放端口和服务。\n• 示例：nmap -sP 192.168.1.0/24\n\n<pk id="networkCmdtopic-31"> 8. hping3</pk>\n• 作用：网络安全测试工具，用于生成自定义数据包。\n• 示例：hping3 -S 192.168.1.1 -p 80\n\n<pk id="networkCmdtopic-32"> 9. openssl</pk>\n• 作用：管理SSL证书、加密和解密数据。\n• 示例：openssl s_client -connect www.google.com:443\n\n10. curl\n• 作用：用来进行HTTP、FTP等协议的数据传输，还可以测试网络服务的连通性。\n• 示例：curl -I http://www.google.com\n\n这些命令涵盖了网络诊断、配置和安全管理的多个方面，能够帮助网络工程师有效地管理和维护网络环境。\n不同设备命令可能略有差异：不同厂商的设备命令语法可能存在差异，需要查阅设备的命令手册。\n权限：执行某些命令需要具备相应的权限。\n配置谨慎：修改设备配置时一定要谨慎，错误的配置可能会导致网络故障。\n\n',
'<h2>10款内网穿透工具</h2>\n<div id="nettunneltoc" class="toc"><a href="#nettunneltopic-0" target="_self">1. Frp（Fast Reverse Proxy）</a><br><a href="#nettunneltopic-1" target="_self">2. NATOOL</a><br><a href="#nettunneltopic-2" target="_self">3. 花生壳</a><br><a href="#nettunneltopic-3" target="_self">4. NPS（Network Port Shield）</a><br><a href="#nettunneltopic-4" target="_self">5. Ngrok</a><br><a href="#nettunneltopic-5" target="_self">6. Sunny-Ngrok</a><br><a href="#nettunneltopic-6" target="_self">7. 向日葵</a><br><a href="#nettunneltopic-7" target="_self">8. ZeroTier</a><br><a href="#nettunneltopic-8" target="_self">9. P2Link</a><br><a href="#nettunneltopic-9" target="_self">10. FastTunnel</a><br></div></center><br><br>\n\n在IT运维领域，内网穿透是一项至关重要的技术，能够帮助运维人员轻松实现内网资源的远程访问和管理。\n\n<k id="nettunneltopic-0">1. Frp（Fast Reverse Proxy）</k>\nFrp是一款开源的高性能内网穿透工具，支持TCP、UDP、HTTP、HTTPS等多种协议。\n它采用客户端-服务器架构，通过中转服务器将内网服务暴露到公网。\nFrp不仅支持动态修改HTTP请求中的Host头字段，还支持通过密码保护Web服务，确保安全性。\n此外，Frp还具备负载均衡、健康检查等高级功能，适用于多种场景，如远程桌面、API服务器等。\n\n<k id="nettunneltopic-1">2. NATOOL</k>\nNATOOL是一款免费、简单、快捷的内网穿透软件，支持HTTP[S]、TCP、WEBSOCKET、UDP等多种协议。\n它提供了图形化界面和命令行工具，简化配置过程。\nNATOOL还支持动态DNS服务，使得即使内网IP发生变化，也能通过固定的域名访问内网服务。\n此外，NATOOL还支持安全通信，通过加密隧道保护数据传输，确保数据安全。\n\n<k id="nettunneltopic-2">3. 花生壳</k>\n花生壳是一款老牌的内网穿透服务提供商，提供动态域名解析服务（DDNS）和端口映射功能。\n它支持Windows、Linux、Mac、Android等多种操作系统，并提供iPhone、安卓手机APP或微信远程管理功能。\n花生壳的商业化成熟，提供免费和付费版本，适合个人和企业用户。\n其简单易用的特点，使得非技术用户也能轻松上手。\n\n<k id="nettunneltopic-3">4. NPS（Network Port Shield）</k>\nNPS是一款轻量级、高性能、功能强大的内网穿透代理服务器，支持TCP、UDP、HTTP(S)、SOCKS5等多种协议。\n它提供了图形化的Web管理界面，用户可以通过简单的配置在Web UI上完成大部分操作。\nNPS还支持缓存、压缩、加密、流量限制、带宽限制等扩展功能，适用于远程办公、开发调试等多种场景。\n\n<k id="nettunneltopic-4">5. Ngrok</k>\nNgrok是一款全球知名的内网穿透工具，能够快速将本地服务暴露到公网。\n它支持HTTP、HTTPS和TCP协议，具有免费的基本服务，适合快速测试和开发。\nNgrok提供了安全隧道和认证功能，确保数据传输的安全性和可控性。\n其简单易用的特点，使得初学者也能快速上手。\n\n<k id="nettunneltopic-5">6. Sunny-Ngrok</k>\nSunny-Ngrok是基于Ngrok改造的国内内网穿透工具，服务器在国内，传输速度和稳定性相比于Ngrok海外版有所提升。\n它支持HTTP、HTTPS和TCP等协议，适合Web和API服务穿透。\nSunny-Ngrok提供了Web界面进行流量和连接管理，使得用户能够方便地监控和管理内网穿透服务。\n\n<k id="nettunneltopic-6">7. 向日葵</k>\n向日葵是国内知名的远程控制工具，内置了内网穿透功能。\n它支持多平台（Windows、macOS、Linux等），提供远程桌面、远程文件传输、桌面监控等功能。\n向日葵的内网穿透功能集成在远程控制功能中，使用简单，适合远程办公、技术支持等场景。\n\n<k id="nettunneltopic-7">8. ZeroTier</k>\nZeroTier是一款提供虚拟局域网功能的工具，支持内网穿透。\n它通过创建虚拟网络，将不同网络环境中的设备连接在一起，达到内网穿透的效果。\nZeroTier支持多平台（Windows、macOS、Linux、iOS、Android），具有类似VPN的使用体验，易于跨设备、跨平台通信。\n其安全性强，适合有较高安全需求的应用场景。\n\n<k id="nettunneltopic-8">9. P2Link</k>\nP2Link是基于P2P技术的内网穿透工具，用于将内网服务直接暴露到公网，无需中转服务器和复杂配置。\n它支持端到端加密，安全性高；\n配置简便，无需公网IP和端口映射；\n跨平台支持，适用于多种操作系统。\nP2Link适合实时性高的场景，如远程办公与桌面控制、物联网设备管理、文件传输等。\n\n<k id="nettunneltopic-9">10. FastTunnel</k>\nFastTunnel是一款高性能的跨平台内网穿透工具，主要功能是将内网服务安全地暴露到公网。\n它致力于提供一个易于扩展和维护的内网穿透框架，使用户能够根据自己的需求构建自定义的穿透应用，并添加业务扩展功能。\nFastTunnel采用了.Net Core开发，支持Windows、Linux和macOS等操作系统，适用于各种应用场景。\n',
'<h2>用hosts文件实现共享打印 跨网段打印机连接</h2>\n小李遇到了一件烦心事：\n因为他的电脑和办公室的打印机分属不同的网络（子网），导致无法直接连接打印机。\n每次打印文件，他都得把数据拷贝到另一台电脑上才能完成，既费时又麻烦。\n\n其实，这样的问题只需要通过**修改电脑里的“hosts文件”**就能轻松解决！\n<h2><k>一、hosts文件是什么？</k></h2>\n<k>什么是hosts文件？</k>\n可以把hosts文件想象成电脑里的“<k>通讯录</k>”。\n当你的电脑需要连接其他设备（比如打印机）时，它会<k>优先查询hosts文件</k>，找到目标设备的IP地址，然后快速建立连接。\n通过修改hosts文件，我们可以为跨网段的打印机<k>手动添加一个“快速通道”</k>，让电脑直接找到打印机，而无需依赖其他复杂的网络路径。\n<img src="https://mmbiz.qpic.cn/mmbiz_png/WatnRqk3MqJmuxcK4954sRRKrGfMhbJmLmNxwNydSTAUZRlRaw2prAgO48zUcKk2Zzub4mq38JVaTqPVzy9HbA/640">\n<h2>二、操作步骤：如何修改hosts文件</h2>接下来，就按照以下步骤操作吧！👇\n\n<h3>1️⃣ 查找打印机的IP地址</h3>首先，您需要知道打印机的IP地址，这相当于设备的“网络地址”。\n可以通过以下方式获取：\n\n<k>方法一</k>：在打印机显示屏上查看网络设置信息。\n<img src="https://mmbiz.qpic.cn/mmbiz_png/WatnRqk3MqJmuxcK4954sRRKrGfMhbJmoIpvq29SRUL52RbrUXXNL0ShrX2ibXopLcMFoU2FPxwUEF0QcRD9vVw/640">\n\n<k>方法二</k>：打印打印机的网络配置页（具体操作参考打印机说明书）。\n例如，如果打印机的IP地址是：\n<k>192.168.20.10</k>\n请记下这个地址，我们将在后续步骤使用。\n\n<h3><k>2️⃣ 打开hosts文件</k></h3>在Windows系统中，按照以下步骤打开并编辑hosts文件：\n在任务栏的搜索框中输入“<k>记事本</k>”，找到程序后，右键点击并选择“<k>以管理员身份运行</k>”。\n在记事本中，点击“文件” &gt; “打开”，然后输入以下路径：\n\n<k>C:\Windows\System32\drivers\etc\hosts</k>\n\n在弹出的窗口中，切换为“所有文件类型”，找到并选择“hosts”文件。\n<h3><k>3️⃣ 添加打印机的IP地址和名称映射</k></h3>进入hosts文件后，向文件的<k>末尾添加一行</k>，格式为：\n打印机IP地址 打印机名称\n例如：\n如果打印机的IP地址是<k>192.168.20.10</k>，您希望用名称“<k>OfficePrinter</k>”来访问打印机，那么添加以下内容：\n192.168.20.10 OfficePrinter\n\n📌 <k>注意</k>：打印机名称可以自定义，但请确保不要使用空格。\n<h3><k>4️⃣ 保存hosts文件</k></h3>完成修改后，请按照以下步骤保存文件：\n\n在记事本中点击“文件” &gt; “保存”。\n如果保存时提示无权限，请检查是否以<k>管理员身份</k>运行记事本。\n<h3><k>5️⃣ 测试打印机连接</k></h3>修改完成后，您可以测试打印机是否连接成功：\n\n按下 <k>“Windows + R”</k> 键，打开“运行”窗口。\n输入：\n<k>\\OfficePrinter</k>（使用您在hosts文件中设置的打印机名称）。\n点击“确定”，系统将尝试访问打印机。\n\n如果操作正确，您将看到打印机的共享页面。\n🎉 <k>最后，打印一张测试页，确认打印机连接是否正常！</k>\n\n<h2><k>三、注意事项与风险提示</k></h2>为了确保操作顺利，请注意以下事项：\n\n⚠️ <k>备份原文件</k>：\n修改hosts文件前，建议先备份原始文件，这样如果遇到问题可以随时恢复。\n🔑 <k>获得管理员权限</k>：\nhosts文件是系统文件，必须以管理员权限运行编辑器才能保存修改内容。\n🔄 <k>重启后生效</k>：\n\n完成文件修改后，可能需要重新启动电脑或相关应用程序（如VPN或网络服务）才能使更改生效。\n🚫 <k>不要误删系统配置行</k>：\n\nhosts文件中的默认配置行非常重要，误删可能导致网络功能异常，请谨慎操作。\n<h2><k>四、结语：让打印更高效！</k></h2>通过简单的hosts文件修改，您就能轻松解决跨网段共享打印机的问题，再也不用为打印烦恼了！🎉\n📌 <k>这种方法不仅适用于打印机，也适用于其他跨网段设备的快速访问哦！</k>\n',
'<h2>网络基础知识</h2>\n<div id="网络基础知识toc" class="toc"><a href="#网络基础知识topic-0" target="_self">什么是链接？</a><br><a href="#网络基础知识topic-1" target="_self">OSI 参考模型的层次是什么？</a><br><a href="#网络基础知识topic-2" target="_self">什么是骨干网？</a><br><a href="#网络基础知识topic-3" target="_self">什么是 LAN？</a><br><a href="#网络基础知识topic-4" target="_self">什么是节点？</a><br><a href="#网络基础知识topic-5" target="_self">什么是路由器？</a><br><a href="#网络基础知识topic-6" target="_self">什么是点对点链接？</a><br><a href="#网络基础知识topic-7" target="_self">什么是匿名 FTP？</a><br><a href="#网络基础知识topic-8" target="_self">什么是子网掩码？</a><br><a href="#网络基础知识topic-9" target="_self">UTP 电缆允许的最大长度是多少？</a><br><a href="#网络基础知识topic-10" target="_self">什么是数据封装？</a><br><a href="#网络基础知识topic-11" target="_self">描述网络拓扑</a><br><a href="#网络基础知识topic-12" target="_self">什么是 VPN？</a><br><a href="#网络基础知识topic-13" target="_self">简要描述 NAT。</a><br><a href="#网络基础知识topic-14" target="_self">OSI 参考模型下网络层的工作是什么？</a><br><a href="#网络基础知识topic-15" target="_self">网络拓扑如何影响您在建立网络时的决策？</a><br><a href="#网络基础知识topic-16" target="_self">什么是 RIP？</a><br><a href="#网络基础知识topic-17" target="_self">什么是不同的方式来保护计算机网络？</a><br><a href="#网络基础知识topic-18" target="_self">什么是 NIC？</a><br><a href="#网络基础知识topic-19" target="_self">什么是 WAN？</a><br><a href="#网络基础知识topic-20" target="_self">OSI 物理层的重要性是什么？</a><br><a href="#网络基础知识topic-21" target="_self">TCP/IP 下有多少层？</a><br><a href="#网络基础知识topic-22" target="_self">什么是代理服务器，它们如何保护计算机网络？</a><br><a href="#网络基础知识topic-23" target="_self">OSI 会话层的功能是什么？</a><br><a href="#网络基础知识topic-24" target="_self">实施容错系统的重要性是什么？</a><br><a href="#网络基础知识topic-25" target="_self">10Base-T 是什么意思？</a><br><a href="#网络基础知识topic-26" target="_self">什么是私有 IP 地址？</a><br><a href="#网络基础知识topic-27" target="_self">什么是 NOS？</a><br><a href="#网络基础知识topic-28" target="_self">什么是 DoS？</a><br><a href="#网络基础知识topic-29" target="_self">什么是 OSI，它在电脑网络中扮演什么角色？</a><br><a href="#网络基础知识topic-30" target="_self">电缆被屏蔽并具有双绞线的目的是什么？</a><br><a href="#网络基础知识topic-31" target="_self">地址共享的优点是什么？</a><br><a href="#网络基础知识topic-32" target="_self">什么是 MAC 地址？</a><br><a href="#网络基础知识topic-33" target="_self">在 OSI 参考模型方面，TCP/IP 应用层的等同层或多层是什么？</a><br><a href="#网络基础知识topic-34" target="_self">如何识别给定 IP 地址的 IP 类？</a><br><a href="#网络基础知识topic-35" target="_self">OSPF 的主要目的是什么？</a><br><a href="#网络基础知识topic-36" target="_self">什么是防火墙？</a><br><a href="#网络基础知识topic-37" target="_self">描述星形拓扑</a><br><a href="#网络基础知识topic-38" target="_self">什么是网关？</a><br><a href="#网络基础知识topic-39" target="_self">星型拓扑的缺点是什么？</a><br><a href="#网络基础知识topic-40" target="_self">什么是 SLIP？</a><br><a href="#网络基础知识topic-41" target="_self">给出一些私有网络地址的例子。</a><br><a href="#网络基础知识topic-42" target="_self">什么是 tracert？</a><br><a href="#网络基础知识topic-43" target="_self">网络管理员的功能是什么？</a><br><a href="#网络基础知识topic-44" target="_self">描述对等网络的一个缺点。</a><br><a href="#网络基础知识topic-45" target="_self">什么是混合网络？</a><br><a href="#网络基础知识topic-46" target="_self">什么是 DHCP？</a><br><a href="#网络基础知识topic-47" target="_self">ARP 的主要工作是什么？</a><br><a href="#网络基础知识topic-48" target="_self">什么是 TCP/IP？</a><br><a href="#网络基础知识topic-49" target="_self">如何使用路由器管理网络？</a><br><a href="#网络基础知识topic-50" target="_self">当您希望在不同平台（如 UNIX 系统和 Windows 服务器之间）传输文件时，可以应用什么协议？</a><br><a href="#网络基础知识topic-51" target="_self">默认网关的使用是什么？</a><br><a href="#网络基础知识topic-52" target="_self">保护网络的一种方法是使用密码。</a><br><a href="#网络基础知识topic-53" target="_self">UTP 电缆的正确终止率是多少？</a><br><a href="#网络基础知识topic-54" target="_self">什么是 netstat？</a><br><a href="#网络基础知识topic-55" target="_self">C 类网络中的网络 ID 数量是多少？</a><br><a href="#网络基础知识topic-56" target="_self">使用长于规定长度的电缆时会发生什么？</a><br><a href="#网络基础知识topic-57" target="_self">什么常见的软件问题可能导致网络缺陷？</a><br><a href="#网络基础知识topic-58" target="_self">什么是 ICMP？</a><br><a href="#网络基础知识topic-59" target="_self">什么是 Ping？</a><br><a href="#网络基础知识topic-60" target="_self">什么是点对点（P2P）？</a><br><a href="#网络基础知识topic-61" target="_self">什么是 DNS？</a><br><a href="#网络基础知识topic-62" target="_self">光纤与其他介质有什么优势？</a><br><a href="#网络基础知识topic-63" target="_self">集线器和交换机有什么区别？</a><br><a href="#网络基础知识topic-64" target="_self">Windows RRAS 服务支持的不同网络协议是什么？</a><br><a href="#网络基础知识topic-65" target="_self">A，B 和 C 类网络中的最大网络和主机是什么？</a><br><a href="#网络基础知识topic-66" target="_self">直通电缆的标准颜色顺序是什么？</a><br><a href="#网络基础知识topic-67" target="_self">什么协议落在 TCP/IP 协议栈的应用层之下？</a><br><a href="#网络基础知识topic-68" target="_self">您需要连接两台电脑进行文件共享。</a><br><a href="#网络基础知识topic-69" target="_self">什么是 ipconfig？</a><br><a href="#网络基础知识topic-70" target="_self">直通和交叉电缆有什么区别？</a><br><a href="#网络基础知识topic-71" target="_self">什么是客户端/服务器？</a><br><a href="#网络基础知识topic-72" target="_self">描述网络</a><br><a href="#网络基础知识topic-73" target="_self">将 NIC 卡从一台 PC 移动到另一台 PC 时，MAC 地址是否也被转移？</a><br><a href="#网络基础知识topic-74" target="_self">解释聚类支持</a><br><a href="#网络基础知识topic-75" target="_self">在包含两个服务器和二十个工作站的网络中，安装防病毒程序的最佳位置是哪里？</a><br><a href="#网络基础知识topic-76" target="_self">描述以太网。</a><br><a href="#网络基础知识topic-77" target="_self">实现环形拓扑有什么缺点？</a><br><a href="#网络基础知识topic-78" target="_self">CSMA/CD 和 CSMA/CA 有什么区别？</a><br><a href="#网络基础知识topic-79" target="_self">什么是 SMTP？</a><br><a href="#网络基础知识topic-80" target="_self">什么是组播路由？</a><br><a href="#网络基础知识topic-81" target="_self">加密在网络上的重要性是什么？</a><br><a href="#网络基础知识topic-82" target="_self">如何安排和显示 IP 地址？</a><br><a href="#网络基础知识topic-83" target="_self">解释认证的重要性。</a><br><a href="#网络基础知识topic-84" target="_self">隧道模式是什么意思？</a><br><a href="#网络基础知识topic-85" target="_self">建立 WAN 链路涉及的不同技术有哪些？</a><br><a href="#网络基础知识topic-86" target="_self">网格拓扑的一个优点是什么？</a><br><a href="#网络基础知识topic-87" target="_self">在排除计算机网络问题时，可能会发生什么常见的硬件相关问题？</a><br><a href="#网络基础知识topic-88" target="_self">可以做什么来修复信号衰减问题？</a><br><a href="#网络基础知识topic-89" target="_self">动态主机配置协议如何协助网络管理？</a><br><a href="#网络基础知识topic-90" target="_self">解释网络概念的概况？</a><br><a href="#网络基础知识topic-91" target="_self">什么是 Sneakernet？</a><br><a href="#网络基础知识topic-92" target="_self">IEEE 在计算机网络中的作用是什么？</a><br><a href="#网络基础知识topic-93" target="_self">TCP/IP Internet 层下有哪些协议？</a><br><a href="#网络基础知识topic-94" target="_self">谈到网络，什么是权限？</a><br><a href="#网络基础知识topic-95" target="_self">建立 VLAN 的一个基本要求是什么？</a><br><a href="#网络基础知识topic-96" target="_self">什么是 IPv6？</a><br><a href="#网络基础知识topic-97" target="_self">什么是 RSA 算法？</a><br><a href="#网络基础知识topic-98" target="_self">什么是网格拓扑？</a><br><a href="#网络基础知识topic-99" target="_self">100Base-FX 网络的最大段长度是多少？</a><br></div></center><br><br>\n\n1）<o id="网络基础知识topic-0">什么是链接？</o>\n链接是指两个设备之间的连接。\n它包括用于一个设备能够与另一个设备通信的电缆类型和协议。\n2）<o id="网络基础知识topic-1">OSI 参考模型的层次是什么？</o>\n有 7 个 OSI 层：物理层，数据链路层，网络层，传输层，会话层，表示层和应用层。\n3）<o id="网络基础知识topic-2">什么是骨干网？</o>\n骨干网络是集中的基础设施，旨在将不同的路由和数据分发到各种网络。\n它还处理带宽管理和各种通道。\n4）<o id="网络基础知识topic-3">什么是 LAN？</o>\nLAN 是局域网的缩写。\n它是指计算机与位于小物理位置的其他网络设备之间的连接。\n5）<o id="网络基础知识topic-4">什么是节点？</o>\n节点是指连接发生的点。\n它可以是作为网络一部分的计算机或设备。\n为了形成网络连接，需要两个或更多个节点。\n6）<o id="网络基础知识topic-5">什么是路由器？</o>\n路由器可以连接两个或更多网段。\n这些是在其路由表中存储信息的智能网络设备，例如路径，跳数等。\n有了这个信息，他们就可以确定数据传输的最佳路径。\n路由器在 OSI 网络层运行。\n7）<o id="网络基础知识topic-6">什么是点对点链接？</o>\n它是指网络上两台计算机之间的直接连接。\n除了将电缆连接到两台计算机的 NIC卡之外，点对点连接不需要任何其他网络设备。\n8）<o id="网络基础知识topic-7">什么是匿名 FTP？</o>\n匿名 FTP 是授予用户访问公共服务器中的文件的一种方式。\n允许访问这些服务器中的数据的用户不需要识别自己，而是以匿名访客身份登录。\n9）<o id="网络基础知识topic-8">什么是子网掩码？</o>\n子网掩码与 IP 地址组合，以识别两个部分：扩展网络地址和主机地址。\n像 IP 地址一样，子网掩码由 32 位组成。\n10）<o id="网络基础知识topic-9">UTP 电缆允许的最大长度是多少？</o>\nUTP 电缆的单段具有 90 到 100 米的允许长度。\n11）<o id="网络基础知识topic-10">什么是数据封装？</o>\n数据封装是在通过网络传输信息之前将信息分解成更小的可管理块的过程。\n在这个过程中，源和目标地址与奇偶校验一起附加到标题中。\n12）<o id="网络基础知识topic-11">描述网络拓扑</o>\n网络拓扑是指计算机网络的布局。\n它显示了设备和电缆的物理布局，以及它们如何连接到彼此。\n13）<o id="网络基础知识topic-12">什么是 VPN？</o>\nVPN 意味着虚拟专用网络，这种技术允许通过网络（如 Internet）创建安全通道。\n例如，VPN 允许您建立到远程服务器的安全拨号连接。\n14）<o id="网络基础知识topic-13">简要描述 NAT。</o>\nNAT 是网络地址转换。\n这是一种协议，为公共网络上的多台计算机提供一种方式来共享到 Internet 的单一连接。\n15）<o id="网络基础知识topic-14">OSI 参考模型下网络层的工作是什么？</o>\n网络层负责数据路由，分组交换和网络拥塞控制。\n路由器在此层下运行。\n16）<o id="网络基础知识topic-15">网络拓扑如何影响您在建立网络时的决策？</o>\n网络拓扑决定了互连设备必须使用什么媒介。\n它还作为适用于设置的材料，连接器和终端的基础。\n17）<o id="网络基础知识topic-16">什么是 RIP？</o>\nRIP，路由信息协议的简称由路由器用于将数据从一个网络发送到另一个网络。\n它通过将其路由表广播到网络中的所有其他路由器来有效地管理路由数据。\n它以跳数为单位确定网络距离。\n18）<o id="网络基础知识topic-17">什么是不同的方式来保护计算机网络？</o>\n有几种方法可以做到这一点。\n在所有计算机上安装可靠和更新的防病毒程序。\n确保防火墙的设置和配置正确。\n用户认证也将有很大的帮助。\n所有这些组合将构成一个高度安全的网络。\n19）<o id="网络基础知识topic-18">什么是 NIC？</o>\nNIC 是网络接口卡（网卡）的缩写。\n这是连接到 PC 以连接到网络沈北。\n每个 NIC都有自己的 MAC 地址，用于标识网络上的 PC。\n20）<o id="网络基础知识topic-19">什么是 WAN？</o>\nWAN 代表广域网。\n它是地理上分散的计算机和设备的互连。\n它连接位于不同地区和国家/地区的网络。\n21）<o id="网络基础知识topic-20">OSI 物理层的重要性是什么？</o>\n物理层进行从数据位到电信号的转换，反之亦然。\n这是网络设备和电缆类型的考虑和设置。\n22）<o id="网络基础知识topic-21">TCP/IP 下有多少层？</o>\n有四层：网络层，互联网层，传输层和应用层。\n23）<o id="网络基础知识topic-22">什么是代理服务器，它们如何保护计算机网络？</o>\n代理服务器主要防止外部用户识别内部网络的 IP 地址。\n不知道正确的 IP 地址，甚至无法识别网络的物理位置。\n代理服务器可以使外部用户几乎看不到网络。\n24）<o id="网络基础知识topic-23">OSI 会话层的功能是什么？</o>\n该层为网络上的两个设备提供协议和方法，通过举行会话来相互通信。\n这包括设置会话，管理会话期间的信息交换以及终止会话时的解除过程。\n25）<o id="网络基础知识topic-24">实施容错系统的重要性是什么？</o>\n有限吗？\n容错系统确保持续的数据可用性。\n这是通过消除单点故障来实现的。\n但是，在某些情况下，这种类型的系统将无法保护数据，例如意外删除。\n26）<o id="网络基础知识topic-25">10Base-T 是什么意思？</o>\n10 是指数据传输速率，在这种情况下是 10Mbps。\n“Base”是指基带。\nT 表示双绞线，这是用于该网络的电缆。\n27）<o id="网络基础知识topic-26">什么是私有 IP 地址？</o>\n专用 IP 地址被分配用于内部网。\n这些地址用于内部网络，不能在外部公共网络上路由。\n这些确保内部网络之间不存在任何冲突，同时私有 IP 地址的范围同样可重复使用于多个内部网络，因为它们不会“看到”彼此。\n28）<o id="网络基础知识topic-27">什么是 NOS？</o>\nNOS 或网络操作系统是专门的软件，其主要任务是向计算机提供网络连接，以便能够与其他计算机和连接的设备进行通信。\n29）<o id="网络基础知识topic-28">什么是 DoS？</o>\n<img src="https://mmbiz.qpic.cn/mmbiz_png/ukcmBaZsYqPgTOfjic4JFxOsses6AAibXsVvGH7h0VKE4nvvVSHs94noFOj2rHxH8mcibnJmtwVsib4ElkS2gqpGGw/640">\nDoS 或拒绝服务攻击是试图阻止用户访问互联网或任何其他网络服务。\n这种攻击可能有不同的形式，由一群永久者组成。\n这样做的一个常见方法是使系统服务器过载，使其无法再处理合法流量，并将被强制重置。\n30）<o id="网络基础知识topic-29">什么是 OSI，它在电脑网络中扮演什么角色？</o>\nOSI（开放系统互连）作为数据通信的参考模型。\n它由 7 层组成，每层定义了网络设备如何相互连接和通信的特定方面。\n一层可以处理所使用的物理介质，而另一层则指示如何通过网络实际传输数据。\n31）<o id="网络基础知识topic-30">电缆被屏蔽并具有双绞线的目的是什么？</o>\n其主要目的是防止串扰。\n串扰是电磁干扰或噪声，可能影响通过电缆传输的数据。\n32）<o id="网络基础知识topic-31">地址共享的优点是什么？</o>\n通过使用地址转换而不是路由，地址共享提供了固有的安全性优势。\n这是因为互联网上的主机只能看到提供地址转换的计算机上的外部接口的公共 IP 地址，而不是内部网络上的私有 IP 地址。\n33）<o id="网络基础知识topic-32">什么是 MAC 地址？</o>\nMAC 或媒介访问控制，可以唯一地标识网络上的设备。\n它也被称为物理地址或以太网地址。\nMAC 地址由 6 个字节组成。\n34）<o id="网络基础知识topic-33">在 OSI 参考模型方面，TCP/IP 应用层的等同层或多层是什么？</o>\nTCP/IP 应用层实际上在 OSI 模型上具有三个对等体：会话层，表示层和应用层。\n35）<o id="网络基础知识topic-34">如何识别给定 IP 地址的 IP 类？</o>\n通过查看任何给定 IP 地址的第一个八位字节，您可以识别它是 A 类，B 类还是 C类。\n如果第一个八位字节以 0 位开头，则该地址为 Class A.如果以位 10 开头，则该地址为 B 类地址。\n如果从 110 开始，那么它是 C 类网络。\n36）<o id="网络基础知识topic-35">OSPF 的主要目的是什么？</o>\nOSPF 或开放最短路径优先，是使用路由表确定数据交换的最佳路径的链路状态路由协议。\n37）<o id="网络基础知识topic-36">什么是防火墙？</o>\n防火墙用于保护内部网络免受外部攻击。\n这些外部威胁可能是黑客谁想要窃取数据或计算机病毒，可以立即消除数据。\n它还可以防止来自外部网络的其他用户访问专用网络。\n38）<o id="网络基础知识topic-37">描述星形拓扑</o>\n<img src="https://mmbiz.qpic.cn/mmbiz_png/ukcmBaZsYqPgTOfjic4JFxOsses6AAibXss5CslBvvO43JmVtuuCXek3bH8m5AQWl1vG9UsoKzBeocCicoV5LmbibQ/640">\n星形拓扑由连接到节点的中央集线器组成。\n这是最简单的设置和维护之一。\n39）<o id="网络基础知识topic-38">什么是网关？</o>\n网关提供两个或多个网段之间的连接。\n它通常是运行网关软件并提供翻译服务的计算机。\n该翻译是允许不同系统在网络上通信的关键。\n40）<o id="网络基础知识topic-39">星型拓扑的缺点是什么？</o>\n星形拓扑的一个主要缺点是，一旦中央集线器或交换机被损坏，整个网络就变得不可用了。\n41）<o id="网络基础知识topic-40">什么是 SLIP？</o>\nSLIP 或串行线路接口协议实际上是在 UNIX 早期开发的旧协议。\n这是用于远程访问的协议之一。\n42）<o id="网络基础知识topic-41">给出一些私有网络地址的例子。</o>\n10.0.0.0，子网掩码为 255.0.0.0\n43）<o id="网络基础知识topic-42">什么是 tracert？</o>\nTracert 是一个 Windows 实用程序，可用于跟踪从路由器到目标网络的数据采集的路由。\n它还显示了在整个传输路由期间采用的跳数。\n44）<o id="网络基础知识topic-43">网络管理员的功能是什么？</o>\n网络管理员有许多责任，可以总结为 3 个关键功能：安装网络，配置网络设置以及网络的维护/故障排除。\n45）<o id="网络基础知识topic-44">描述对等网络的一个缺点。</o>\n当您正在访问由网络上的某个工作站共享的资源时，该工作站的性能会降低。\n46）<o id="网络基础知识topic-45">什么是混合网络？</o>\n混合网络是利用客户端 - 服务器和对等体系结构的网络设置。\n47）<o id="网络基础知识topic-46">什么是 DHCP？</o>\nDHCP 是动态主机配置协议的缩写。\n其主要任务是自动为网络上的设备分配 IP 地址。\n它首先检查任何设备尚未占用的下一个可用地址，然后将其分配给网络设备。\n48）<o id="网络基础知识topic-47">ARP 的主要工作是什么？</o>\nARP 或地址解析协议的主要任务是将已知的 IP 地址映射到 MAC 层地址。\n49）<o id="网络基础知识topic-48">什么是 TCP/IP？</o>\nTCP/IP 是传输控制协议/互联网协议的缩写。\n这是一组协议层，旨在在不同类型的计算机网络（也称为异构网络）上进行数据交换。\n50）<o id="网络基础知识topic-49">如何使用路由器管理网络？</o>\n路由器内置了控制台，可让您配置不同的设置，如安全和数据记录。\n您可以为计算机分配限制，例如允许访问的资源，或者可以浏览互联网的某一天的特定时间。\n您甚至可以对整个网络中看不到的网站施加限制。\n51）<o id="网络基础知识topic-50">当您希望在不同平台（如 UNIX 系统和 Windows 服务器之间）传输文件时，可以应用什么协议？</o>\n使用 FTP（文件传输协议）在这些不同的服务器之间进行文件传输。\n这是可能的，因为 FTP 是平台无关的。\n52）<o id="网络基础知识topic-51">默认网关的使用是什么？</o>\n默认网关提供了本地网络连接到外部网络的方法。\n用于连接外部网络的默认网关通常是外部路由器端口的地址。\n53）<o id="网络基础知识topic-52">保护网络的一种方法是使用密码。</o>\n什么可以被认为是好的密码？\n良好的密码不仅由字母组成，还包括字母和数字的组合。\n结合大小写字母的密码比使用所有大写字母或全部小写字母的密码有利。\n密码必须不能被黑客很容易猜到，比如日期，姓名，收藏夹等等。\n54）<o id="网络基础知识topic-53">UTP 电缆的正确终止率是多少？</o>\n非屏蔽双绞线网线的正常终止是 100 欧姆。\n55）<o id="网络基础知识topic-54">什么是 netstat？</o>\nNetstat 是一个命令行实用程序。\n它提供有关连接当前 TCP/IP 设置的有用信息。\n56）<o id="网络基础知识topic-55">C 类网络中的网络 ID 数量是多少？</o>\n对于 C 类网络，可用的网络 ID 位数为 21。\n可能的网络 ID 数目为 2，提高到 21或 2,097,152。\n每个网络 ID 的主机 ID 数量为 2，增加到 8 减去 2，或 254。\n57）<o id="网络基础知识topic-56">使用长于规定长度的电缆时会发生什么？</o>\n电缆太长会导致信号丢失。\n这意味着数据传输和接收将受到影响，因为信号长度下降。\n58）<o id="网络基础知识topic-57">什么常见的软件问题可能导致网络缺陷？</o>\n软件相关问题可以是以下任何一种或其组合：\n59）<o id="网络基础知识topic-58">什么是 ICMP？</o>\nICMP 是 Internet 控制消息协议。\n它为 TCP/IP 协议栈内的协议提供消息传递和通信。\n这也是管理由 PING 等网络工具使用的错误信息的协议。\n60）<o id="网络基础知识topic-59">什么是 Ping？</o>\nPing 是一个实用程序，允许您检查网络上的网络设备之间的连接。\n您可以使用其IP 地址或设备名称（如计算机名称）ping 设备。\n61）<o id="网络基础知识topic-60">什么是点对点（P2P）？</o>\n对等是不在服务器上回复的网络。\n该网络上的所有 PC 都是单独的工作站。\n62）<o id="网络基础知识topic-61">什么是 DNS？</o>\nDNS 是域名系统。\n该网络服务的主要功能是为 TCP/IP 地址解析提供主机名。\n63）<o id="网络基础知识topic-62">光纤与其他介质有什么优势？</o>\n光纤的一个主要优点是不太容易受到电气干扰。\n它还支持更高的带宽，意味着可以发送和接收更多的数据。\n长距离信号降级也非常小。\n64）<o id="网络基础知识topic-63">集线器和交换机有什么区别？</o>\n集线器充当多端口中继器。\n然而，随着越来越多的设备连接到它，它将无法有效地管理通过它的流量。\n交换机提供了一个更好的替代方案，可以提高性能，特别是在所有端口上预期有高流量时。\n65）<o id="网络基础知识topic-64">Windows RRAS 服务支持的不同网络协议是什么？</o>\n支持三种主要的网络协议：NetBEUI，TCP/IP 和 IPX。\n66）<o id="网络基础知识topic-65">A，B 和 C 类网络中的最大网络和主机是什么？</o>\n对于 A 类，有 126 个可能的网络和 16,777,214 个主机\n67）<o id="网络基础知识topic-66">直通电缆的标准颜色顺序是什么？</o>\n<img src="https://mmbiz.qpic.cn/mmbiz_png/ukcmBaZsYqPgTOfjic4JFxOsses6AAibXsLSM9DZqibf4vWsPIU769eLnnjrRWAiadEwsIBibPfKZXAtoNePt7fvZng/640">\n橙色/白色，橙色，绿色/白色，蓝色，蓝色/白色，绿色，棕色/白色，棕色。\n68）<o id="网络基础知识topic-67">什么协议落在 TCP/IP 协议栈的应用层之下？</o>\n以下是 TCP/IP 应用层协议：FTP，TFTP，Telnet 和 SMTP。\n69）<o id="网络基础知识topic-68">您需要连接两台电脑进行文件共享。</o>\n是否可以这样做，而不使用集线器或路由器？\n是的，您可以使用一根电缆将两台计算机连接在一起。\n在这种情况下可以使用交叉型电缆。\n在这种设置中，一条电缆的数据传输引脚连接到另一条电缆的数据接收引脚，反之亦然。\n70）<o id="网络基础知识topic-69">什么是 ipconfig？</o>\nIpconfig 是一个常用于识别网络上计算机的地址信息的实用程序。\n它可以显示物理地址以及 IP 地址。\n71）<o id="网络基础知识topic-70">直通和交叉电缆有什么区别？</o>\n直通电缆用于将计算机连接到交换机，集线器或路由器。\n交叉电缆用于将两个类似设备连接在一起，如 PC 到 PC 或集线器到集线器。\n72）<o id="网络基础知识topic-71">什么是客户端/服务器？</o>\n客户端/服务器是一种类型的网络，其中一个或多个计算机充当服务器。\n服务器提供集中的资源库，如打印机和文件。\n客户端是指访问服务器的工作站。\n73）<o id="网络基础知识topic-72">描述网络</o>\n网络是指用于数据通信的计算机和外围设备之间的互连。\n可以使用有线电缆或通过无线链路进行网络连接。\n74）<o id="网络基础知识topic-73">将 NIC 卡从一台 PC 移动到另一台 PC 时，MAC 地址是否也被转移？</o>\n是的，那是因为 MAC 地址是硬连线到 NIC 电路，而不是 PC。\n这也意味着当 NIC卡被另一个替换时，PC 可以具有不同的 MAC 地址。\n75）<o id="网络基础知识topic-74">解释聚类支持</o>\n群集支持是指网络操作系统在容错组中连接多台服务器的能力。\n这样做的主要目的是在一台服务器发生故障的情况下，集群中的下一个服务器将继续进行所有处理。\n76）<o id="网络基础知识topic-75">在包含两个服务器和二十个工作站的网络中，安装防病毒程序的最佳位置是哪里？</o>\n必须在所有服务器和工作站上安装防病毒程序，以确保保护。\n这是因为个人用户可以访问任何工作站，并在插入可移动硬盘驱动器或闪存驱动器时引入计算机病毒。\n77）<o id="网络基础知识topic-76">描述以太网。</o>\n以太网是当今使用的流行网络技术之一。\n它是在 20 世纪 70 年代初开发的，并且基于 IEEE 中规定的规范。\n以太网在局域网中使用。\n78）<o id="网络基础知识topic-77">实现环形拓扑有什么缺点？</o>\n如果网络上的一个工作站发生故障，可能会导致整个网络丢失。\n另一个缺点是，当需要在网络的特定部分进行调整和重新配置时，整个网络也必须被暂时关闭。\n79）<o id="网络基础知识topic-78">CSMA/CD 和 CSMA/CA 有什么区别？</o>\nCSMA/CD 或碰撞检测，每当碰撞发生时重新发送数据帧。\nCSMA/CA 或碰撞避免，将首先在数据传输之前广播意图发送。\n80）<o id="网络基础知识topic-79">什么是 SMTP？</o>\nSMTP 是简单邮件传输协议的缩写。\n该协议处理所有内部邮件，并在 TCP/IP 协议栈上提供必要的邮件传递服务。\n81）<o id="网络基础知识topic-80">什么是组播路由？</o>\n组播路由是一种有针对性的广播形式，将消息发送到所选择的用户组，而不是将其发送到子网上的所有用户。\n82）<o id="网络基础知识topic-81">加密在网络上的重要性是什么？</o>\n加密是将信息转换成用户不可读的代码的过程。\n然后使用秘密密钥或密码将其翻译或解密回其正常可读格式。\n加密有助于确保中途截获的信息仍然不可读，因为用户必须具有正确的密码或密钥。\n83）<o id="网络基础知识topic-82">如何安排和显示 IP 地址？</o>\nIP 地址显示为一系列由周期或点分隔的四位十进制数字。\n这种安排的另一个术语是点分十进制格式。\n84）<o id="网络基础知识topic-83">解释认证的重要性。</o>\n认证是在用户登录网络之前验证用户凭据的过程。\n它通常使用用户名和密码进行。\n这提供了限制来自网络上的有害入侵者的访问的安全手段。\n85）<o id="网络基础知识topic-84">隧道模式是什么意思？</o>\n这是一种数据交换模式，其中两个通信计算机本身不使用 IPSec。\n相反，将 LAN连接到中转网络的网关创建了一个使用 IPSec 协议来保护通过它的所有通信的虚拟隧道。\n86）<o id="网络基础知识topic-85">建立 WAN 链路涉及的不同技术有哪些？</o>\n模拟连接 - 使用常规电话线；\n数字连接 - 使用数字电话线；\n交换连接 - 使用发送方和接收方之间的多组链接来移动数据。\n87）<o id="网络基础知识topic-86">网格拓扑的一个优点是什么？</o>\n在一个链接失败的情况下，总会有另一个链接可用。\n网状拓扑实际上是最容错的网络拓扑之一。\n88）<o id="网络基础知识topic-87">在排除计算机网络问题时，可能会发生什么常见的硬件相关问题？</o>\n大部分网络由硬件组成。\n这些领域的问题可能包括硬盘故障，NIC 损坏甚至硬件启动。\n不正确的硬件配置也是其中一个疑难问题。\n89）<o id="网络基础知识topic-88">可以做什么来修复信号衰减问题？</o>\n处理这种问题的常见方法是使用中继器和集线器，因为它将有助于重新生成信号，从而防止信号丢失。\n检查电缆是否正确终止也是必须的。\n90）<o id="网络基础知识topic-89">动态主机配置协议如何协助网络管理？</o>\n网络管理员不必访问每台客户端计算机来配置静态 IP 地址，而是可以应用动态主机配置协议来创建称为可以动态分配给客户端的范围的 IP 地址池。\n91）<o id="网络基础知识topic-90">解释网络概念的概况？</o>\n配置文件是为每个用户设置的配置设置。\n例如，可以创建将用户置于组中的配置文件。\n92）<o id="网络基础知识topic-91">什么是 Sneakernet？</o>\nSneakernet 被认为是最早的联网形式，其中使用可移动介质（如磁盘，磁带）物理传输数据。\n93）<o id="网络基础知识topic-92">IEEE 在计算机网络中的作用是什么？</o>\nIEEE 或电气和电子工程师学会是由电气和电子设备标准发布和管理的工程师组成的组织。\n这包括网络设备，网络接口，cablings 和连接器。\n94）<o id="网络基础知识topic-93">TCP/IP Internet 层下有哪些协议？</o>\n该层管理的协议有 4 种。\n这些是 ICMP，IGMP，IP 和 ARP。\n95）<o id="网络基础知识topic-94">谈到网络，什么是权限？</o>\n权限是指在网络上执行特定操作的授权许可。\n网络上的每个用户可以分配个人权限，具体取决于该用户必须允许的内容。\n96）<o id="网络基础知识topic-95">建立 VLAN 的一个基本要求是什么？</o>\n<img src="https://mmbiz.qpic.cn/mmbiz_png/ukcmBaZsYqPgTOfjic4JFxOsses6AAibXspPTrlhw9PQ96J8zGBlj1KCCqMqsAnbiavQxwYxlyu0zsiaL0PhsgZeKA/640">\n需要一个 VLAN，因为在交换机级别只有一个广播域，这意味着每当新用户连接时，该信息都会传播到整个网络。\n交换机上的 VLAN 有助于在交换机级别创建单独的广播域。\n它用于安全目的。\n97）<o id="网络基础知识topic-96">什么是 IPv6？</o>\nIPv6 或 Internet 协议版本 6 被开发以替代 IPv4。\n目前，IPv4 正在用于控制互联网流量，但 IPv4 已经饱和。\nIPv6 能够克服这个限制。\n98）<o id="网络基础知识topic-97">什么是 RSA 算法？</o>\nRSA 是 Rivest-Shamir-Adleman 算法的缩写。\n它是目前最常用的公钥加密算法。\n99）<o id="网络基础知识topic-98">什么是网格拓扑？</o>\n网格拓扑是一种设置，其中每个设备都直接连接到网络上的每个其他设备。\n因此，它要求每个设备具有至少两个网络连接。\n100）<o id="网络基础知识topic-99">100Base-FX 网络的最大段长度是多少？</o>\n使用 100Base-FX 的网段的最大允许长度为 412 米。\n整个网络的最大长度为 5 公里。\n',
'<h2>两个WIFI路由器的连接方法</h2>\n<div id="两个WIFI路由器toc" class="toc"><a href="#两个WIFI路由器topic-0" target="_self">一、连接方式概述</a><br><a href="#两个WIFI路由器topic-1" target="_self">二、有线连接的详细步骤</a><br><a href="#两个WIFI路由器topic-2" target="_self">三、无线连接的详细步骤</a><br><a href="#两个WIFI路由器topic-3" target="_self">四、桥接模式的配置步骤</a><br><a href="#两个WIFI路由器topic-4" target="_self">五、注意事项</a><br></div></center><br><br>\n\n网络的稳定性和覆盖范围对于提升效率至关重要。\n随着智能设备的普及，单一路由器的性能往往难以满足大面积或复杂网络环境的需求。\n因此，连接两个路由器成为扩展网络覆盖范围和增强网络性能的常见选择。\n<img src="https://mmbiz.qpic.cn/mmbiz_png/jl8VeNhibN94cgX7aI59fXo1H9UUFU91SPiceKq9RIcjkcxTibmro0zibQicSm5tDQEzXoWRDxSicEFgg7CBSWHMiaZsA/640">\n<h3 id="两个WIFI路由器topic-0">一、连接方式概述</h3>连接两个路由器的方法多种多样，主要包括有线连接、无线连接和桥接模式。\n每种方式都有其独特的适用场景和优势。\n有线连接：通过以太网线直接连接两个路由器，适用于需要高速、稳定网络传输的环境。\n无线连接：利用无线信号将两个路由器连接在一起，适合没有布线条件或需要灵活布局的场景。\n桥接模式：将第二个路由器设置为桥接模式，使其成为第一个路由器的扩展，适用于需要无缝连接两个网络的情况。\n<h3 id="两个WIFI路由器topic-1">二、有线连接的详细步骤</h3>准备工作：确保拥有两个路由器、一根以太网线以及用于配置路由器的计算机或移动设备。\n连接路由器：将以太网线的一端插入主路由器的LAN端口，另一端插入第二个路由器的WAN端口，并确保两个路由器都已接通电源并正常启动。\n配置路由器：\n访问主路由器的管理界面，通常通过输入IP地址（如192.168.1.1或192.168.0.1）并登录。\n确保DHCP功能已启用。\n配置第二个路由器时，关闭其DHCP功能，以避免与主路由器冲突。\n为第二个路由器分配一个静态IP地址，确保它在主路由器的DHCP范围之外。\n测试连接：完成设置后，使用计算机或移动设备连接到第二个路由器，检查网络是否正常工作。\n<img src="https://mmbiz.qpic.cn/mmbiz_png/jl8VeNhibN94cgX7aI59fXo1H9UUFU91SXiaCxichmg0nIibWiblczibgHibNh8Km4Bo8PSy3SveIrx6zgIuThzXPV7sA/640">\n<h3 id="两个WIFI路由器topic-2">三、无线连接的详细步骤</h3>准备工作：确保两个路由器都支持无线功能，并能够通过无线信号进行配置。\n配置主路由器：\n访问管理界面，启用无线网络功能，并记录无线网络名称（SSID）和密码。\n配置第二个路由器：\n连接到第二个路由器的网络。\n访问管理界面，找到“无线设置”或“无线网络”选项。\n选择“无线桥接”或“中继模式”，并输入主路由器的SSID和密码。\n测试连接：连接到第二个路由器的网络，检查是否可以访问互联网。\n<img src="https://mmbiz.qpic.cn/mmbiz_png/jl8VeNhibN94cgX7aI59fXo1H9UUFU91SlW0dJZXPsZmibxBJyYr78jmzHrzRGKQZqDg05uMCThqvXWEwIbQgNXA/640">\n<h3 id="两个WIFI路由器topic-3">四、桥接模式的配置步骤</h3>准备工作：确保两个路由器都支持桥接模式，并了解其管理界面。\n配置主路由器：\n访问管理界面，确保DHCP功能已启用。\n记录主路由器的无线设置信息。\n配置第二个路由器：\n连接到第二个路由器，访问管理界面。\n启用桥接模式，并输入主路由器的SSID和密码。\n设置第二个路由器的IP地址，确保它在主路由器的DHCP范围之外。\n测试连接：连接到第二个路由器，检查网络是否正常工作。\n<h3 id="两个WIFI路由器topic-4">五、注意事项</h3>IP地址冲突：确保两个路由器的IP地址不冲突，以避免网络问题。\n信号干扰：无线连接时，注意避免路由器之间的信号干扰，选择合适的位置和频段。\n安全设置：为两个路由器的无线网络设置强密码，确保网络安全。\n固件更新：定期检查并更新路由器的固件，以提升性能和安全性。\n',
'<h2>怎么设置无线路由器</h2>\n<div id="设置无线路由toc" class="toc"><a href="#设置无线路由topic-0" target="_self">路由器光猫电脑正确安装，如下图所示。</a><br><a href="#设置无线路由topic-1" target="_self">路由器设置</a><br><a href="#设置无线路由topic-2" target="_self">各别路由器有默认账号密码</a><br><a href="#设置无线路由topic-3" target="_self">路由器上会自动弹出设置向导界面</a><br><a href="#设置无线路由topic-4" target="_self">向导</a><br><a href="#设置无线路由topic-5" target="_self">设置上网方式：</a><br><a href="#设置无线路由topic-6" target="_self">配置路由器的无线网</a><br><a href="#设置无线路由topic-7" target="_self">点击“完成”</a><br><a href="#设置无线路由topic-8" target="_self">如果没有电脑</a><br></div></center><br><br>\n\n1.路由器安装\n2.路由器上网设置。\n\n<k id="设置无线路由topic-0">路由器光猫电脑正确安装，如下图所示。</k>\n<img src="https://mmbiz.qpic.cn/sz_mmbiz_png/UeVzN0vghJItMIYia1FApicVk7yw3w7NcNVYRKibiau2Cr7O9tT89vrWnXibWaNfUFvGib29BSH2gPic9vibwLUibwkGQFA/640">\n\n<k id="设置无线路由topic-1">路由器设置</k>——&gt;小编拿老款TP-Link路由器给大家演示——&gt;打开电脑上ie/edge等默认浏览器——&gt;地址栏输入192.168.1.1按下回车键——&gt;首次需要用户手动设置一个登录密码。\n<img src="https://mmbiz.qpic.cn/sz_mmbiz_png/UeVzN0vghJItMIYia1FApicVk7yw3w7NcN9b2Wrle4ibrPVUuXUthWibAFI7h61Z9EOVnfYGjuKxo0YeP6VdGfjeWg/640">\n\n<k id="设置无线路由topic-2">各别路由器有默认账号密码</k>——&gt;弹出一个输入密码的对话框，如下图所示。\n用户只需要输入默认的密码即可进行登录。\n<img src="https://mmbiz.qpic.cn/sz_mmbiz_png/UeVzN0vghJItMIYia1FApicVk7yw3w7NcNfZPibcIoYrR6SQhWQGYj7roTxDnNy58BlO8TB9USwpHu4DLtkezNsjg/640">\n\n<k id="设置无线路由topic-3">路由器上会自动弹出设置向导界面</k>，如果没有弹出，可以点击左侧菜单中的“<em>\n<k id="设置无线路由topic-4">向导</k></em>”来运行。\n<img src="https://mmbiz.qpic.cn/sz_mmbiz_jpg/UeVzN0vghJItMIYia1FApicVk7yw3w7NcNicaE4xYxV5z7eWarn44V7OSe5y4icoT7icrEY87zsMB7JYMQPAJI4pVDQ/640">\n\n<k id="设置无线路由topic-5">设置上网方式：</k>这里可以看到一共有4个选项——&gt;目前，90%以上的用户办理的宽带都是“ADSL拨号”上网，办理“ADSL拨号”宽带业务后，宽带运营商会提供一个宽带用户名和宽带密码给用户——&gt;输入即可。\n<img src="https://mmbiz.qlogo.cn/sz_mmbiz_jpg/UeVzN0vghJItMIYia1FApicVk7yw3w7NcNnA6S3v6hqT94PUlIgM5qTUAP0GSFBVy14Mibg6A1Tzew9zibeVSKwFzA/0">\n<img src="https://mmbiz.qpic.cn/sz_mmbiz_png/UeVzN0vghJItMIYia1FApicVk7yw3w7NcNSictAm2n0nxubkY3yUkzTicKY8PPkZkaniaLx0dpibpSKCSnCDD137OTEg/640">\n\n<k id="设置无线路由topic-6">配置路由器的无线网</k>——&gt;“SSID”即无线网络名称，用户根据自己的需求进行设置——&gt;勾选“WPA-PSK/WPA2-PSK”——&gt;设置“PSK密码”——&gt;点击“下一步”。\n<img src="https://mmbiz.qpic.cn/sz_mmbiz_png/UeVzN0vghJItMIYia1FApicVk7yw3w7NcNG22cT0VxIibAjFI8kjFL9l116gT7Sh33MZe4AALohWmIEVkglslgtUQ/640">\n\n<k id="设置无线路由topic-7">点击“完成”</k>即可完成路由器的设置。\n<img src="https://mmbiz.qpic.cn/sz_mmbiz_jpg/UeVzN0vghJItMIYia1FApicVk7yw3w7NcN6kicjxy4McLQx2VFYkYMRSAGPibmEZmlGNXeLBOCSJ1ogxbicD3CE8kJA/640">\n\n<k id="设置无线路由topic-8">如果没有电脑</k>，我们可以使用手机等上网设备连接到路由器的无线网信号——&gt;使用手机浏览器打开192.168.1.1按照本教程步骤设置上网。\n',
'<h2>两个路由器串联（无线连接）</h2>\n一.本教程默认已经设置好"主路由器"——>本教程中设置的路由器是"副路由器"——>首先是无线连接如下图所示。\n\n<img src="https://mmbiz.qpic.cn/sz_mmbiz_png/UeVzN0vghJJ2np8SczyyHarTk9jLooqyavQrfA9VHVRqZaRDp3m3lwClIbttO1a6VnNbBI6nibLk0icurru5z11w/640">\n副路由器品牌（小米AC1200）演示。\n\n二.将"副路由器"通电——>上网设备打开Wi-Fi连接到"小米AC1200"的默认无线网信号——>默认浏览器输入192.168.31.1打开路由器的设置向导首页——>点击"同意继续"如下图。\n\n<img src="https://mmbiz.qpic.cn/sz_mmbiz_png/UeVzN0vghJJ2np8SczyyHarTk9jLooqyrnrBgUUVoqcCn72ZwLgv0wJTxVN9It715a58YU64XSfht8wiaSic7uibA/640">\n三.路由器没有接入网线提示如下图——>点击"中继工作模式"如下图。\n\n<img src="https://mmbiz.qpic.cn/sz_mmbiz_png/UeVzN0vghJJ2np8SczyyHarTk9jLooqyzPHU561V7vsFU4gia7wmA1iaxjvNic9GHjCtPiadQe230QNg5EZCMGHxug/640">\n四.根据提示选择"主路由器"的WiFi信号"——>然后输入"主路由器的WiFi密码"——>点击"下一步"如下图。\n\n<img src="https://mmbiz.qpic.cn/sz_mmbiz_png/UeVzN0vghJJ2np8SczyyHarTk9jLooqyvsYfGJiakfoKmjzDt0bc3cIjR5YvxibicibfEgfIARRvqNyY1MENmZgCAw/640">\n五.根据提示设置"副路由器（小米AC1200）"的"WiFi名称和WiFi密码"——>然后点击"下一步"如下图。\n\n<img src="https://mmbiz.qpic.cn/sz_mmbiz_png/UeVzN0vghJJ2np8SczyyHarTk9jLooqyhwSJPuic0RWZicQhjk9kuXp1kBokEvVicz3icFiauwMoGRRn4O30ibSfhv9g/640">\n六.给你的"副路由器小米AC1200路由器"设置一个管理密码（登录密码）——>点击"配置完成"如下图。\n\n此时副路由器无线连接主路由器就设置完成——>主路由器会给副路由器分配一个IP地址我们记录保存即可（此IP地址用来登录副路由器）。\n\n<img src="https://mmbiz.qpic.cn/sz_mmbiz_png/UeVzN0vghJJ2np8SczyyHarTk9jLooqyCgTaO2tUFrL5gul7d4V56psv2HwZ12YJSex6AMUhFVl4zFZ2mPJNIw/640">\n',
'<a href="https://mp.weixin.qq.com/s/CUiJx8moyl2sGSuKT0ALZw?poc_token=HFCeh2ejunHwzYZwi-j7Wdc4k4dJijBRo48c9RM-">微信视频号下载器</a>\n<a href="https://github.com/ltaoo/wx_channels_download" class="whitebut ">GitHub 项目地址：</a>',
'<h2>网络通信要分层</h2>\n<div id="网络通信要分层toc" class="toc"><a href="#网络通信要分层topic-0" target="_self">一、为什么要分层</a><br><a href="#网络通信要分层topic-1" target="_self">二、OSI七层模型详解</a><br><a href="#网络通信要分层topic-2" target="_self">三、TCP/IP四层模型剖析</a><br><a href="#网络通信要分层topic-3" target="_self">四、模型对比与分析</a><br></div></center><br><br>\n\n<y id="网络通信要分层topic-0">一、为什么要分层</y>\n就像建筑一样，我们不会把所有功能都混在一起，而是分成地基、框架、管道、装修等不同层次，网络通信也是如此，我们需要将复杂的网络通信过程分解成相对独立的层次。\n\n分层模型的核心在于定义了标准的层间接口。\n\n<y id="网络通信要分层topic-1">二、OSI七层模型详解</y>\n<img src="https://mmbiz.qpic.cn/sz_mmbiz_png/j2N9kk3NTFv8KKJV7tdgF2TbvUx548Ogoib9oP2B8cERPOudS6W4IrJet0O5ibrHbKZc69VDPYI9DaFppYExTKZg/640">\nOSI（开放系统互连）参考模型是由ISO组织提出的一个规范化网络通信模型。\n虽然如今实际应用更多的是TCP/IP模型，但OSI模型在理论上的完备性使其成为理解网络分层的最佳框架。\n\n从整体来看，OSI模型将网络通信分为七层，从上到下分别是应用层、表示层、会话层、传输层、网络层、数据链路层和物理层：\n应用层是最贴近用户的一层，它为应用程序提供网络服务。\n我们每天使用的Web浏览、电子邮件、文件传输等功能都在这一层实现。\n它就像是一个业务员，直接面对客户，处理具体的业务需求。\n\n表示层负责数据格式的转换和统一。\n就像两个使用不同语言的人交流需要翻译一样，不同系统之间的通信也需要数据格式的转换。\n此外，数据的加密解密、压缩解压缩等工作也在这一层完成。\n\n会话层管理应用程序之间的通信会话，负责建立、维护和释放会话。\n它就像是一个电话接线员，负责建立通话、保持通话，并在通话结束时断开连接。\n\n传输层确保数据能够完整地从源端传输到目标端，它是整个模型的核心。\n这一层就像是快递公司的配送系统，不仅要确保包裹能够送达，还要保证包裹的完整性。\nTCP和UDP就是这层最重要的两个协议。\n\n网络层负责数据包的路由和转发。\n如果说传输层像是快递公司的配送系统，那网络层就像是快递公司的分拣中心，负责确定包裹的传输路线。\nIP协议就工作在这一层，它为网络上的每个设备分配地址，并负责选择数据传输的路径。\n\n数据链路层在物理传输的基础上，将数据组织成帧，并处理帧的传输控制。\n它就像是高速公路的红绿灯系统，控制着数据流的通行，确保数据传输的可靠性。\n\n物理层是整个模型的基础，它定义了数据传输的物理媒介和接口标准。\n就像高速公路的路面一样，它提供了数据传输的基础设施，规定了如何在物理介质上传输比特流。\n\n这七层结构不是简单的堆叠，而是通过严格定义的接口紧密配合。\n每一层都利用下层提供的服务完成自己的功能，同时又为上层提供服务。\n这种层层递进的结构，让复杂的网络通信变得有序和可控。\n\n<y id="网络通信要分层topic-2">三、TCP/IP四层模型剖析</y>\n<img src="https://mmbiz.qpic.cn/sz_mmbiz_png/j2N9kk3NTFv8KKJV7tdgF2TbvUx548OgZGFgE7xnia5FlHjuuultBdJQgZntKv2dOkSLm7bqMSIfLnzdj84XGicg/640">TCP/IP模型源于ARPANET项目，是一个从实际需求中成长起来的网络架构。\n不同于OSI模型从理论推导到实践，TCP/IP模型是在解决实际问题的过程中逐步形成的，这也使它成为了现代互联网的主流架构。\n\nTCP/IP模型将网络通信分为四层：应用层、传输层、网际层和网络接口层。\n这种分层方式立足于实际应用，在保证必要功能的同时，也兼顾了实现的效率。\n每一层的设计都紧密围绕着实际需求，避免了复杂的层次划分。\n\n应用层整合了OSI模型中应用层、表示层和会话层的功能。\n这种整合源于实践观察：在实际应用中，这三层功能往往需要紧密配合。\n例如，HTTP协议在传输网页时，不仅要处理数据的表示格式，还要维护客户端与服务器之间的会话状态。\n这种设计显著提升了应用层协议的实现效率。\n\n传输层的定位与OSI模型相似，但实现更加聚焦于实际需求。\nTCP/IP模型在这一层提供了两个核心协议：面向连接的TCP和无连接的UDP。\n这种设计让应用程序能够根据实际需求，在可靠性和效率之间做出选择。\n正是这种灵活性，使TCP/IP能够适应各种应用场景。\n\n网际层（也称互联网层）是TCP/IP模型的核心创新。\n它通过IP协议解决了异构网络互联的关键问题：如何为互联网上的每个设备分配唯一的地址，以及如何在复杂的网络环境中找到目标地址。\n这一层的设计为今天的互联网奠定了基础架构。\n\n网络接口层对应OSI模型中的数据链路层和物理层。\n这一层专注于在实际的物理网络上传输数据包，同时保持了足够的灵活性，能够适应各种网络硬件技术。\n这种设计为底层技术的演进预留了空间。\n\nTCP/IP模型的广泛应用，源于其对实际需求的准确把握。\n它为互联网的发展提供了一个稳定而灵活的框架，能够适应新技术的不断发展。\n这个四层模型通过多年的实践检验，展现出了强大的生命力，成为了现代互联网的技术基石。\n\n<y id="网络通信要分层topic-3">四、模型对比与分析</y>\n<img src="https://mmbiz.qpic.cn/sz_mmbiz_png/j2N9kk3NTFv8KKJV7tdgF2TbvUx548Og4AWnXbzkR3Q85FMpYABNnUmLhm6EtqnIZ6ssaFRKXSPz4zicLg35ZUw/640">OSI模型和TCP/IP模型反映了两种不同的网络设计思路。\nOSI模型采用自顶向下的设计方法，先构建理论框架，再定义具体协议。\n这种方式使得每一层的功能定义严谨，层间接口规范清晰。\nTCP/IP模型则采用自底向上的方式，从解决实际问题出发，在实践中逐步形成模型。\n这使得TCP/IP各层的功能定义更加务实。\n\n从层次划分来看，OSI模型将网络通信分为七个层次，每层功能单一，界面分明。\n而TCP/IP模型采用四层结构，将应用层、表示层和会话层合并为应用层，将数据链路层和物理层合并为网络接口层。\n这种差异反映了两种模型对复杂性控制的不同思路。\n\n在实际应用中，两种模型都发挥着重要作用。\nOSI模型为网络通信提供了一个清晰的概念框架，它详细的分层定义对理解网络通信原理具有重要价值。\nTCP/IP模型则通过其简练的四层结构，为互联网的实际实现提供了有效的指导。\n',
]
