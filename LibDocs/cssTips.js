var cssTips = [
'<h2>There are four different combinators in CSS3</h2>\n<b>&rarr;</b><span class="brown">descendant selector (space)</span>:  all elements that are descendants, all 子孫\n<b>&rarr;</b><span class="brown">child selector (>)</span>:  all elements that are the immediate children, 子only, 無孫\n<b>&rarr;</b><span class="brown">adjacent sibling selector (+)</span>: the immediately following siblings \neg. div + p, the immediate p siblings after div\ndiv\np\n\n<b>&rarr;</b><span class="brown">general sibling selector (~)</span>:  all elements that are siblings\neg. div ~ p, all p siblings after div\ndiv\np\np\n\nA, B\nAny element matching A and/or B (see also Multiple selectors on one rule, below).\nA B\nAny element matching B that is a descendant of an element matching A (that is: a child, or a child of a child, etc.)\nA > B\nAny element matching B that is a direct child of an element matching A.\nA + B\nAny element matching B that is the next sibling of an element matching A (that is: the next child of the same parent.)\nA ~ B\nAny element matching B that is one of the next siblings of an element matching A (that is: one of the next children of the same parent.)\n\n\n================\n',
'<h2><k>CSS selectors</k> define the elements to which a set of CSS rules apply.</h2>\n\n\n================\n',
'<h2>Basic selectors</h2>\n\n<dl>\n <dt><a href="/en-US/docs/Web/CSS/Type_selectors">Type selector</a></dt>\n <dd>Selects all elements that match the given node name.\n\n <k>Syntax:</k> <code><var>eltname</var></code>\n\n <k>Example:</k> <code>input</code> will match any <a href="/en-US/docs/Web/HTML/Element/input" title="The HTML &lt;input> element is used to create interactive controls for web-based forms in order to accept data from the user."><code>&lt;input></code></a> element.</dd>\n <dt><a href="/en-US/docs/Web/CSS/Class_selectors">Class selector</a></dt>\n <dd>Selects all elements that have the given <code>class</code> attribute.\n\n <k>Syntax:</k> <code>.<var>classname</var></code>\n\n <k>Example:</k> <code>.index</code> will match any element that has a class of "index".</dd>\n <dt><a href="/en-US/docs/Web/CSS/ID_selectors">ID selector</a></dt>\n <dd>Selects an element based on the value of its <code>id</code> attribute. There should be only one element with a given ID in a document.\n\n <k>Syntax:</k> <code>#<var>idname</var></code>\n\n <k>Example:</k> <code>#toc</code> will match the element that has the ID "toc".</dd>\n <dt><a href="/en-US/docs/Web/CSS/Universal_selectors">Universal selector</a></dt>\n <dd>Selects all elements. Optionally, it may be restricted to a specific namespace or to all namespaces.\n\n <k>Syntax:</k> <code>*</code> <code>ns|*</code> <code>*|*</code>\n\n <k>Example:</k> <code>*</code> will match all the elements of the document.</dd>\n <dt><a href="/en-US/docs/Web/CSS/Attribute_selectors">Attribute selector</a></dt>\n <dd>Selects elements based on the value of the given attribute.\n\n <k>Syntax:</k> <code>[attr]</code> <code>[attr=value]</code> <code>[attr~=value]</code> <code>[attr|=value]</code> <code>[attr^=value]</code> <code>[attr$=value]</code> <code>[attr*=value]</code>\n\n <k>Example:</k> <code>[autoplay]</code> will match all elements that have the <code>autoplay</code> attribute set (to any value).</dd>\n</dl>\n\n\n================\n',
'<h2>Combinators</h2>\n\n<dl>\n <dt><a href="/en-US/docs/Web/CSS/Adjacent_sibling_selectors">Adjacent sibling combinator</a></dt>\n <dd>The <code>+</code> combinator selects adjacent siblings. This means that the second element directly follows the first, and both share the same parent.\n\n <k>Syntax:</k> <code><var>A</var> + <var>B</var></code>\n\n <k>Example:</k> <code>h2 + p</code> will match all <a href="/en-US/docs/Web/HTML/Element/p" title="The HTML &lt;p> element represents a paragraph of text."><code>&lt;p></code></a> elements that directly follow an <a href="/en-US/docs/Web/HTML/Element/h2" title="Heading elements implement six levels of document headings, &lt;h1> is the most important and &lt;h6> is the least. A heading element briefly describes the topic of the section it introduces. Heading information may be used by user agents, for example, to construct a table of contents for a document automatically."><code>&lt;h2></code></a>.</dd>\n <dt><a href="/en-US/docs/Web/CSS/General_sibling_selectors">General sibling combinator</a></dt>\n <dd>The <code>~</code> combinator selects siblings. This means that the second element follows the first (though not necessarily immediately), and both share the same parent.\n\n <k>Syntax:</k> <code><var>A</var> ~ <var>B</var></code>\n\n <k>Example:</k> <code>p ~ span</code> will match all <a href="/en-US/docs/Web/HTML/Element/span" title="The HTML &lt;span> element is a generic inline container for phrasing content, which does not inherently represent anything. It can be used to group elements for styling purposes (using the class or id attributes), or because they share attribute values, such as lang."><code>&lt;span></code></a> elements that follow a <a href="/en-US/docs/Web/HTML/Element/p" title="The HTML &lt;p> element represents a paragraph of text."><code>&lt;p></code></a>.</dd>\n <dt><a href="/en-US/docs/Web/CSS/Child_selectors">Child combinator</a></dt>\n <dd>The <code>></code> combinator selects nodes that are direct children of the first element.\n\n <k>Syntax:</k> <code><var>A</var> > <var>B</var></code>\n\n <k>Example:</k> <code>ul > li</code> will match all <a href="/en-US/docs/Web/HTML/Element/li" title="The HTML &lt;li> element is used to represent an item in a list. It must be contained in a parent element: an ordered list (&lt;ol>), an unordered list (&lt;ul>), or a menu (&lt;menu>). In menus and unordered lists, list items are usually displayed using bullet points. In ordered lists, they are usually displayed with an ascending counter on the left, such as a number or letter."><code>&lt;li></code></a> elements that are nested directly inside a <a href="/en-US/docs/Web/HTML/Element/ul" title="The HTML &lt;ul> element represents an unordered list of items, typically rendered as a bulleted list."><code>&lt;ul></code></a> element.</dd>\n <dt><a href="/en-US/docs/Web/CSS/Descendant_selectors">Descendant combinator</a></dt>\n <dd>The <code> </code>  combinator selects nodes that are descendants of the first element.\n\n <k>Syntax:</k> <code>A B</code>\n\n <k>Example:</k> <code>div span</code> will match all <a href="/en-US/docs/Web/HTML/Element/span" title="The HTML &lt;span> element is a generic inline container for phrasing content, which does not inherently represent anything. It can be used to group elements for styling purposes (using the class or id attributes), or because they share attribute values, such as lang."><code>&lt;span></code></a> elements that are inside a <a href="/en-US/docs/Web/HTML/Element/div" title="The HTML &lt;div> element is the generic container for flow content and does not inherently represent anything. Use it to group elements for purposes such as styling (using the class or id attributes), marking a section of a document in a different language (using the lang attribute), and so on."><code>&lt;div></code></a> element.</dd>\n</dl>\n\n\n================\n',
'<h2>Pseudo-classes</h2>\n\n<p><a href="/en-US/docs/Web/CSS/Pseudo-classes">Pseudo-classes</a> allow the selection of elements based on state information that is not contained in the document tree.</p>\n\n<p><k>Example:</k> <code>a:visited</code> will match all <a href="/en-US/docs/Web/HTML/Element/a" title="The HTML &lt;a> element (or anchor element) creates a hyperlink to other web pages, files, locations within the same page, email addresses, or any other URL."><code>&lt;a></code></a> elements that have been visited by the user.</p>\n\n\n================\n',
'<h2>Pseudo-elements</h2>\nA CSS pseudo-element is used to style specified parts of an element.\n\nFor example, it can be used to:\nStyle the first letter, or line, of an element\nInsert content before, or after, the content of an element\n\nSyntax\nselector::pseudo-element {\n  property: value;\n}\n\n',
'<h2>CSS ::after Selector</h2>\nInsert some text after the content of each &lt;p> element:\nUse the content property to specify the content to insert.\nUse the ::before selector to insert something before the content.\n\np::after {\n  content: " - Remember this";\n}\n\nNote: For this selector to work in IE8, a DOCTYPE must be declared, and you must use the old, single-colon CSS2 syntax (:after instead of ::after).\n\n::after {\n  css declarations;\n}\n\np::after {\n  content: " - Remember this";\n  background-color: yellow;\n  color: red;\n  font-weight: bold;\n}\n\n\n',
'<h2>All CSS Pseudo Elements</h2>\n<table class="w3-table-all notranslate">\n  <tr>\n    <th style="width:20%">Selector</th>\n    <th style="width:20%">Example</th>\n    <th>Example description</th>\n  </tr>\n<tr>\n    <td><a href="/cssref/sel_after.asp">::after</a></td>\n    <td class="notranslate">p::after</td>\n    <td>Insert something after the content of each &lt;p> element</td>\n    </tr>\n<tr>\n    <td><a href="/cssref/sel_before.asp">::before</a></td>\n    <td class="notranslate">p::before</td>\n    <td>Insert something before the content of each &lt;p> element</td>\n    </tr>\n<tr>\n    <td><a href="/cssref/sel_firstletter.asp">::first-letter</a></td>\n    <td class="notranslate">p::first-letter</td>\n    <td>Selects the first letter of each &lt;p> element</td>\n  </tr>\n<tr>\n    <td><a href="/cssref/sel_firstline.asp">::first-line</a></td>\n    <td class="notranslate">p::first-line</td>\n    <td>Selects the first line of each &lt;p> element</td>\n  </tr>\n<tr>\n    <td><a href="/cssref/sel_selection.asp">::selection</a></td>\n    <td class="notranslate">p::selection</td>\n    <td>Selects the portion of an element that is selected by a user</td>\n  </tr>\n</table>\n\n\n================\n',
'<h2>All CSS Pseudo Classes</h2>\n<table class="w3-table-all notranslate">\n  <tr>\n    <th style="width:20%">Selector</th>\n    <th style="width:20%">Example</th>\n    <th>Example description</th>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_active.asp">:active</a></td>\n    <td class="notranslate">a:active</td>\n    <td>Selects the active link</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_checked.asp">:checked</a></td>\n    <td class="notranslate">input:checked</td>\n    <td>Selects every checked &lt;input> element</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_disabled.asp">:disabled</a></td>\n    <td class="notranslate">input:disabled</td>\n    <td>Selects every disabled &lt;input> element</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_empty.asp">:empty</a></td>\n    <td class="notranslate">p:empty</td>\n    <td>Selects every &lt;p> element that has no children</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_enabled.asp">:enabled</a></td>\n    <td class="notranslate">input:enabled</td>\n    <td>Selects every enabled &lt;input> element</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_firstchild.asp">:first-child</a></td>\n    <td class="notranslate">p:first-child</td>\n    <td>Selects every &lt;p> elements that is the first child of its parent</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_first-of-type.asp">:first-of-type</a></td>\n    <td class="notranslate">p:first-of-type</td>\n    <td>Selects every &lt;p> element that is the first &lt;p> element of its parent</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_focus.asp">:focus</a></td>\n    <td class="notranslate">input:focus</td>\n    <td>Selects the &lt;input> element that has focus</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_hover.asp">:hover</a></td>\n    <td class="notranslate">a:hover</td>\n    <td>Selects links on mouse over</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_in-range.asp">:in-range</a></td>\n    <td class="notranslate">input:in-range</td>\n    <td>Selects &lt;input> elements with a value within a specified range</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_invalid.asp">:invalid</a></td>\n    <td class="notranslate">input:invalid</td>\n    <td>Selects all &lt;input> elements with an invalid value</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_lang.asp">:lang(<i>language</i>)</a></td>\n    <td class="notranslate">p:lang(it)</td>\n    <td>Selects every &lt;p> element with a lang attribute value starting with &quot;it&quot;</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_last-child.asp">:last-child</a></td>\n    <td class="notranslate">p:last-child</td>\n    <td>Selects every &lt;p> elements that is the last child of its parent</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_last-of-type.asp">:last-of-type</a></td>\n    <td class="notranslate">p:last-of-type</td>\n    <td>Selects every &lt;p> element that is the last &lt;p> element of its parent</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_link.asp">:link</a></td>\n    <td class="notranslate">a:link</td>\n    <td>Selects all unvisited links</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_not.asp">:not(selector)</a></td>\n    <td class="notranslate">:not(p)</td>\n    <td>Selects every element that is not a &lt;p> element</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_nth-child.asp">:nth-child(n)</a></td>\n    <td class="notranslate">p:nth-child(2)</td>\n    <td>Selects every &lt;p> element that is the second child of its parent</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_nth-last-child.asp">:nth-last-child(n)</a></td>\n    <td class="notranslate">p:nth-last-child(2)</td>\n    <td>Selects every &lt;p> element that is the second child of its parent, counting from the last child</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_nth-last-of-type.asp">:nth-last-of-type(n)</a></td>\n    <td class="notranslate">p:nth-last-of-type(2)</td>\n    <td>Selects every &lt;p> element that is the second &lt;p> element of its parent, counting from the last child</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_nth-of-type.asp">:nth-of-type(n)</a></td>\n    <td class="notranslate">p:nth-of-type(2)</td>\n    <td>Selects every &lt;p> element that is the second &lt;p> element of its parent</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_only-of-type.asp">:only-of-type</a></td>\n    <td class="notranslate">p:only-of-type</td>\n    <td>Selects every &lt;p> element that is the only &lt;p> element of its parent</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_only-child.asp">:only-child</a></td>\n    <td class="notranslate">p:only-child</td>\n    <td>Selects every &lt;p> element that is the only child of its parent</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_optional.asp">:optional</a></td>\n    <td class="notranslate">input:optional</td>\n    <td>Selects &lt;input> elements with no &quot;required&quot; attribute</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_out-of-range.asp">:out-of-range</a></td>\n    <td class="notranslate">input:out-of-range</td>\n    <td>Selects &lt;input> elements with a value outside a specified range</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_read-only.asp">:read-only</a></td>\n    <td class="notranslate">input:read-only</td>\n    <td>Selects &lt;input> elements with a &quot;readonly&quot; attribute specified</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_read-write.asp">:read-write</a></td>\n    <td class="notranslate">input:read-write</td>\n    <td>Selects &lt;input> elements with no &quot;readonly&quot; attribute</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_required.asp">:required</a></td>\n    <td class="notranslate">input:required</td>\n    <td>Selects &lt;input> elements with a &quot;required&quot; attribute specified</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_root.asp">:root</a></td>\n    <td class="notranslate">root</td>\n    <td>Selects the document\'s root element</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_target.asp">:target</a></td>\n    <td class="notranslate">#news:target</td>\n    <td>Selects the current active #news element (clicked on a URL containing that anchor name)</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_valid.asp">:valid</a></td>\n    <td class="notranslate">input:valid</td>\n    <td>Selects all &lt;input> elements with a valid value</td>\n  </tr>\n  <tr>\n    <td><a href="/cssref/sel_visited.asp">:visited</a></td>\n    <td class="notranslate">a:visited</td>\n    <td>Selects all visited links</td>\n  </tr>\n</table>\n\n',
'<h2>CSS Underline</h2>\n\n// define u by yourself\n u {\n    text-decoration: none;\n    border-bottom: 1px solid black;\n  }​\n\n// use new class\n.cunderline{\n    box-shadow: inset 0 0px 0 white, inset 0 -1px 0 black\n}\n\n//up and down lines\nbox-shadow: -2px -2px 3px red inset, inset 0 2px 0 black;\n\n// using ":after" (pseudo-element) on the element\nh2{  position:relative;   display:inline-block;   font-weight:700;   font-family:arial,sans-serif;\n  text-transform:uppercase;   font-size:3em; }\nh2:after{   content:"";   position:absolute;   left:0;   bottom:0;   right:0;   margin:auto;\n  background:#000;   height:1px;\n}\n\n// define freely\n{\n    display: inline-block;\n    border-bottom: 1px solid;\n    padding-bottom: 0;\n    line-height: 70%;\n}\n\n\n\n\n',
'<h2>use of content and pseudo element</h2>\n\n// use of content and pseudo element\na:after {\n    content: " (" attr(href) ")";\n}\n\n// Insert content that looks like bullets\nli:before {\n    content: "•"; /* Insert content that looks like bullets */\n    padding-right: 8px;\n    color: blue; /* Or a color you prefer */\n}\n\n// Remove list bullets\nul {\n    list-style: none; /* Remove list bullets */\n    padding: 0;\n    margin: 0;\n}\n\n\n\n\n\nOne way to improve the readability of large tables is to color alternating rows. \n\ntr:nth-child(even) {background: #CCC}\n\ntr:nth-child(odd) {background: #FFF}\n\ncol:first-child {background: #FF0}\n\ncol:nth-child(2n+3) {background: #CCC}\n\n\n\n\n\n\n\n\n\n\n\n\n<a href="https://stackoverflow.com/questions/16946878/how-do-i-select-an-element-that-has-a-certain-class">\n\n ================ ',
'<h2>select an element that has a certain class</h2></a>\n<p>Here is an example:</p>\n<p>CSS:</p>\n<code>h2 {\n    color: red;\n}\n\n.myClass {\n    color: green;\n}\n\nh2.myClass {\n    color: blue;\n}\n</code>\n\n<p>HTML:</p>\n\n<code>&lt;h2>This header should be RED to match the h2 element selector&lt;/h2>\n&lt;div class="myClass">\n    &lt;h1>This header should be GREEN to match the class selector&lt;/h1>\n    &lt;h2>This header should be BLUE to match the element.class selector&lt;/h2>\n&lt;/div>\n</code>\n    </div>\n\n<p>This is the way:</p>\n\n<p><code>h2.myClass</code> looks for h2 with class <code>myClass</code>. But you actually want to apply style for h2 inside <code>.myClass</code> so you can use descendant selector <code>.myClass h2</code>.</p>\n\n<code>h2 {\n    color: red;\n}\n\n.myClass {\n    color: green;\n}\n\n.myClass h2 {\n    color: blue;\n}\n</code>\n\n<p><code>h2.myClass</code> refers to all <code>h2</code> with <code>class="myClass"</code>.</p>\n\n<p><code>.myClass h2</code> refers to all <code>h2</code> that are children of (i.e. nested in) elements with <code>class="myClass"</code>.</p>\n\n<p>If you want the <code>h2</code> in your HTML to appear blue, change the CSS to the following:</p>\n\n<code>.myClass h2 {\n    color: blue;\n}\n</code>\n\n<p>If you want to be able to reference that <code>h2</code> by a class rather than its tag, you should leave the CSS as it is and give the <code>h2</code> a class in the HTML:</p>\n\n<code>&lt;h2 class="myClass">This header should be BLUE to match the element.class selector&lt;/h2>\n</code>\n================\n',
'<h2>CSS Shapes</h2>\n<a href="https://tympanus.net/codrops/2018/11/29/an-introduction-to-css-shapes/"><span class="redb">An Introduction to CSS Shapes</span></a>\n<a href="CSS Shapes.html"><span class="greenword">CSS Shapes</span></a>\n\n<a href="../js/CSSShapes/index.html">CSSShapes</a>\n\n\n\n================\n',
'<h2>vendor prefixes</h2>:\nCSS properties starting with -webkit-, -moz-, -ms- or -o- are called vendor prefixes offered by the relevant rendering engines (-webkit for Chrome, Safari; -moz for Firefox, -o for Opera, -ms for Internet Explorer). \n\nTypically they\'re used to implement new, or proprietary CSS features, prior to final clarification/definition by the W3.\nThis allows properties to be set specific to each individual browser/rendering engine in order for inconsistencies between implementations to be safely accounted for. \n\nThe prefixes will, over time, be removed (at least in theory) as the unprefixed, the final version, of the property is implemented in that browser.\n\n\nTo that end it\'s usually considered good practice to specify the vendor-prefixed version first and then the non-prefixed version, in order that the non-prefixed property will override the vendor-prefixed property-settings once it\'s implemented; for example:\n\n\n.elementClass {\n    -moz-border-radius: 2em;\n    -ms-border-radius: 2em;\n    -o-border-radius: 2em;\n    -webkit-border-radius: 2em;\n    border-radius: 2em;\n}\n\n================\n',
'<h2>morphing background hints</h2>\n\n\n&lt;section style="max-width: 100%;width: 2.5em;height: 3em;color: rgb(255, 255, 255);font-size: 1em;line-height: 3em;display: inline-block;background-image: url(&quot;https://mmbiz.qpic.cn/mmbiz_gif/usH55WOiaTQW68GANAUz4r2up4juotfK8yq4rPy8ic9aEY6iaVEHiavvCSwuksRzVNialpODECloyBtlW5muwFwItsg/640?wx_fmt=gif&quot;);background-repeat: no-repeat;background-size: 100%;background-position: 0px center;">\n&lt;p class="" data-original-title="" title="" aria-describedby="tooltip549989" style="max-width: 100%;min-height: 1em;">\n&lt;strong style="max-width: 100%;">01&lt;/k>\n&lt;/p>\n&lt;/section>\n\nmax-width: 100%;\nwidth: 2.5em;\nheight: 3em;\ncolor: rgb(255, 255, 255);\nfont-size: 1em;\nline-height: 3em;\ndisplay: inline-block;\nbackground-image: url(&quot;\n  https://mmbiz.qpic.cn/mmbiz_gif/usH55WOiaTQW68GANAUz4r2up4juotfK8yq4rPy8ic9aEY6iaVEHiavvCSwuksRzVNialpODECloyBtlW5muwFwItsg/640?wx_fmt=gif&quot;\n);\nbackground-repeat: no-repeat;\nbackground-size: 100%;\nbackground-position: 0px center;\n\n================\n',
'<h2>display as an inline element</h2>\n\ndisplay: block\ndisplay: inline\ndisplay: inline-block\n\nNote: display: inline-block\nBecause the vertical-align is set at baseline as default.\nUse vertical-align:top instead:\ndiv{display: inline-block;vertical-align:top;}\n\n<img src="https://i.stack.imgur.com/mGTYI.png">\n\n<a href="https://www.w3schools.com/css/tryit.asp?filename=trycss_display">display as an inline element</a>\n\n\n\n================\n',
'<h2>codepen pages</h2>\n\nhttps://codepen.io/picks/20/\n\n\n\n\n\n\n================\n',
'<h2>wrap onto the next line</h2>\n\np{white-space:normal;}\n\nbreak long word and wrap:\nword-wrap: break-word;\n\n\n\n\n\n================\n',
'<h2>table color and hover color</h2>\n\ntr:nth-child(even) {color: #109010}\ncol:nth-child(2n+3) {color: #033}\ntr:hover td { color:yellow;}\n\n<a href="https://www.w3.org/Style/Examples/007/evenodd.zh_HK.html">CSS 提示與竅門</a>\n\n\n<a href="https://stackoverflow.com/questions/8666500/changing-background-cell-of-table-depending-on-value">Changing background cell of table depending on value</a>\n\n\n$(\'#mytable tr td\').each(function(){\n  if($(this).text() > 5)$(this).css(\'background-color\',\'red\');\n});\n\n\n\n\n================\n',
'<h2>mix-blend-mode</h2>\n\n<a href="https://www.w3schools.com/cssref/pr_mix-blend-mode.asp">mix-blend-mode</a>\n\nmix-blend-mode: \nnormal|multiply|screen|overlay|darken|lighten|color-dodge|color-burn|difference|exclusion|hue|saturation|color|luminosity;\n\nnormal&emsp;This is default. Sets to normal\nmultiply&emsp;Sets to multiply\nscreen&emsp;Sets to screen\noverlay&emsp;Sets to overlay\ndarken&emsp;Sets to darken\nlighten&emsp;Sets to lighten\ncolor-dodge&emsp;Sets to color-dodge\ncolor-burn&emsp;Sets to color-burn\ndifference&emsp;Sets to difference\nexclusion&emsp;Sets to exclusion\nhue&emsp;Sets to hue\nsaturation&emsp;Sets to saturation\ncolor&emsp;Sets to color\nluminosity&emsp;Sets to luminosity\n\n\n\n\n\n\n\n================\n',
'<h2>Multiple Class / ID and Class Selectors</h2>\n\n<a href="https://css-tricks.com/multiple-class-id-selectors/">Multiple Class / ID and Class Selectors</a>\n\n\n\n\n\n\n================\n',
'<h2>align right</h2>\n\n.tophat{float:right;}\n\n\n\n\n================\n',
'<h2>padding-inline-start</h2>\n\npadding-inline-start: 10px;\n\n\n================\n',
'<h2>css set background color same width as text</h2>\n\nUse display: table\n<a href="https://www.december.com/html/spec/colorshades.html">color shades</a>\n<a href="https://www.pinterest.com/AlexandraKarpova/green-color-palette/">green color palette</a>\n<a href="https://www.schemecolor.com/">Color Scheme</a>\n<a href="https://htmlcolorcodes.com/">htmlcolorcodes</a>\n<a href="https://www.color-hex.com/color-palettes/">Color Palettes Color Schemes</a>\n<a href="https://www.materialpalette.com/">design palette</a>\n<a href="https://www.canva.com/colors/color-palettes/">color palettes</a>\n\n\n\n\n================\n',
'<h2>Sticky Navigation</h2>\n\n<a href="https://www.w3schools.com/howto/howto_js_navbar_sticky.asp">Sticky/Affix Navbar</a>\n<a href="https://1stwebdesigner.com/sticky-navigation-bar/">Sticky Navigation with CSS3 & jQuery</a>\n\n\n\n\n\n\n\n\n================\n',
'<h2>blink_me</h2>\n\n.blink_me {\n  animation: blinker 2s linear infinite;\n}\n\n@keyframes blinker {\n  50% {\n    opacity: 0;\n  }\n}\nease - Specifies an animation with a slow start, then fast, then end slowly (this is default)\nlinear - Specifies an animation with the same speed from start to end\nease-in - Specifies an animation with a slow start\nease-out - Specifies an animation with a slow end\nease-in-out - Specifies an animation with a slow start and end\ncubic-bezier(n,n,n,n) - Lets you define your own values in a cubic-bezier function\n\n\n\n\n================\n',
'<h2>Comments in CSS</h2>\n\nbody {\n  font-size: 62.5%  /* 1em = 10px */\n}\nThe stuff inside the /* */ marks are CSS comments.\n\n\n================\n',
'<h2>some CSS samples</h2>\n\ntable: \nborder-collapse: collapse\n\ntable th:\ntext-align: left;\npadding: 4px 30px 4px 8px;\n\ntable td:\nborder-color: 1px solid white;\n\ntable tr:nth-child(odd) td:\nbackground-color: grey;\n\ndiv in front of the id may cause the browser to search through all divs first\ndiv#stat{position:fixed;}	\ndiv#wrap{width:800px; margin:9px auto;}\n\nclear: right\n\n.clearfix{display: inline-block;}\n\n.clearfix:after{\ncontent = ".";\ndisplay: block;\nclear: both;\nvisibility: hidden;\n}\n\n<a href="https://www.w3schools.com/css/css_float.asp">css float tutorial</a>\n\n.clearfix {  overflow: auto;}\n\n.clearfix::after {\n  content: "";\n  clear: both;\n  display: table;\n}\n\n\n================\n',
'<h2>css grid</h2>\n<a href="https://css-tricks.com/snippets/css/complete-guide-grid/">css grid</a>\n\n================\n',
'<h2>Responsive CSS Framework</h2>\n<a href="https://www.themexpert.com/blog/top-5-responsive-css-framework">5 Responsive CSS Framework</a>\n<a href="https://www.awwwards.com/what-are-frameworks-22-best-responsive-css-frameworks-for-web-design.html">22 responsive css frameworks</a>\n<a href="https://cssauthor.com/css-frameworks/">100+ CSS Frameworks For Responsive Design</a>\n<a href="https://www.w3schools.com/w3css/default.asp">W3.CSS is a CSS Framework</a>\n\n\n&lt;meta name="viewport" content="width=device-width, initial-scale=1">\n&lt;link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">\n\n================\n',
'<h2>CSS 的垂直居中</h2>\n如果它是一个行内元素， 就对它的父元素应用 text-align:center;\n如果它是一个块级元素，就对它自身应用 margin:auto XXXX not work\n\ncss to center a image horizontally\n.center img {        \n  display:block;\n  margin-left:auto;\n  margin-right:auto;\n}\n\n',
'<h2>CSS布局解决方案</h2>\n<a href="CSS布局解决方案.html">CSS布局解决方案</a>\n\n\n\n',
'<h2>如何居中一个元素</h2>\n<a href="如何居中一个元素.html">如何居中一个元素</a>\n\n\n\n================\n',
'<h2>background: radial-gradient</h2>\nbackground: radial-gradient(ellipse at bottom, #0b0905 0%, #020a08 100%);\n\n================\n',
'<h2>xmp</h2>\n\nThe &lt;xmp> renders text between the start and end tags without interpreting the HTML in between and using a monospaced font.\n\nThe &lt;xmp> tag is obsolete and is not supported in HTML5. Use the &lt;pre> element instead. Note, that you will need to use \'&lt;\' instead of the \'&lt; >\' characters to make sure it is not interpreted as markup.\n\n================\n',
'<h2>CSS Scrollbar</h2>\n<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/::-webkit-scrollbar">CSS Scrollbar Selectors</a>\n\n\n\n================\n',
'<h2>background:-webkit-gradient</h2>\n<a href="https://sites.google.com/site/coolteazhuanti/css/background--webkit-gradient">background:-webkit-gradient</a>\n<a href="https://stackoverflow.com/questions/33359979/create-a-glossy-light-effect-using-css">glossy light effect</a>\n<a href="https://www.hongkiat.com/blog/css3-glossy-effect/">Glossy Buttons</a>\n<a href="https://simplestepscode.com/css-glass-button-tutorial/">simple glass button</a>\n\n-webkit-gradient(&lt;type>, &lt;point> [, &lt;radius>]?, &lt;point> [, &lt;radius>]? [, &lt;stop>]*)\n\nglare effect:\n\n	background-image: \n	-webkit-gradient(\n	linear, 0% 0%, 0% 30%, \n	from(rgba(255, 255, 255, 0.7)), \n	to(rgba(255, 255, 255, 0)));\n\nanother similar effect:\n\n	background-image: \n	linear-gradient(\n		rgba(255,255,255,.1), \n		rgba(255,255,255,.05) 49%, \n		rgba(0,0,0,.05) 51%, \n		rgba(0,0,0,.1)\n	);\n\n',
'<h2>CSS Box Shadow Bottom Only</h2>\n<a href="https://redstapler.co/3d-infinity-effect-css-tutorial/" class="whitebut ">3D Infinity Effect CSS Tutorial</a>\n\n  box-shadow: 0 4px 2px -2px gray;\n\n  Whatever you set the blur to (3rd value), set the spread (4th value) to the negative of it.\n\n  box-shadow: \n  0px 0px 20px #ffcc00,\n  inset 0px 0px 20px #00ccff,\n  0px 0px 60px #00ffc8,\n  inset 0px 0px 60px #1055c8;\n\n\nbox-shadow: none|h-offset v-offset blur spread color |inset|initial|inherit;\n\nbox-shadow:20px 20px 50px 15px grey;  \n\nnone		Default value. No shadow is displayed	\n\nh-offset	Required. The horizontal offset of the shadow. A positive value puts the shadow on the right side of the box, a negative value puts the shadow on the left side of the box\n\nv-offset	Required. The vertical offset of the shadow. A positive value puts the shadow below the box, a negative value puts the shadow above the box\n\nblurred	Optional. The blur radius. The higher the number, the more blurred the shadow will be\n\nspread		Optional. The spread radius. A positive value increases the size of the shadow, a negative value decreases the size of the shadow	\n\ncolor		Optional. The color of the shadow. The default value is the text color. Look at CSS Color Values for a complete list of possible color values.\n\ninset		Optional. Changes the shadow from an outer shadow (outset) to an inner shadow	\ninitial		Sets this property to its default value.\ninherit		Inherits this property from its parent element.\n\n',
'<h2>CSS select element with attributes</h2>\nCSS select element with specific attribute: b[onclick]{color: red;}\njQuery selection by onclick attribute:\n $(\'div[onclick^="location.href"]\').css(\'color\', \'red\');\n\n',
'<h2>CSS transform</h2>\ntransform: scale(1.5, 1.5);\ntransform-origin: top left;\nimg { transform: scale(1.5, 1.5);   transform-origin: top left;\n    display: inline-block; margin-top: 2%;margin-bottom: 10%;}\n\n',
'<h2>CSS Properties</h2>\n<a href="cssProperties.html">cssProperties</a>\n\n\n<a href="https://www.w3schools.com/cssref/css3_pr_align-content.asp">align-content</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_align-items.asp">align-items</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_align-self.asp">align-self</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_all.asp">all</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_animation.asp">animation</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_animation-delay.asp">animation-delay</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_animation-direction.asp">animation-direction</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_animation-duration.asp">animation-duration</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_animation-fill-mode.asp">animation-fill-mode</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_animation-iteration-count.asp">animation-iteration-count</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_animation-name.asp">animation-name</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_animation-play-state.asp">animation-play-state</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_animation-timing-function.asp">animation-timing-function</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_backface-visibility.asp">backface-visibility</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_background.asp">background</a>\n<a href="https://www.w3schools.com/cssref/pr_background-attachment.asp">background-attachment</a>\n<a href="https://www.w3schools.com/cssref/pr_background-blend-mode.asp">background-blend-mode</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_background-clip.asp">background-clip</a>\n<a href="https://www.w3schools.com/cssref/pr_background-color.asp">background-color</a>\n<a href="https://www.w3schools.com/cssref/pr_background-image.asp">background-image</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_background-origin.asp">background-origin</a>\n<a href="https://www.w3schools.com/cssref/pr_background-position.asp">background-position</a>\n<a href="https://www.w3schools.com/cssref/pr_background-repeat.asp">background-repeat</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_background-size.asp">background-size</a>  \n<a href="https://www.w3schools.com/cssref/pr_border.asp">border</a>\n<a href="https://www.w3schools.com/cssref/pr_border-bottom.asp">border-bottom</a>\n<a href="https://www.w3schools.com/cssref/pr_border-bottom_color.asp">border-bottom-color</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_border-bottom-left-radius.asp">border-bottom-left-radius</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_border-bottom-right-radius.asp">border-bottom-right-radius</a>  \n<a href="https://www.w3schools.com/cssref/pr_border-bottom_style.asp">border-bottom-style</a>\n<a href="https://www.w3schools.com/cssref/pr_border-bottom_width.asp">border-bottom-width</a>\n<a href="https://www.w3schools.com/cssref/pr_border-collapse.asp">border-collapse</a>\n<a href="https://www.w3schools.com/cssref/pr_border-color.asp">border-color</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_border-image.asp">border-image</a>  \n<a href="https://www.w3schools.com/cssref/css3_pr_border-image-outset.asp">border-image-outset</a>  \n<a href="https://www.w3schools.com/cssref/css3_pr_border-image-repeat.asp">border-image-repeat</a> \n<a href="https://www.w3schools.com/cssref/css3_pr_border-image-slice.asp">border-image-slice</a> \n<a href="https://www.w3schools.com/cssref/css3_pr_border-image-source.asp">border-image-source</a> \n<a href="https://www.w3schools.com/cssref/css3_pr_border-image-width.asp">border-image-width</a> \n<a href="https://www.w3schools.com/cssref/pr_border-left.asp">border-left</a>\n<a href="https://www.w3schools.com/cssref/pr_border-left_color.asp">border-left-color</a>\n<a href="https://www.w3schools.com/cssref/pr_border-left_style.asp">border-left-style</a>\n<a href="https://www.w3schools.com/cssref/pr_border-left_width.asp">border-left-width</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_border-radius.asp">border-radius</a> \n<a href="https://www.w3schools.com/cssref/pr_border-right.asp">border-right</a>\n<a href="https://www.w3schools.com/cssref/pr_border-right_color.asp">border-right-color</a>\n<a href="https://www.w3schools.com/cssref/pr_border-right_style.asp">border-right-style</a>\n<a href="https://www.w3schools.com/cssref/pr_border-right_width.asp">border-right-width</a>\n<a href="https://www.w3schools.com/cssref/pr_border-spacing.asp">border-spacing</a>  \n<a href="https://www.w3schools.com/cssref/pr_border-style.asp">border-style</a>\n<a href="https://www.w3schools.com/cssref/pr_border-top.asp">border-top</a>\n<a href="https://www.w3schools.com/cssref/pr_border-top_color.asp">border-top-color</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_border-top-left-radius.asp">border-top-left-radius</a> \n<a href="https://www.w3schools.com/cssref/css3_pr_border-top-right-radius.asp">border-top-right-radius</a>\n<a href="https://www.w3schools.com/cssref/pr_border-top_style.asp">border-top-style</a>\n<a href="https://www.w3schools.com/cssref/pr_border-top_width.asp">border-top-width</a>\n<a href="https://www.w3schools.com/cssref/pr_border-width.asp">border-width</a>\n<a href="https://www.w3schools.com/cssref/pr_pos_bottom.asp">bottom</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_box-decoration-break.asp">box-decoration-break</a> \n<a href="https://www.w3schools.com/cssref/css3_pr_box-shadow.asp">box-shadow</a> \n<a href="https://www.w3schools.com/cssref/css3_pr_box-sizing.asp">box-sizing</a> \n<a href="https://www.w3schools.com/cssref/pr_tab_caption-side.asp">caption-side</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_caret-color.asp">caret-color</a>\n<a href="https://www.w3schools.com/cssref/pr_charset_rule.asp">@charset</a>\n<a href="https://www.w3schools.com/cssref/pr_class_clear.asp">clear</a>\n<a href="https://www.w3schools.com/cssref/pr_pos_clip.asp">clip</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_clip-path.asp">clip-path</a>\n<a href="https://www.w3schools.com/cssref/pr_text_color.asp">color</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_column-count.asp">column-count</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_column-fill.asp">column-fill</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_column-gap.asp">column-gap</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_column-rule.asp">column-rule</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_column-rule-color.asp">column-rule-color</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_column-rule-style.asp">column-rule-style</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_column-rule-width.asp">column-rule-width</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_column-span.asp">column-span</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_column-width.asp">column-width</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_columns.asp">columns</a>\n<a href="https://www.w3schools.com/cssref/pr_gen_content.asp">content</a>\n<a href="https://www.w3schools.com/cssref/pr_gen_counter-increment.asp">counter-increment</a>\n<a href="https://www.w3schools.com/cssref/pr_gen_counter-reset.asp">counter-reset</a>\n<a href="https://www.w3schools.com/cssref/pr_class_cursor.asp">cursor</a>\n<a href="https://www.w3schools.com/cssref/pr_text_direction.asp">direction</a>\n<a href="https://www.w3schools.com/cssref/pr_class_display.asp">display</a>\n<a href="https://www.w3schools.com/cssref/pr_tab_empty-cells.asp">empty-cells</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_filter.asp">filter</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_flex.asp">flex</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_flex-basis.asp">flex-basis</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_flex-direction.asp">flex-direction</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_flex-flow.asp">flex-flow</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_flex-grow.asp">flex-grow</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_flex-shrink.asp">flex-shrink</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_flex-wrap.asp">flex-wrap</a>\n<a href="https://www.w3schools.com/cssref/pr_class_float.asp">float</a>\n<a href="https://www.w3schools.com/cssref/pr_font_font.asp">font</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_font-face_rule.asp">@font-face</a> \n<a href="https://www.w3schools.com/cssref/pr_font_font-family.asp">font-family</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_font-kerning.asp">font-kerning</a>\n<a href="https://www.w3schools.com/cssref/pr_font_font-size.asp">font-size</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_font-size-adjust.asp">font-size-adjust</a>  \n<a href="https://www.w3schools.com/cssref/css3_pr_font-stretch.asp">font-stretch</a> \n<a href="https://www.w3schools.com/cssref/pr_font_font-style.asp">font-style</a>\n<a href="https://www.w3schools.com/cssref/pr_font_font-variant.asp">font-variant</a>\n<a href="https://www.w3schools.com/cssref/pr_font_weight.asp">font-weight</a>\n<a href="https://www.w3schools.com/cssref/pr_grid.asp">grid</a>\n<a href="https://www.w3schools.com/cssref/pr_grid-area.asp">grid-area</a>\n<a href="https://www.w3schools.com/cssref/pr_grid-auto-columns.asp">grid-auto-columns</a>\n<a href="https://www.w3schools.com/cssref/pr_grid-auto-flow.asp">grid-auto-flow</a>\n<a href="https://www.w3schools.com/cssref/pr_grid-auto-rows.asp">grid-auto-rows</a>\n<a href="https://www.w3schools.com/cssref/pr_grid-column.asp">grid-column</a>\n<a href="https://www.w3schools.com/cssref/pr_grid-column-end.asp">grid-column-end</a>\n<a href="https://www.w3schools.com/cssref/pr_grid-column-gap.asp">grid-column-gap</a>\n<a href="https://www.w3schools.com/cssref/pr_grid-column-start.asp">grid-column-start</a>\n<a href="https://www.w3schools.com/cssref/pr_grid-gap.asp">grid-gap</a>\n<a href="https://www.w3schools.com/cssref/pr_grid-row.asp">grid-row</a>\n<a href="https://www.w3schools.com/cssref/pr_grid-row-end.asp">grid-row-end</a>\n<a href="https://www.w3schools.com/cssref/pr_grid-row-gap.asp">grid-row-gap</a>\n<a href="https://www.w3schools.com/cssref/pr_grid-row-start.asp">grid-row-start</a>\n<a href="https://www.w3schools.com/cssref/pr_grid-template.asp">grid-template</a>\n<a href="https://www.w3schools.com/cssref/pr_grid-template-areas.asp">grid-template-areas</a>\n<a href="https://www.w3schools.com/cssref/pr_grid-template-columns.asp">grid-template-columns</a>\n<a href="https://www.w3schools.com/cssref/pr_grid-template-rows.asp">grid-template-rows</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_hanging-punctuation.asp">hanging-punctuation</a>\n<a href="https://www.w3schools.com/cssref/pr_dim_height.asp">height</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_hyphens.asp">hyphens</a>\n<a href="https://www.w3schools.com/cssref/pr_import_rule.asp">@import</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_isolation.asp">isolation</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_justify-content.asp">justify-content</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_animation-keyframes.asp">@keyframes</a>\n<a href="https://www.w3schools.com/cssref/pr_pos_left.asp">left</a>\n<a href="https://www.w3schools.com/cssref/pr_text_letter-spacing.asp">letter-spacing</a>\n<a href="https://www.w3schools.com/cssref/pr_dim_line-height.asp">line-height</a>\n<a href="https://www.w3schools.com/cssref/pr_list-style.asp">list-style</a>\n<a href="https://www.w3schools.com/cssref/pr_list-style-image.asp">list-style-image</a>\n<a href="https://www.w3schools.com/cssref/pr_list-style-position.asp">list-style-position</a>\n<a href="https://www.w3schools.com/cssref/pr_list-style-type.asp">list-style-type</a>\n<a href="https://www.w3schools.com/cssref/pr_margin.asp">margin</a>\n<a href="https://www.w3schools.com/cssref/pr_margin-bottom.asp">margin-bottom</a>\n<a href="https://www.w3schools.com/cssref/pr_margin-left.asp">margin-left</a>\n<a href="https://www.w3schools.com/cssref/pr_margin-right.asp">margin-right</a>\n<a href="https://www.w3schools.com/cssref/pr_margin-top.asp">margin-top</a>\n<a href="https://www.w3schools.com/cssref/pr_dim_max-height.asp">max-height</a>\n<a href="https://www.w3schools.com/cssref/pr_dim_max-width.asp">max-width</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_mediaquery.asp">@media</a>\n<a href="https://www.w3schools.com/cssref/pr_dim_min-height.asp">min-height</a>\n<a href="https://www.w3schools.com/cssref/pr_dim_min-width.asp">min-width</a>\n<a href="https://www.w3schools.com/cssref/pr_mix-blend-mode.asp">mix-blend-mode</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_object-fit.asp">object-fit</a> \n<a href="https://www.w3schools.com/cssref/css3_pr_object-position.asp">object-position</a> \n<a href="https://www.w3schools.com/cssref/css3_pr_opacity.asp">opacity</a> \n<a href="https://www.w3schools.com/cssref/css3_pr_order.asp">order</a> \n<a href="https://www.w3schools.com/cssref/pr_outline.asp">outline</a>\n<a href="https://www.w3schools.com/cssref/pr_outline-color.asp">outline-color</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_outline-offset.asp">outline-offset</a>  \n<a href="https://www.w3schools.com/cssref/pr_outline-style.asp">outline-style</a>\n<a href="https://www.w3schools.com/cssref/pr_outline-width.asp">outline-width</a>\n<a href="https://www.w3schools.com/cssref/pr_pos_overflow.asp">overflow</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_overflow-x.asp">overflow-x</a>  \n<a href="https://www.w3schools.com/cssref/css3_pr_overflow-y.asp">overflow-y</a>\n<a href="https://www.w3schools.com/cssref/pr_padding.asp">padding</a>\n<a href="https://www.w3schools.com/cssref/pr_padding-bottom.asp">padding-bottom</a>\n<a href="https://www.w3schools.com/cssref/pr_padding-left.asp">padding-left</a>\n<a href="https://www.w3schools.com/cssref/pr_padding-right.asp">padding-right</a>\n<a href="https://www.w3schools.com/cssref/pr_padding-top.asp">padding-top</a>\n<a href="https://www.w3schools.com/cssref/pr_print_pageba.asp">page-break-after</a>\n<a href="https://www.w3schools.com/cssref/pr_print_pagebb.asp">page-break-before</a>\n<a href="https://www.w3schools.com/cssref/pr_print_pagebi.asp">page-break-inside</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_perspective.asp">perspective</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_perspective-origin.asp">perspective-origin</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_pointer-events.asp">pointer-events</a>\n<a href="https://www.w3schools.com/cssref/pr_class_position.asp">position</a>\n<a href="https://www.w3schools.com/cssref/pr_gen_quotes.asp">quotes</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_resize.asp">resize</a>\n<a href="https://www.w3schools.com/cssref/pr_pos_right.asp">right</a>\n<a href="https://www.w3schools.com/cssref/pr_scroll-behavior.asp">scroll-behavior</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_tab-size.asp">tab-size</a>\n<a href="https://www.w3schools.com/cssref/pr_tab_table-layout.asp">table-layout</a>\n<a href="https://www.w3schools.com/cssref/pr_text_text-align.asp">text-align</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_text-align-last.asp">text-align-last</a>\n<a href="https://www.w3schools.com/cssref/pr_text_text-decoration.asp">text-decoration</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_text-decoration-color.asp">text-decoration-color</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_text-decoration-line.asp">text-decoration-line</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_text-decoration-style.asp">text-decoration-style</a>\n<a href="https://www.w3schools.com/cssref/pr_text_text-indent.asp">text-indent</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_text-justify.asp">text-justify</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_text-overflow.asp">text-overflow</a>  \n<a href="https://www.w3schools.com/cssref/css3_pr_text-shadow.asp">text-shadow</a> \n<a href="https://www.w3schools.com/cssref/pr_text_text-transform.asp">text-transform</a>\n<a href="https://www.w3schools.com/cssref/pr_pos_top.asp">top</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_transform.asp">transform</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_transform-origin.asp">transform-origin</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_transform-style.asp">transform-style</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_transition.asp">transition</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_transition-delay.asp">transition-delay</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_transition-duration.asp">transition-duration</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_transition-property.asp">transition-property</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_transition-timing-function.asp">transition-timing-function</a>\n<a href="https://www.w3schools.com/cssref/pr_text_unicode-bidi.asp">unicode-bidi</a> \n<a href="https://www.w3schools.com/cssref/css3_pr_user-select.asp">user-select</a> \n<a href="https://www.w3schools.com/cssref/pr_pos_vertical-align.asp">vertical-align</a>\n<a href="https://www.w3schools.com/cssref/pr_class_visibility.asp">visibility</a>\n<a href="https://www.w3schools.com/cssref/pr_text_white-space.asp">white-space</a>\n<a href="https://www.w3schools.com/cssref/pr_dim_width.asp">width</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_word-break.asp">word-break</a>  \n<a href="https://www.w3schools.com/cssref/pr_text_word-spacing.asp">word-spacing</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_word-wrap.asp">word-wrap</a>\n<a href="https://www.w3schools.com/cssref/css3_pr_writing-mode.asp">writing-mode</a>  \n<a href="https://www.w3schools.com/cssref/pr_pos_z-index.asp">z-index</a>\n\n',
'<h2>Full Sidebar, scrollbars</h2>\nto remove the scrollbars\noverflow: hidden;\n\n.sidenav {\n  height: 100%;  //this is full sidebar\n  width: 160px;\n  position: fixed; /* Fixed Sidebar (stay in place on scroll) */\n  z-index: 1; /* Stay on top */\n  top: 0; /* Stay at the top */\n  left: 0;\n  background-color: #111;\n  overflow-x: hidden; /* Disable horizontal scroll */\n  padding-top: 20px;\n}\n\n.sidenav a { padding: 6px 8px 6px 16px; text-decoration: none;\n font-size: 25px; color: #818181; display: block;}\n\n.sidenav a:hover { color: #f1f1f1;}\n\n.main {\n  margin-left: 160px; /* Same as the width of the sidenav */\n  padding: 0px 10px;\n}\n\n/* On smaller screens, where height is less than 450px, change the style of the sidebar (less padding and a smaller font size) */\n@media screen and (max-height: 450px) {\n  .sidenav {padding-top: 15px;}\n  .sidenav a {font-size: 18px;}\n}\n\n\nAuto Sidebar\n.sidenav {\n  width: 130px;\n  position: fixed;\n  z-index: 1;\n  top: 20px;\n  left: 10px;\n  background: #eee;\n  overflow-x: hidden;\n  padding: 8px 0;\n}\n\n.sidenav a { padding: 6px 8px 6px 16px; text-decoration: none;\n font-size: 25px; color: #2196F3; display: block;}\n\n.sidenav a:hover { color: #064579;}\n\n.main {\n  margin-left: 140px; /* Same width as the sidebar + left position in px */\n  padding: 0px 10px;\n}\n\n@media screen and (max-height: 450px) {\n  .sidenav {padding-top: 15px;}\n  .sidenav a {font-size: 18px;}\n}\n\nCreate a Fixed Sidebar\n&lt;div class="sidenav">\n  &lt;a href="#">About&lt;/a>\n  &lt;a href="#">Services&lt;/a>\n  &lt;a href="#">Clients&lt;/a>\n  &lt;a href="#">Contact&lt;/a>\n&lt;/div>\n\n&lt;!-- Page content -->\n&lt;div class="main">\n  ...\n&lt;/div>\n\n',
'<h2>Basic Dropdown</h2>\nCreate a dropdown box that appears when the user moves the mouse over an element.\n\n.dropdown { position: relative; display: inline-block;}\n.dropdown-content { display: none; position: absolute;}\n.dropdown:hover .dropdown-content { display: block;}\n\n&lt;div class="dropdown">\n &lt;span>Mouse over me&lt;/span>\n &lt;div class="dropdown-content">\n   &lt;p>Hello World!&lt;/p>\n &lt;/div>\n&lt;/div>\n\n',
'<h2>Cropping Images in CSS With object-fit</h2>\nEver wanted an image to fit exactly into a certain given dimension, but while keeping its aspect ratio and avoid having a squished image? This wasn’t something that could easily be done using CSS for the longest time. One trick was to resort to using a background image instead to go around the issue. Well the problem is no more with the <em>object-fit</em> property!\nAlong with <a href="/css/inherit-initial-unset/">inherit, initial and unset</a>, there are 5 more possible values for object-fit:\n<em>contain</em>: The image keeps its original aspect ratio, but resized so that the longest of either the height or width can fit in the given dimensions.\n<em>cover</em>: The image keeps its original aspect ratio and the image area is completely covered.\n<em>fill</em>: The initial value. The image will fill its given area, even if it means losing its aspect ratio.\n<em>none</em>: The image is not resized at all, and the original image size fills the given area.\n<em>scale-down</em>: The smaller of either <k>contain</k> or <k>none</k>.\n\nLet’s demonstrate with an example. The following image’s original width is 1200px and height is 674px. Here it’s shown at half its size, 600px by 337px:\n<img src="https://d33wubrfki0l68.cloudfront.net/a9c7e461090fc25097e6391a5bb823b0f28ba008/1672b/images/css/object-fit/example-object-fit.jpg" width="600" height="337" class="slight-shadow" alt="Our starting image" />\nNow we have a problem if we need the image to be the same height, but fit in half the width. The original aspect ratio is lost and the result is a squished image:\n<img src="https://d33wubrfki0l68.cloudfront.net/a9c7e461090fc25097e6391a5bb823b0f28ba008/1672b/images/css/object-fit/example-object-fit.jpg" width="300" height="337" style="width: 300px; height: 337px;" />\n<k>object-fit</k> can fix that issue for us. Let’s showcase the different values:\n<h3>object-fit: contain</h3><code>.alligator-turtle { object-fit: contain;}</code>\n<img src="https://d33wubrfki0l68.cloudfront.net/a9c7e461090fc25097e6391a5bb823b0f28ba008/1672b/images/css/object-fit/example-object-fit.jpg" width="300" height="337" style="width: 300px; height: 337px; object-fit: contain;" />\n\n<h3>object-fit: cover</h3><code>.alligator-turtle { object-fit: cover;}</code>\n<img src="https://d33wubrfki0l68.cloudfront.net/a9c7e461090fc25097e6391a5bb823b0f28ba008/1672b/images/css/object-fit/example-object-fit.jpg" width="300" height="337" style="width: 300px; height: 337px; object-fit: cover;" />\n\n<h3>object-fit: fill</h3><code>.alligator-turtle { object-fit: fill;}</code>\n<img src="https://d33wubrfki0l68.cloudfront.net/a9c7e461090fc25097e6391a5bb823b0f28ba008/1672b/images/css/object-fit/example-object-fit.jpg" width="300" height="337" style="width: 300px; height: 337px; object-fit: fill;" />\n\n<h3>object-fit: none</h3><code>.alligator-turtle { object-fit: none;}</code>\n<img src="https://d33wubrfki0l68.cloudfront.net/a9c7e461090fc25097e6391a5bb823b0f28ba008/1672b/images/css/object-fit/example-object-fit.jpg" width="300" height="337" style="width: 300px; height: 337px; object-fit: none;" />\n\n<h3>object-fit: scale-down</h3><code>.alligator-turtle { object-fit: scale-down;}</code>\n<img src="https://d33wubrfki0l68.cloudfront.net/a9c7e461090fc25097e6391a5bb823b0f28ba008/1672b/images/css/object-fit/example-object-fit.jpg" width="300" height="337" style="width: 300px; height: 337px; object-fit: scale-down;" />\nIn this particular example, <em>object-fit: cover</em> is probably what will work the best for our needs.\n',
'<h2>box-sizing: border-box</h2>\nThe CSS box-sizing property allows us to include the padding and border in an element\'s total width and height.\n\n',
'<h2>Clipping and Masking in CSS</h2>\n<a href="https://bennettfeely.com/clippy/" class="whitebut ">clippy clip-path</a>\n\n<a href="https://css-tricks.com/clipping-masking-css/" class="whitebut ">clipping masking</a>\n<a href="https://css-tricks.com/sketchy-avatars-css-clip-path/" class="whitebut ">css clip path</a>\n\nMasks are images; Clips are paths.\n\nThe New clip-path\n\n.element {\n  clip-path: inset(10px 20px 30px 40px);\n  /* Also can take single values to make all sides the same, or 2 values (vert/horz), or 3 values (top/horz/bottom). */\n}\nNote that there are no commas, and the syntax is different, but ultimately does the same kind of things.\n\nWhat also does work with clip-path though (in some browsers), is circles, ellipses, and polygons. Here\'s some examples:\n\n.clip-circle {\n  clip-path: circle(60px at center);\n  /* OLD VALUE example: circle(245px, 140px, 50px); */\n  /* Yep, even the new clip-path has deprecated stuff. */\n}\n.clip-ellipse {\n  clip-path: ellipse(60px 40px at 75px 30px);\n  /* OLD VALUE example: ellipse(245px, 80px, 75px, 30px); */\n}\n.clip-polygon {\n  clip-path: polygon(5% 5%, 100% 0%, 100% 75%, 75% 75%, 75% 100%, 50% 75%, 0% 75%);\n  /* Note that percentages work as well as px */\n}\nPolygon is pretty powerful.\n\nTheoretically, this is what clip-path will support (known as "basic shapes"):\n.clip-examples {\n\n  clip-path: rectangle(x, y, width, height, rounded-x, rounded-y)\n          \n  clip-path: inset-rectangle(from top, from right, from bottom, from left, rounded-x, rounded-y)\n  /* Looks like this is what rect() used to be like with clip */\n  /* Will replace inset(), I suppose */\n\n  clip-path: polygon(a, bunch, of, points)\n  clip-path: circle(radius at x, y)\n  clip-path: ellipse(radius-x, radius-y at x, y)\n\n}\n\nWhy not use image masks?\nFor instance, a mask defined in SVG:\nimg {\n  mask: url(mask.svg) top left / cover;\n}\nThe mask property can reference external SVG or SVG defined in the document by ID.\n\nBut what if you wanted a unique shape for every single avatar displayed, not the same shape? You could programmatically generate lots of different SVG shapes to apply. But we can achieve the same thing and get that mathematical generation through generating clip-paths with (S)CSS.\n\nClipping paths in a nutshell\nThere are a few different shape values you can use for CSS clipping but in our case, the polygon shape is best as it gives us the most amount of points and flexibility to create our hand-drawn effect.\n\nYou give polygon() a list of X, Y point values, like: &lt;x0> &lt;y0>, &lt;x1> &lt;y1>, ... &lt;xn> &lt;yn>. That will draw a path around your points in order and crop any of the content outside of the newly created shape.\n\n/* \n  This will create a Hexagon, with the first \n  point being the top tip of the shape \n*/\n\n.hexagon {\n  clip-path: polygon(50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%, 0 25%);\n}\nHere is that simple example in action:\n\n.hexagon {\n  clip-path: polygon(50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%, 0 25%);\n  \n  background: red;\n  width: 100px;\n  height: 100px;\n}\n\nHere is the source code for the animation of the basic shape:\n\nimg:hover {\n  clip-path: polygon(0px 208px, 146.5px 207px, 147px 141.2px, ...);\n  animate: star 3s;\n}\n\n@keyframes star {\n  0% {\n    clip-path: polygon(0px 208px, 146.5px 207px, 147px 141.2px, ...);\n  },\n  100% {\n    clip-path: polygon(0px 208px, 146.5px 207px, 147px 141.2px, ...);\n  }\n}\n\n<a href="https://www.html5rocks.com/en/tutorials/masking/adobe/" class="whitebut ">Masking</a>\n\nMasking\ntwo kind of masks: the luminance mask and the alpha mask.\n\nLuminance Mask\nFor luminance masks, the mask image is transformed to a rasterized gray scale image first (if it isn\'t in gray scale already). \nThe "lighter" a portion of the mask image is, the more of the masked element will be visible on the same position. \nFor instance black indicates fully transparent, white indicates fully opaque and a gray tone indicates partial transparency of the element.\n\nAlpha Mask\nAlpha masking uses the same principle as luminance masking. \nThe difference to luminance masking: just the alpha channel of the image matters. \nThe less opaque a portion of the mask image is, the less visible the element will be at the same position.\n\nimg {\n  mask-image: url(mask.svg);\n}\n the mask source should be stretched to the size of the content, just use the shorthand property mask, as you would do it for the background with the shorthand property background:\n\nimg {\n  mask: url(mask.svg) top left / cover;\n}\n\n',
'<h2>css not()</h2>\n<a href="https://tympanus.net/codrops/css_reference/not/" class="whitebut ">css not()</a>\n\nCSS :not() with Multiple Classes\nThe :not() selector select an element when it doesn\'t have a certain class. \nbody:not(.home)\n\nBut what if there are multiple classes you want to avoid?\nThere are no logical combinators with :not(), like and or or, but you can chain them, which is effectively like and.\n\nbody:not(.home):not(.away):not(.page-50)\nThe :not() selector doesn\'t add any specificy by itself, but what is inside does, so :not(.foo) adds the same weight as .foo does.\n\n',
'<h2>interesting CSS components</h2>\n<a href="https://www.csswand.dev" class="whitebut ">CSS Wand CSS components</a>\n\n',
'<h2>CSS filter</h2>\n\nfilter: none, blur(), brightness(), contrast(), drop-shadow(), grayscale(), hue-rotate(), invert(), opacity(), saturate(), sepia(), url()\n\nimg {\n  filter: grayscale(100%);\n}\n\nThe url() function takes the location of an XML file that specifies an SVG filter, and may include an anchor to a specific filter element.\nExample: filter: url(svg-url#element-id)\n\n',
'<h2>CSS Flexbox</h2>\n<a href="https://www.youtube.com/watch?v=k32voqQhODc" class="whitebut ">CSS Flexbox Tutorial</a>\n\n',
'<h2>half opaque</h2>\n&lt;span style="opacity:0.5">C:\Users\&lt;em>Your Name&lt;/em>&lt;/span>\n\n',
'<h2>perspective Property</h2>\nThe perspective property is used to give a 3D-positioned element some perspective.\n\nThe perspective property defines how far the object is away from the user. So, a lower value will result in a more intensive 3D effect than a higher value.\n\nWhen defining the perspective property for an element, it is the CHILD elements that get the perspective view, NOT the element itself.\n\nperspective: length|none;\n\nlength	How far the element is placed from the view\nnone		Default value. Same as 0. The perspective is not set\ninitial	Sets this property to its default value. Read about initial\ninherit	Inherits this property from its parent element. Read about inherit\n\n',
'<h2>Align HTML elements horizontally in a div</h2>\ntext-align:\ncenter to your wrapper to set the horizontal alignment of all non-floating/non-positioned children\ndiv{ text-align:center; }\n\n&lt;span> are inline elements by default.\nThus you either have to use display:block on them and style them appropriately, or just tweak the parent style a little bit.\n\nuse text-align:&lt;value>\nwhere value is left, right, center or justify.\n\nCenter Align Elements\nTo horizontally center a block element (like &lt;div>), use margin: auto;\n\nSetting the width of the element will prevent it from stretching out to the edges of its container.\n\nThe element will then take up the specified width, and the remaining space will be split equally between the two margins:\n\ndisplay:flex\nNo matter what kind of element in the div.\n\nCenter an Image\nTo center an image, set left and right margin to auto and make it into a block element:\nimg {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\n\nLeft and Right Align - Using position\n.right {\n  position: absolute;\n  right: 0px;\n}\n\nLeft and Right Align - Using float\n.right {\n  float: right;\n}\n\nThe clearfix\nIf an element is taller than the element containing it, and it is floated, it will overflow outside of its container.\nuse the "clearfix" to fix this\n\nadd overflow: auto; to the containing element to fix this problem:\n\n.clearfix {\n  overflow: auto;\n}\n\nCenter Vertically - Using padding\nA simple solution is to use top and bottom padding:\n\n.center {\n  padding: 70px 0;\n  border: 3px solid green;\n}\n\nTo center both vertically and horizontally\nuse padding and text-align: center:\n.center {\n  padding: 70px 0;\n  text-align: center;\n}\n\nCenter Vertically - Using line-height\nuse the line-height property with a value that is equal to the height property:\n\n.center {\n  line-height: 200px;\n  height: 200px;\n  text-align: center;\n}\n\n/* If the text has multiple lines, add the following: */\n.center p {\n  line-height: 1.5;\n  display: inline-block;\n  vertical-align: middle;\n}\n\nCenter Vertically - Using position & transform\nIf padding and line-height are not options, another solution is to use positioning and the transform property:\n\n.center {\n  height: 200px;\n  position: relative;\n  border: 3px solid green;\n}\n\n.center p {\n  margin: 0;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\nCenter Vertically - Using Flexbox\nYou can also use flexbox to center things.\nJust note that flexbox is not supported in IE10 and earlier versions:\n\n.center {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n  border: 3px solid green;\n}\n\n',
'<h2>set div automatically to its own width</h2>\nSolution with inline-block\ndisplay: inline-block\n\nHowever, you won\'t be able to center it using margin-left: auto & margin-right: auto because that technique requires a width value.\n\nIf possible, use display: inline-block and set text-align: center on it\'s container.\n\nExample:\n&lt;div style="text-align: center">\n  &lt;div style="display: inline-block;">\n     This will expand only as far as it needs to\n  &lt;/div>\n&lt;/div>\n<div style="text-align: center">\n  <div style="display: inline-block;">\n     This will expand only as far as it needs to\n  </div>\n</div>\n\nSolution using Flexbox + container div\nThe original answer above was written in 2011, before flexbox was implemented. You can achieve a similar effect\n\nExample:\n&lt;div style="display: flex; justify-content: center;">\n  &lt;div>\n     This will expand only as far as it needs to\n  &lt;/div>\n&lt;/div>\n<div style="display: flex; justify-content: center;">\n  <div>\n     This will expand only as far as it needs to\n  </div>\n</div>\n\nSolution without container div\nThere is another way to do this without a parent element.\n\nSet display to inline-block to make the div width fit to its content.\nUse position: relative and left: 50% to position its left edge to 50% of its containing element.\nUse transform: translateX(-50%) which will "shift" the element to the left by half its own width.\n.center {\n  display: inline-block;\n  position: relative;\n  left: 50%;\n  transform: translateX(-50%);\n}\n\nOthers:\nExamples:\n&lt;div>\n  &lt;div style="display: table; margin: auto">\n    This will expand only as far as it needs to\n  &lt;/div>\n&lt;/div>\n<div>\n  <div style="display: table; margin: auto">\n    This will expand only as far as it needs to\n  </div>\n</div>\n\nOthers:\n.center\n{\n    width: fit-content;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n&lt;div>s are block elements. They take the full width of their containers. Period. Just like &lt;body> or &lt;html>\n\nYour rule above is essentially doing this: div { width:100%; margin:0 auto; } as 100% is its auto value.\n\ninline-block would work, but it won\'t work exactly like a true inline-block element.\n\n',
'<h2>glyphicons</h2>\n<a href="https://getbootstrap.com/docs/3.3/components/" class="whitebut ">\nglyphicons\n<span class=\'glyphicon glyphicon-pencil\'></span>\n<span class=\'glyphicon glyphicon-trash\'></span>\n<span class=\'glyphicon glyphicon-eye-open\'></span>\n</a>\n\n<a href="https://www.w3schools.com/icons/icons_reference.asp" class="whitebut ">Icons Reference</a>\n<a href="https://fontawesome.com/icons?d=gallery&q=savee" class="whitebut ">fontawesome</a>\n\n',
'<h2>to include external CSS file</h2>\n@import url("base.css");\nThe @import rule must precede all other rules (except @charset).\n\n@import "mystyle.css";\n@import url("mystyle.css");\n\n',
'<h2>inherit CSS rules from another element</h2>\nThe inherit keyword specifies that a property should inherit its value from its parent element.\n\nadd your someInheritedDiv element to the first rule like this.\n\ndiv.someBaseDiv,\n#someInheritedDiv\n{ margin-top:3px; margin-left:auto; margin-right:auto; margin-bottom:0px;}\nThis will tell your #someInheritedDiv to apply the same styles as div.someBaseDiv has. Then you extend this set of styles with more specific to your #someInheritedDiv:\n\n#someInheritedDiv\n{ background-image:url("images/worldsource/customBackground.gif"); background-repeat:no-repeat; width:950px; height:572px;}\n\nOR use both classes and combine them like so:\n\n.baseClass\n{ margin-top:3px; margin-left:auto; margin-right:auto; margin-bottom:0px;}\n\n.baseClass.otherClass /* this means the element has both baseClass and otherClass */\n{ background-image:url("images/worldsource/customBackground.gif"); background-repeat:no-repeat; width:950px; height:572px;}\n\nThe markup is as follows:\n&lt;div class="baseClass otherClass">&lt;/div>\n\n',
'<h2>change checkbox</h2>\n<a href="https://stackoverflow.com/questions/24322599/why-cannot-change-checkbox-color-whatever-i-do" class="whitebut ">cannot change checkbox color</a>\n\ninput[type=\'checkbox\']:checked {background-color: #000;}\ninput[type=\'checkbox\']:checked:after {content: \'\2713\';color: white;position: absolute;line-height: 1rem;font-size:1rem;padding-left: 0.15rem;}\n\nTechnically, it is possible to change the color of anything with CSS.\nyou can\'t change the background-color or color but you can use CSS filters. \n\nFor example:\ninput[type="checkbox"] { /* change "blue" browser chrome to yellow */\n  filter: invert(100%) hue-rotate(18deg) brightness(1.7);\n}\n\nIf you are really looking for design control over checkboxes though, your best bet is to do the "hidden" checkbox and style an adjacent element such as a div.\n\ninput[type=\'checkbox\'] { filter: grayscale(1) }\n\nuse JS to account for multi-line fields with the apchange class\n\n$(document).on(\'change\', \'.apchange textarea\', function(){\n  $(this).css(\'color\', \'red\');\n});\n\nAnd for making the checkbox labels red when checked, you can use this CSS\n\ninput[type=checkbox]:checked + label {color: red};\n\n',
'<h2>CSS Content</h2>\nCSS has a property called content. \nIt can only be used with the pseudo elements :after and :before. \nIt is written like a pseudo selector (with the colon), but it’s called a pseudo element because it’s not actually selecting anything that exists on the page but adding something new to the page. \n\nThis is what it looks like:\n\n.email-address:before { content: "Email address: ";}\n\nWith this CSS in place, we could have this HTML:\n\n&lt;li class="email-address">chriscoyier@gmail.com&lt;/li>\n\nAnd the output would be like:\n\n• Email address: chriscoyier@gmail.com\n\nUsing Special Characters\nHere’s some random useful ones:\n\00A9 – Copyright\n\2713 – Checkmark\n\2192 – Right arrow\n\2190 – Left arrow\n\nUsing Attributes\nFor example, an anchor link might have a title attribute:\n\n&lt;a title="A web design community." href="https://css-tricks.com">CSS-Tricks&lt;/a>\n\nYou can access that title attribute from the content property like:\n\na:before { content: attr(title) ": "; }\n\nto insert something into the HTML to use for a CSS content purpose (but nothing else), you could use the new data- attribute prefix in HTML5.\n\n',
'<h2>Selecting content with CSS selectors</h2>\n<a href="https://data-lessons.github.io/library-webscraping-DEPRECATED/02-csssel/" class="whitebut ">Selecting content with CSS selectors</a>\n\nThe syntax to evaluate a CSS Selector:\ndocument.querySelectorAll("SELECTOR")\n\nFor example:\ndocument.querySelectorAll("html > head > title")\ndocument.querySelectorAll("html > head > title")[0]\ndocument.querySelectorAll("html > head > title")[0].innerText\n\n',
'<h2>get the CSS Selector in Chrome</h2>\nIn Chrome Dev tools, select the element, in the source pane right click, "Copy CSS Path" option.\n\n',
'<h2>不常见但却非常实用的 css 属性</h2>\n<h3>1、-webkit-line-clamp</h3>\n可以把 块容器 中的内容限制为指定的行数。\n并且在超过行数后，在最后一行显示"..."\n这是正常的展示\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWR4PA0MfCTEiahcd8XsLRfhibMicc0Z32lKyEwkZZWPq2JzCNQOTMlia62bw/640">\n\ndisplay: -webkit-box; /*值必须为-webkit-box或者-webkit-inline-box*/\n-webkit-box-orient: vertical; /*值必须为vertical*/\n-webkit-line-clamp: 2; /*值为数字，表示一共显示几行*/\noverflow: hidden;\n这是加了 line-clamp 后的展示\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWReVPhTJ1ZeibnsDtTAKcuf9NAgr95RicSSVsrORUXFibzcK0Bd4EJaWG4A/640">\n\nhttps://developer.mozilla.org/zh-CN/docs/Web/CSS/-webkit-line-clamp\n<h3>2、all</h3>将除却 unicode-bidi 与 direction 之外的所有属性重设至其初始值，或继承值。\n\nall: unset; /*initial | inherit | unset*/\n\ninitial 改变该元素所有属性的值至初始值。\ninherit 改变该元素的值 至 从父元素继承的值\nunset 如果该元素的属性的值是可继承的，重置为父元素的继承的值，反之则改变为初始值。\n\n<h3>3、box-decoration-break</h3>https://developer.mozilla.org/zh-CN/docs/Web/CSS/box-decoration-break\n<h3>4、caret-color</h3>用来定义插入光标（caret）的颜色，这里说的插入光标，就是那个在网页的可编辑器区域内，用来指示用户的输入具体会插入到哪里的那个一闪一闪的形似竖杠 | 的东西。\n\ncaret-color: red;\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRaFvCOuibRwkPXGrVYnwy1cFWMg7Xahj6ib9e3z9GWSuD6w8MgkllmEAw/640">\n\n<h3>5、clip-path / shape-outside</h3>clip-path 属性使用裁剪方式创建元素的可显示区域。\n区域内的部分显示，区域外的隐藏。\n类似的裁剪还有 svg 的 clipPath。\n\nclip-path 的取值有以下几种图形\ninset(xxx): 裁剪为长方形circle(xx): 裁剪为原型\nellipse(xxx): 裁剪为椭圆\npolygon(xx): 裁剪为多边形\nnone: 不裁剪\n例子前的准备\n&lt;div  style="width: 500px; height: 500px;text-align: left;background-color:gray;color:white">  &lt;img    class="clip-mode"    style="float: left; margin:20px"    src="https://interactive-examples.mdn.mozilla.net/media/examples/balloon-small.jpg"    width="150"  />  We had agreed, my companion and I, that I should call for him at his house,  after dinner, not later than eleven o’clock. This athletic young Frenchman  belongs to a small set of Parisian sportsmen, who have taken up “ballooning”  as a pastime. After having exhausted all the sensations that are to be found  in ordinary sports, even those of “automobiling” at a breakneck speed, the  members of the “Aéro Club” now seek in the air, where they indulge in all  kinds of daring feats, the nerve-racking excitement that they have ceased to  find on earth.&lt;/div>\n不裁剪\nclip-path: none;\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRejLRice8DdP7IzgHcaVjAYhphj0pyK4CCvTfQflKNnqcz99p36tgDHg/640">\n\n圆形裁剪\nclip-path: circle(40%); //半径为40%，圆心默认为中心\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWR3pZ4Mv7k26qJwpVMdqpvvXZJwL6kcMq1fFgIaTfvFbxqXENniaUvOZg/640">\n\n椭圆裁剪\nclip-path: ellipse(130px 140px at 10% 20%);\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRtME4LYibeDrgEtzOrrWwnlwHJ4XUkfaXwyxo6XeY6nS4X3AXFLMRfag/640">\n\n多边形裁剪\nclip-path: polygon(50% 0, 100% 50%, 50% 100%, 0 50%);\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRN1t0AgQ1fKqwibm63J8IPsP3fkXiaaBpYQfysTvweQrRPSHG0swgFOhw/640">\n\n我们可以看到上面图形如何裁剪，外面的看不见的框始终是矩形，也就是说文字始终是按矩形的样式在周围环绕。\n\n那么有办法让文字紧紧的贴在裁剪的图形周围呢？有的，使用 shape-outside 属性\nshape-outside 定义了一个可以是 非矩形的形状，相邻的内联内容应围绕该形状进行包裹。\n默认情况下，内联内容包围其矩形边距;\n默认矩形环绕\nclip-path: none;shape-outside: none\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRhH93vFgPydyXh5fBAEzV4xZ1cLXiaKicPKEsZCt4DrKzzjgF9rUJ0UdA/640">\n\n圆形环绕\nclip-path: circle(40%);shape-outside: circle(40%);\n椭圆环绕\nclip-path: ellipse(130px 140px at 10% 20%);shape-outside: ellipse(130px 140px at 20% 20%);\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRaxJMAJPr15SYSZ3sLbiaF75GBJTaIwTvfibjuZDaXiabYnufCGy121SjA/640">\n\n多变性环绕\nclip-path: polygon(50% 0, 100% 50%, 50% 100%, 0 50%);shape-outside: polygon(50% 0, 100% 50%, 50% 100%, 0 50%);\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRAbrMaDdQrrTXK4AIFdOnWF6k74Tpc6SEcKV9Vun5FMNJEX0NqubK0A/640">\n\n当然你不一定在圆形裁剪上，使用圆形环绕，你可以在圆形裁剪上使用多边形环绕，在多边形裁剪上，使用菱形环绕。\n总之这两个之间没关系，不是两两匹配的。\n都随你便，自己定义\n<h3>6、object-fit / object-position</h3>object-fit 属性指定可替换元素的内容应该如何适应到其使用的高度和宽度确定的框。\nobject-position 属性来指定被替换元素的内容对象在元素框内的对齐方式。\n\n注: 其中可替换元素有 iframe，video，embed，img，还有一些在特性情况也是可替换元素，option，audio，canvas，object\n例子前的准备\n&lt;div style="width: 300px; height: 300px; background-color:gray;">    &lt;img class="clip-mode" style="height: 100%; width: 100%;" src="https://interactive-examples.mdn.mozilla.net/media/examples/plumeria.jpg">&lt;/div>\n图片一定能要设置为宽高 100%，即不能超过父容器，才可以设置 object-fit，否则没意义。\n\nfill 填满 图片会拉变形，宽度和高度都被拉到父容器的 100%，以适应父容器\nobject-fit: fill;\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRrdhFBB2ZVP3RguAvp0sNZsC3SibpV1jhRPd7WGjrGtaxiawqJrwHQ75g/640">\n\ncontain 包容 图片不会变形，图片会按照自身比例进行缩放，整个图片放入父容器中，较短的边会出现自动填充的空白。\n\nobject-fit: contain;\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRElHh05BEdRYE5IJ4ib3ymw4BC5nWSxoPQny2b8qZXiaahD8BBzR2VUSA/640">\n\ncover 覆盖 图片不会变形，图片会按照自身比例进行缩放，整个图片放入父容器中，按照图片最短的边，纳入父容器为基准。\n较长的边会溢出\nobject-fit: cover;\nnone 和父容器的宽高没关系。\n展示其图片最原始的宽高比，以自身图片的“中心”为基点，放置到父容器的“中心”位置。\n\nobject-fit: none;\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRJuZmRdEhUiaTlG3NaYlYuDZXrtAZJKdRzceqsr0UIjAu3UeQ5RicAtIw/640">\n\nscale-down 内容的尺寸与 none 或 contain 中的一个相同，取决于它们两个之间谁得到的对象尺寸会更小一些。\n\nobject-fit: scale-down;\n如果图片比父容器尺寸大，那么按照 contain 的效果，如果图片比父容器小，那么按照 none 的效果。\n\n在上面 object-fit 的展示中，我们发现可替换元素的对齐方式都是自动的。\n\n比如 object-fit: fill; 的左上角和父容器的左上角对齐。\n\nobject-fit: none;的中心和父容器的中心对齐等等。\n\n但是我们想手动更改对齐方式呢？？\n可以使用 object-position 属性， 规定了可替换元素的内容，在其内容框中的位置。\n\nobject-position: 10px 10px; 可以设置 px，第一个值代表距离父容器左边的距离，第二个值代表距离父容器顶部的距离。\n只有一个数值则只代表距离父容器左侧的距离。\n也可以设置%数值，但此时只有某一边有空白才会起作用，如果没有空白，刚好铺满父元素，则不起作用。\n设置 px 就没有这样的问题，任何之后都会起作用。\nobject-position: right top;可以设置关键字，第一个值关键字可设置（left|center|right），第二个关键字可设置(top|center|bottom),此时不表示距离左侧或者顶部的距离，而表示放置在父元素的什么位置。\n\nobject-fit: fill;object-position: 50px 50px;   //距离左侧10px，距离顶部10%\n加 object-position 前后对比图:<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRgAQwGrckZMSglX4TsGr0shK7ay8Ky8xK8syVcZURqZap28U1bNwicjA/640">\n\nobject-fit: contain;object-position: right top;  //停留子 右上方\n加 object-position 前后对比图:<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRBgNBcZfU3FUqrVop1XRXBKOvjQ0CIguaD3naw2WvfukwT47jgB0FqQ/640">\n\n<h3>7、font-stretch</h3>为字体定义一个正常或经过伸缩变形的字体外观，它仅仅意味着当有多种字体可供选择时，会为字体选择最适合的大小。\n\nnormal 默认字体semi-condensed, condensed, extra-condensed, ultra-condensed 小于默认字体\nsemi-expanded, expanded, extra-expanded, ultra-expanded 大于默认字体\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRIZQDV6eia7RLcEibvic5GqQcFUn9mqNP4S6Y9a9wLrIjeDFvhP4C7rvOQ/640">\n\n<h3>8、font-variant-caps</h3>可以控制大写字母特殊字符的使用。\n\nnormal 关闭一切特殊字符变体的使用。\n\nsmall-caps 允许小型大写字母的使用（OpenType 特性：smcp）。\n小型大写字母指使用大写形式，但尺寸与对应小写字母相同的字母。\n\nall-small-caps 将大小写字母全部转化为小型大写字母。\n（OpenType 特性: c2sc, smcp）。\n\npetite-caps 允许特小型大写字母的使用（OpenType 特性: pcap）。\n\nall-petite-caps 将大小写字母全部转化为小型大写字母。\n（OpenType 特性: c2pc, pcap）。\n\nunicase 允许将大写字母转化为小型大写字母与普通小写字母的混用 （OpenType 特性: unic）。\n\ntitling-caps 允许首字母大写（OpenType 特性: titl）。\n大写字母变体字符通常被设计成与用于小写字母。\n在标题序列中，如果均使用大写字母，可能会带来过于强烈的视觉效果。\n首字母大写即用来应对这种情况。\n\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRCkUGlKPsicKF4fTH7oQzH9eLwHMYw2YhzdxKSEfq6P5IkTtaGEykIqg/640">\n\n<h3>9、font-variant-east-asian</h3>控制对东亚字符(如日语和汉语,韩语等)使用替代符号。\n\n值有一下几种:normal; ruby; jis78; jis83; jis90; jis04; simplified; traditional; full-width; proportional-width<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRKw81Jxzpz1AHeeQ51QGu0wjfNNibfsTInu7B9PeJP1COWmGLNjtkFKg/640">\n\n<h3>10、max-content / min-content / fill-available / fit-content</h3>这几个值都可用在 width, height, min-width, min-height, max-width 和 max-height 属性上。\n\ndisplay 必须为 inline-block 或者 block，否则上面的值不起作用。\n\n<h5>fill-available</h5>元素撑满可用空间。\n参考的基准为父元素有多宽多高。\n\n类似子元素的 div 撑满父元素的宽，fill-available 不仅可以撑满宽还能撑满高。\n\n例子前的代码\n&lt;div style="width: 300px; height: 100px; background-color:gray;">  &lt;span style="display:inline-block;background-color: burlywood;"    >这是子元素的内容&lt;/span  >&lt;/div>\n给 span 上设置 fill-available 时的不同表现<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRqDNOJa8tIbIkiavkSFU3PahLPLOn659a9MfCwXWLH5lfxaaWeu7zcbA/640">\n\n假如里面的有个元素，是 img 呢？它也是 inline-block，应该也满足情况。\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRnIszUEMpJGeqZOJOAzicdAtlLpxR4w2Xsb6nqxFs12xRcD5q4B6XB7w/640">\n我们可以看到 img 和 span 的不同在于，设置 width 或者 height 其中一个时，整个 image 会按照自身比例缩放。\n\n<h5>max-content</h5>它的宽度或者高度，会自动调整为，刚刚好容纳下子元素中那个长度最长(按照文字不换行时计算)的元素即可。\n参考的基准为子元素有多宽多高。\n\n&lt;div class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRz3SlNib325a4aI4bJZbhEibiahTqwLpQgTAKdemFicyvNnlbJGicAmBeZfw/640">\n\n<h5>min-content</h5>它的宽度或者高度，会自动调整为，刚刚好容纳下子元素中那个“最小宽度值”最大的元素即可，剩余超长的要么换行，要么溢出参考的基准为子元素“最小宽度值”有多宽多高。\n\n什么是“最小宽度值”？比如图片，最小宽度值，就是图片原始的宽高；如果是一串中文，则最小宽度值为单个汉字的宽高；如果是一串英文，则最小宽度值为里面单词最长的那个。\n\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRh7YuOjgJgd34o7tbP4tZJS3ibiaibI2rQibFmCbSqCmJCCswfEm2llJ8eg/640">\n\n<h5>fit-content</h5>表示元素自动伸缩到内容的宽度，和 max-content 的区别为，都是刚刚好容纳下子元素中那个长度最长的元素即可。\n\n不同的是 max-content 在计算时按照文字不换行时计算，如果超过父元素，则不换行，直接产生滚动条；而 fit-content 在超过父元素后，换行，不产生滚动条。\n\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRiaIy3zlk76DS4oicclo8F5IYHsImsWYqHBBGL6mDEVDL7snrE8kvF0fw/640">\n\n<h3>11、fit-content()</h3>这个不同于上面的 fit-content 值，它是函数，用在 grid 布局当中。\n\n(略)\n具体查看 grid 布局。\n\n<h3>12、resize</h3>比较简单，可以查看\n官方文档\n<h3>13、scroll-behavior</h3>当用户通过 API 触发滚动操作时，CSS 属性 scroll-behavior 为一个滚动框指定滚动行为， 平滑到达还是立即到达\n可以查看官方文档\n<h3>14、max() / min()</h3>max 在两者这件取最大；min 函数在两者之间取最小。\n\nmax，min 可以用在任何可以设置 &lt;length>, &lt;frequency>, &lt;angle>, &lt;time>, &lt;percentage>, &lt;number>, or &lt;integer> 等值的地方\nwidth: max(50vw, 300px);width: min(50vw, 300px);\n<h3>15、clamp()</h3>clamp 函数会在定义的 三个值之间，取中间的那个值，是大小在中间，不是位置在中间，\nclamp(MIN, VAL, MAX)和 max，min 函数一样，可以用在任何可以设置 &lt;length>, &lt;frequency>, &lt;angle>, &lt;time>, &lt;percentage>, &lt;number>, or &lt;integer> 等值的地方\nfont-size: clamp(1px, 3px, 2px);    //中间值为2pxfont-size: clamp(1px, 3px, 5px);    //中间值为3pxfont-size: clamp(4px, 3px, 5px);    //中间值为4px\nwidth: clamp(200rem, 25vw, 150px); //在这三个之间取中间值\n<h3>16、conic-gradient()</h3>在渐变中我们知道，有:\n线性渐变,linear-gradient，从一个方向，沿着另一个方向，颜色线性过渡。\n\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRqKcZulTYWxhrqpx6icURfpECFNVI6IyYOiaibGUL6CG0OgqAxhCDrBFcw/640">\n\n径向基渐变，radial-gradient，从某一个点，沿圆环向外慢慢辐射。\n\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_jpg/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWR14M9HVzB7icqgY8R18oiaU6qLOlV0b0HqcmDcz5FKNib1iaypR3nrtXW1g/640">\n\n除此之外，还有一种渐变，叫"锥形渐变"。\n它是围绕中心点按照扇形方向进行旋转的渐变(而不是从中心点辐射)\n这是锥形和径向渐变的区别图<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRmPmmagE2aicMXjbRLoXRRQJe5I2076lgAwgmokshFmnPGZ0BfE4qh2w/640">\n\nbackground: conic-gradient(red, orange, black, green, blue);\n默认从时钟 12 点，按照顺时针旋转\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWREID15EZsjZBoPybBJiaMWwuLMClX6zmAichjXYcNf2nM5fwH4NILHsKw/640">\n\n<h3>18、:out-of-range / :in-range</h3>比较简单，可以查看官方文档\n:out-of-range\n:in-range\n<h3>19、writing-mode</h3>定义了文本水平或垂直排布以及在块级元素中文本的书写方向\nhorizontal-tb 表示水平书写，从上(top)到下(bottom)书写vertical-rl 表示垂直书写，从右(right)向左(left)(古人书法就这么写的)\nvertical-lr 表示垂直书写，从左向右\n注意没有 horizontal-bt,不要杜撰\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRt4zrfjgAbp869cNTnWqscicziaTUbw0J980ncWyX1pFciayDtnlCFZgIA/640">\n\n<h3>20、inline-size</h3>和元素的 width，height 效果一样，都会改变盒子的大小。\n但是会覆盖 width，height 值。\n\n不同在于，width 是绝对的水平方向，height 是绝对的竖直方向；\n而 inline-size 是相对的水平方向，可通过 writing-mode 模式，改变方向\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/vO7l6lQ0BwqOLUOq8JRDHR2KYS8HjxWRbQwVqs0iaC9lSLHLtV4FsicjAkYkRnKgnNZtIY5d3TgdiahogbkkF7zYQ/640">\n\n<h3>21、block-size</h3>类似于 inline-size，只不过和 inline-size 刚好相反，block-size 默认设置的是 height 方向的值。\n\n',
'<h2>CSS 选择器</h2>\n前言\nCSS 选择器是 CSS 世界中非常重要的一环。\n\n在 CSS 2 之后，所有的 CSS 属性都是按模块去维护的。\n\nCSS 选择器也是如此，然而如今也已经发布了第四版 —— CSS Selectors Level 4 ，这一版最早的草案发布于2011年09月29日，最后更新是2018年11月21日。\n\n下面让我们一起来看看 Level 4 新推出的一些选择器。\n\n<h3><span class="orange">正文</span></h3>下面我们按照类型来划分\n<h3>逻辑组合（Logical Combinations）</h3>在这个分类下，我们有以下四个选择器：\n<h4>:not()</h4>其实 :not() 不算是新标签，不过在 Level 4 里，增加了多选的功能，代码如下：\n/* 除了.left, .right, .top之外所以的div的盒子模型都会变成flex*/div:not(.left, .right, .top) {  display: flex;}/* 等价于 */div:not(.left), div:not(.right), div:not(.top) {  display: flex;}\n兼容性如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQYrsYwmnyl0yy59NCTwpr10hd9TxqDubqyicnCbuJx2bEhHiabHPAwyK0w/640">\n\n还不能用\n<h4>:is()</h4>:is() 伪类将选择器列表作为参数，并选择该列表中任意一个选择器可以选择的元素。\n这对于以更紧凑的形式编写大型选择器非常有用。\n\n看个栗子：\n/* 选择header, main, footer里的任意一个悬浮状态的段落(p标签) */:is(header, main, footer) p:hover {  color: red;  cursor: pointer;}/* 等价于 */header p:hover,main p:hover,footer p:hover {  color: red;  cursor: pointer;}\n兼容如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQYSIibuYibFOFYTZ6DYKaybthvvPT3NhHddsr1vY376Lmz27ek0PAnvxBg/640">\n<h4>:where()</h4>:where() 伪类接受选择器列表作为它的参数，将会选择所有能被该选择器列表中任何一条规则选中的元素。\n\n其实就是跟 :is() ，唯一不同的就是 :where() 的优先级总是为 0 ，但是 :is() 的优先级是由它的选择器列表中优先级最高的选择器决定的。\n\n代码如下：\n&lt;style>\n    :is(section.is-styling, aside.is-styling, footer.is-styling) a {\n    color: red;}\n    :where(section.where-styling, aside.where-styling, footer.where-styling) a {\n    color: orange;}\n    footer a {\n    color: blue;}&lt;/style>&lt;article>\n    &lt;h2>:is()-styled links&lt;/h2>\n    &lt;section class="is-styling">\n    &lt;p>Here is my main content. This &lt;a href="https://mozilla.org">contains a link&lt;/a>.\n    &lt;/section>\n    &lt;aside class="is-styling">\n    &lt;p>Here is my aside content. This &lt;a href="https://developer.mozilla.org">also contains a link&lt;/a>.\n    &lt;/aside>\n    &lt;footer class="is-styling">\n    &lt;p>This is my footer, also containing &lt;a href="https://github.com/mdn">a link&lt;/a>.\n    &lt;/footer>&lt;/article>&lt;article>\n    &lt;h2>:where()-styled links&lt;/h2>\n    &lt;section class="where-styling">\n    &lt;p>Here is my main content. This &lt;a href="https://mozilla.org">contains a link&lt;/a>.\n    &lt;/section>\n    &lt;aside class="where-styling">\n    &lt;p>Here is my aside content. This &lt;a href="https://developer.mozilla.org">also contains a link&lt;/a>.\n    &lt;/aside>\n    &lt;footer class="where-styling">\n    &lt;p>This is my footer, also containing &lt;a href="https://github.com/mdn">a link&lt;/a>.\n    &lt;/footer>&lt;/article>\n:is() 跟 :where()  对比效果图如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQY9NPvTbiacKFjRbQlZTibNMZVEHcicT5lNTiaPF4keiao7vFuMFhhfmjYS7w/640">\n兼容性如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQYIUhZuV5FiaujTGhROZwSInCmeyJv0oMYos1LyiadPS1fb2tMHkFTq32Q/640">\n<h4>:has()</h4>:has() 伪类代表一个元素，其给定的选择器参数（相对于该元素的 :scope）至少匹配一个元素。\n\n:has() 接受一个选择器组作为参数。\n在当前规范中 :has() 并未列为实时选择器配置的一部分，意味着其不能用于样式表中。\n\n语法如下：\n// 下面的选择器只会匹配直接包含 &lt;img> 子元素的 &lt;a> 元素a:has(> img)// 下面的选择器只会匹配其后紧跟着 &lt;p> 元素的 &lt;h1> 元素：h1:has(+ p)\n兼容性如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQYW746Bnb0CwCQM3yrziaBDBLkG2xWlRAibyJrQsYylSahOgYy6h6fQRbA/640">\n嗯，全红。\n\n<h3>语言伪类（Linguistic Pseudo-classes）</h3><h4>:dir()</h4>:dir()伪类匹配特定文字书写方向的元素。\n在HTML中, 文字方向由dir属性决定。\n其他的文档类型可能有其他定义文字方向的方法。\n\n:dir() 并不等于使用 [dir=…] 属性选择器。\n后者匹配 dir 的值且不会匹配到未定义此属性的元素，即使该元素继承了父元素的属性；类似的， [dir=rtl] 或 [dir=ltr]不会匹配到dir属性的值为auto的元素。\n而 :dir()会匹配经过客户端计算后的属性, 不管是继承的dir值还是dir值为auto的。\n\n例子如下：\n&lt;style>\n    :dir(ltr) {\n    background-color: yellow;}\n    :dir(rtl) {\n    background-color: powderblue;}&lt;/style>&lt;div dir="rtl">\n      &lt;span>test1&lt;/span>\n      &lt;div dir="ltr">test2\n    &lt;div dir="auto">עִבְרִית&lt;/div>\n      &lt;/div>&lt;/div>\n效果如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQYR7oMHiboV2FKAG5bqtXNiaibxgFJFXVhYynno5NZ9r6PV3OBOy6JTAwmQ/640">\n兼容性如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQYfFay6Se2wr3yCTNQ01rpqZcgHuJybV6rraUwzG6tZHZ7sJrMbbkP3w/640">\n又是一片红。\n\n<h4>:lang()</h4>:lang()  伪类基于元素语言来匹配页面元素。\n\n例子如下：\n/* 下例表示选择文本语言带有-TN的div元素 (ar-TN, fr-TN). */div:lang(*-TN) {\n    background-color: green}\n浏览器支持状态：没有一个支持的。\n\n<h3>位置伪类（Location Pseudo-classes）</h3><h4>:any-link</h4>:any-link  伪类 选择器代表一个有链接锚点的元素，而不管它是否被访问过，也就是说，它会匹配每一个有 href 属性的 &lt;a>、&lt;area> 或 &lt;link>元素。\n因此，它会匹配到所有的 :link 或 :visited。\n\n例子如下：\n&lt;style>\n    a:any-link {\n    border: 1px solid blue;\n    color: orange;}\n    /* WebKit 内核浏览器 */\n    a:-webkit-any-link {\n    border: 1px solid blue;\n    color: orange;}&lt;/style>&lt;a href="https://example.com">External link&lt;/a>&lt;br>&lt;a href="#">Internal target link&lt;/a>&lt;br>&lt;a>Placeholder link (won\'t get styled)&lt;/a>\n效果如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQYsFnSgTjvWVuD5OKrJzrwOZSVib11riaBfTopsW5GpDa7S30MaNaGc2aA/640">\n兼容性如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQYxytgicWwEzSAVQic9jf7dEH747dgD4y7RTEODDoWojicryRXE0xvRwacA/640">\n<h4>:local-link</h4>:local-link伪类可以单独格式化本地链接（原文是local links）(内部链接)。\n\n例子如下：\na:local-link {   text-decoration: none;}\n效果 &amp; 兼容性\n没有一个浏览器是支持的，看不到效果\n<h4>:target-within</h4>:target-within伪类适用于:target所匹配的元素，以及它DOM节点内所有匹配的元素。\n\n例子如下：\ndiv:target-within {   border: 2px solid black;}\n效果 &amp; 兼容性\n没有一个浏览器是支持的，看不到效果\n<h4>:scope</h4>:scope伪类表示作为选择器要匹配的作用域的元素。\n不过目前它等效于  :root。\n\n因为尚未有浏览器支持CSS的局部作用域。\n\n例子如下：\n:scope {   background-color: lime;}\n兼容性如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQYmNicgsdJMXsQdrUY2tp15GpdovHRDLnhsOreEPOQNDPrHknAcicLtH4A/640">\n浏览器算法不支持，兼容有跟没没区别~\n<h3>用户行为伪类（User Action Pseudo-classes）</h3><h4>:focus-visible</h4>当元素匹配 :focus 伪类并且客户端(UA)的启发式引擎决定焦点应当可见(在这种情况下很多浏览器默认显示“焦点框”。\n)时，:focus-visible 伪类将生效。\n\n这个选择器可以有效地根据用户的输入方式(鼠标 vs 键盘)展示不同形式的焦点。\n\n例子如下：\n&lt;style>\n    input, button {\n    margin: 10px;}\n    .focus-only:focus {\n    outline: 2px solid black;\n      }\n    .focus-visible-only:focus-visible {\n    outline: 4px dashed darkorange;}&lt;/style>&lt;input value="Default styles">&lt;br>&lt;button>Default styles&lt;/button>&lt;br>&lt;input class="focus-only" value=":focus only">&lt;br>&lt;button class="focus-only">:focus only&lt;/button>&lt;br>&lt;input class="focus-visible-only" value=":focus-visible only">&lt;br>&lt;button class="focus-visible-only">:focus-visible only&lt;/button>\n效果如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_gif/y0rsINPrlZw118yaQkVS83P163P8SgQYicAu0f6MGgoqfaON81eW5IxtL6AW4zkprYh7MXmL6joPnU4wxtYTzyA/640">\n兼容性如下：\n目前只有Chrome 67+ 兼容...\n<h4>:focus-within</h4>:focus-within伪类适用于:focus所匹配的元素，以及它DOM节点内所有匹配的元素。\n\n例子如下：\n&lt;style>\n    form {\n    border: 1px solid;\n    color: gray;\n    padding: 4px;}\n    form:focus-within {\n    background: #ff8;\n    color: black;}\n    input {\n    margin: 4px;}&lt;/style>\n效果如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_gif/y0rsINPrlZw118yaQkVS83P163P8SgQYGIohuGaYy5v2TbwVW9FuCWm2oZqziafiacwDXqSpWquQdaCjW9fCbc2g/640">\n<h3>时间尺寸伪类（Time-dimensional Pseudo-classes）</h3><h4>:current  &amp;&amp; :past &amp;&amp; :future</h4>这个伪类选择器会选择HTML5中&lt;video>的语言渲染以及播放过程中的时间维度相对元素。\n所有相关的选择器都像:matches()。\n这几个伪类选择器的区别在于:past会选择:current所选的元素之前的所有节点。\n所以，:future就是指之后的所有节点了。\n\n例子如下：\n/* Current */:current(p, span) {   background-color: yellow;}/* Past */:past,/* Future */:future {   display: none;}\n兼容性如下：\n目前没有任何浏览器支持\n<h3>输入伪类（The Input Pseudo-classes）</h3><h4>:read-only 与 :read-write</h4>:read-only伪类选择器表示当前元素是用户不可修改的。\n\n:read-write伪类选择器表示当前元素是用户可修改的。\n这个伪类选择器可以使用在一个可输入的元素或 contenteditable  元素（HTML5 属性）。\n\n例子如下：\n&lt;style>\n    :read-only {\n      font-size: 20px;\n      color: green;}\n    :read-write {\n      border: 1px solid orange;\n      font-size: 18px;}&lt;/style>&lt;input type="text" placeholder=\'text here\'>&lt;input type="tel" placeholder=\'number here\'>&lt;select>\n      &lt;option>1&lt;/option>\n      &lt;option>2&lt;/option>&lt;/select>\n效果如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQYoIlQbY2x4JicrnfoVUYCIT0DtjBgSzshLkI7TCS0UqQM2ibW0icHf6VAg/640">\n兼容性如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQYEaPiayjaBNAa2nXqovuIxOeFTTF95VRhEPf4g2OoGcfL1q1UD6BbO2A/640">\n<h4>:placeholder-shown</h4>:placeholder-shown 伪类 在 &lt;input> 或 &lt;textarea> 元素显示 placeholder text 时生效。\n\n例子如下：\n&lt;style>\n    input {\n    border: 2px solid black;\n    padding: 3px;}\n    input:placeholder-shown {\n    border-color: silver;}&lt;/style>&lt;input placeholder="Type something here!">\n效果如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQYwMCykBA9teEyZfJic59Syhu96xGuIQDZdaoVv5PfmNLdrTbVc89iaFug/640">\n兼容性如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQYwpYicPSEG6XQ81lRr7ibRqCL0x8ic63jBNZN4ic4WDjJVa8rbWarN1GBKQ/640">\n<h4>:default</h4>:default 伪类选择器 表示一组相关元素中的默认表单元素。\n\n该选择器可以在 &lt;button>, &lt;input type="checkbox">, &lt;input type="radio">, 以及 &lt;option> 上使用。\n\n例子如下：\n&lt;style>\n    input:default {\n       box-shadow: 0 0 2px 1px coral;}\n    input:default + label {\n       color: coral;}&lt;/style>&lt;input type="radio" name="season" id="spring">&lt;label for="spring">Spring&lt;/label>&lt;input type="radio" name="season" id="summer" checked>&lt;label for="summer">Summer&lt;/label>&lt;input type="radio" name="season" id="fall">&lt;label for="fall">Fall&lt;/label>&lt;input type="radio" name="season" id="winter">&lt;label for="winter">Winter&lt;/label>\n效果如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQYNPCiayw5YIg7JdicD78ClLXwRrksVc119Z88xFUcBvkFf7JfTGZOPgMA/640">\n兼容性如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQYQy4ktFX8Nj0RfDb3lHEsZ5vjTLHFelOv88RQhGTyGvLdXmEHVVzXSw/640">\n<h4>:indeterminate</h4>:indeterminate  伪类选择器表示状态不确定的表单元素。\n\n它支持：\n&lt;input type="checkbox"> 元素，其 indeterminate 属性被JavaScript设置为 true 。\n&lt;input type="radio"> 元素, 表单中拥有相同 name值的所有单选按钮都未被选中时。\n处于不确定状态的 &lt;progress> 元素例子如下：\n&lt;style>\n    input, span {\n    background: red;}\n    :indeterminate, :indeterminate + label {\n    background: lime;}\n    progress {\n       margin: 4px;}\n    progress:indeterminate {\n      opacity: 0.5;\n      background-color: lightgray;\n      box-shadow: 0 0 2px 1px red;}&lt;/style>&lt;div>\n    &lt;input type="checkbox" id="checkbox">\n    &lt;label for="checkbox">Background should be green&lt;/label>&lt;/div>&lt;br />&lt;div>\n    &lt;input type="radio" id="radio">\n    &lt;label for="radio">Background should be green&lt;/label>&lt;/div>&lt;br />&lt;progress>&lt;/progress>&lt;script>\n    \'use strict\'\n    const inputs = document.querySelectorAll(\'input\')\n    inputs.forEach(input => {\n    input.indeterminate = true})&lt;/script>\n效果如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_gif/y0rsINPrlZw118yaQkVS83P163P8SgQYCLXMfSuO9F0XaGpr1eumXp2VNIa7MpNOYlM9UJiaHynBe76deO9hlEg/640">\n兼容性如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQYOVCJMRlM9oxO4gtQISd09tXRX3g3n4xEDEYJxgq7PY6kyicT5H8SVnQ/640">\n<h4>:valid 与 :invalid</h4>判断有效性的伪类选择器（:valid和:invalid）匹配有效或无效，&lt;input>或&lt;form>元素。\n\n:valid伪类选择器表示值通过验证的&lt;input>，这告诉用户他们的输入是有效的。\n\n:invalid伪类选择器表示值不通过通过验证的&lt;input>，这告诉用户他们的输入是无效的。\n\n例子如下：\n&lt;style>\n    input:valid {\n    outline: 1px solid green;}\n    input:invalid {\n    outline: 1px solid red;}&lt;/style>输入文字：&lt;input type="text" pattern="[\w]+" required />&lt;br />输入电话号码：&lt;input type="tel" pattern="[0-9]+" required />\n效果如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_gif/y0rsINPrlZw118yaQkVS83P163P8SgQYBFImb6b6KWEvKkL5Q5TKIicQ8QhpgtRZUAAkV5K9JbJ9xbHtMmQp5Uw/640">\n兼容性如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQY1qm4UncxXZlM6EAjiaibaBcCDJoev5ibwWo2yglbLa5ibiaOkBCoLnM5IOg/640">\n<h4>:in-range 与 :out-of-range</h4>如果一个时间或数字&lt;input>具有max或min属性，那么:in-range会匹配到输入值在指定范围内的&lt;input>，:out-of-input则匹配输入值不在指定范围的&lt;input>。\n如果没有规定范围，则都不匹配。\n\n例子如下：\n&lt;style>\n    li {\n    list-style: none;\n    margin-bottom: 1em;}\n    input {\n    border: 1px solid black;}\n    input:in-range {\n    background-color: rgba(0, 255, 0, 0.25);}\n    input:out-of-range {\n    background-color: rgba(255, 0, 0, 0.25);\n    border: 2px solid red;}\n    input:in-range + label::after {\n    content: \'okay.\';}\n    input:out-of-range + label::after {\n    content: \'out of range!\';}&lt;/style>&lt;form action="" id="form1">\n    &lt;ul>Values between 1 and 10 are valid.\n    &lt;li>\n    \n    &lt;input id="value1" name="value1" type="number" placeholder="1 to 10" min="1" max="10" value="12">\n    \n    &lt;label for="value1">Your value is &lt;/label>\n    &lt;/li>\n    &lt;/ul>&lt;/form>\n效果如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_gif/y0rsINPrlZw118yaQkVS83P163P8SgQY56h4P8VMwLVl0ydSm7FeRCRZfEUlJf6PtAaefwvk9GQEhvmxHfsIxQ/640">\n兼容性如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQYdKKDyNKZj4vlFajC1e1bU2bYlUaJY94lHwVOyK1wNVYWV75g5NTribw/640">\n<h4>:required 与 :optional</h4>伪类选择器:required和:optional匹配了&lt;input>，&lt;select>, 或 &lt;textarea>元素。\n\n:required表示“必填”\n:optional表示“可选”\n例子如下：\n&lt;style>\n    input:required {\n    border: 1px solid orange;}\n    input:optional {\n    border: 1px solid green;}&lt;/style>必填的：&lt;input type="text" required>&lt;br />可选的：&lt;input type="text">\n效果如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQYHkDJwDg4AcWROJSwgWfcohDr4YBosWSia15QznEibibibXRHFfOfAPnmdQ/640">\n兼容性如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQYeWOAScyGyc2ea0YaJtSwORdgicRFEEfoC1fUg0picYXMh7YZcN5wjO7A/640">\n:required 的兼容性在上面有。\n\n<h4>:blank</h4>:blank 伪类选择器 用于匹配如下节点：\n<ol>没有子节点;仅有空的文本节点;仅有空白符的文本节点。\n</ol>有点类似于:empty，但是比:empty宽松，目前还是没有任何一款浏览器支持。\n\n<h4>:user-invalid</h4>:user-invalid伪类选择器匹配输入错误的元素。\n不过跟其它的输入伪类不同的是，它仅匹配用户输入时的错误，而不是静默状态下的错误，这样就会比较人性化，可惜，目前还是没有任何一款浏览器支持。\n\n<h3>树型伪类（Tree-Structural pseudo-classes）</h3><h4>:nth-child 与 :nth-last-child</h4>:nth-child 与 :nth-last-child并不是 Level 4 才推出的伪类选择器，但是在 Level 4 里 新增了在元素组里匹配的功能。\n\n语法如下：:nth-child/nth-last-child(An + B [of S] ?)\n例子如下：\n:nth-child(-n+3 of li.important)\n上面的例子通过传递选择器参数，选择与之匹配的第n个元素，这里表示li.important中前三个子元素。\n\n它跟以下规则不同：\nli.important:nth-child(-n+3)\n这里表示的时候如意前三个子元素刚才是li.important时才能被选择得到。\n\n兼容性如下：\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/y0rsINPrlZw118yaQkVS83P163P8SgQYD7wJhpjCsvO3T3BlQcicEEicdf70QKuWQJicgoVR8efwYZosOWmGmOL9Q/640">\n（鱼头注：牛皮，Safari居然弯道超车了，不过别的浏览器不支持，也没啥用...）\n<h3>网格选择器（Grid-Structural Selectors）</h3><h4>||</h4>|| 组合器选择属于某个表格行的节点。\n\n例子如下：\n&lt;style>\n    col.selected || td {\n      background: gray;\n      color: white;\n      font-weight: bold;}&lt;/style>&lt;table border="1">\n      &lt;colgroup>\n    \n    &lt;col span="2"/>\n    \n    &lt;col class="selected"/>\n      &lt;/colgroup>\n      &lt;tbody>\n    \n    &lt;tr>\n    \n      &lt;td>A\n    \n      &lt;td>B\n    \n      &lt;td>C\n    \n    &lt;/tr>\n    \n    &lt;tr>\n    \n      &lt;td colspan="2">D&lt;/td>\n    \n      &lt;td>E&lt;/td>\n    \n    &lt;/tr>\n    \n    &lt;tr>\n    \n      &lt;td>F&lt;/td>\n    \n      &lt;td colspan="2">G&lt;/td>\n    \n    &lt;/tr>\n      &lt;/tbody>&lt;/table>\n上面的例子可以使C，E 与 G单元格变灰。\n\n很可惜，目前还是没有任何浏览器给予支持。\n\n<h4>:nth-col() 与 :nth-last-col()</h4>伪类选择器:nth-col() 与 :nth-last-col()表示选择正向或反向的表格行的节点。\n\n语法和:nth-child 与 :nth-last-child类似，只不过它是选择表格内的元素。\n\n目前还是没有任何浏览器支持。\n\n<h3><span class="orange">最后</span></h3><h3>总结</h3>以上便是CSS选择器 Level 4 里新出的所有选择器，其实都是非常有用的，虽然有些选择器的浏览器支持度并不乐观的。\n\n',
'<h2>妙用 CSS变量</h2>\nCSS Variables\nThe var() Function\nVariables in CSS should be declared within a CSS selector that defines its scope.\nFor a global scope you can use either the :root or the body selector.\n\nThe variable name must begin with two dashes (--) and is case sensitive!\n\nThe syntax of the var() function is as follows:\nvar(custom-name, value)\n\ncustom-name	Required. The custom property\'s name (must start with two dashes)\nvalue	Optional. The fallback value (used if the custom property is invalid)\n\n\n:root {\n  --blue: #1e90ff;\n  --white: #ffffff;\n}\n\nbody { background-color: var(--blue); }\nh2 { border-bottom: 2px solid var(--blue); }\n\n.container { color: var(--blue); background-color: var(--white);\n  padding: 15px;\n}\n\nbutton {\n  background-color: var(--white); color: var(--blue);\n  border: 1px solid var(--blue); padding: 5px;\n}\n\nThe following example first defines a global custom property named "--main-bg-color", then it uses the var() function to insert the value of the custom property later in the style sheet:\n\nExample\n:root { --main-bg-color: coral;}\n#div1 { background-color: var(--main-bg-color);}\n#div2 { background-color: var(--main-bg-color);}\n\nValues in JavaScript\nTo use the values of custom properties in JavaScript, it is just like standard properties.\n\n// get variable from inline style\nelement.style.getPropertyValue("--my-var");\n\n// get variable from wherever\ngetComputedStyle(element).getPropertyValue("--my-var");\n\n// set variable on inline style\nelement.style.setProperty("--my-var", jsVar + 4);\n\n「CSS变量」又叫「CSS自定义属性」，为什么会突然提起这个很少人用到的东西呢？\n因为最近在重构个人官网，不知道为什么突然喜欢用上「CSS变量」，可能其自身隐藏的魅力，让笔者对它刮目相看。\n\n谈到为什么会在CSS中使用变量，下面举个栗子，估计大家一看就会明白。\n\n<code>/* 不使用CSS变量 */\n.title { background-color: red;}\n.desc { background-color: red;}\n\n/* 使用CSS变量 */\n:root { --bg-color: red;}\n.title { background-color: var(--bg-color);}\n.desc { background-color: var(--bg-color);}\n</code>\n看完可能会觉得使用「CSS变量」的代码量多了一点，但是有没有想到突然某天万恶的策划小哥哥和设计小姐姐说要做一个换肤功能。\n按照平常的思路，估计有些同学就会按照<code>默认颜色主题</code>增加一份对照的<code>新颜色主题</code>CSS文件。\n这样每次新增需求都同时维护几套主题颜色多麻烦啊。\n\n此时「CSS变量」就派上用场了，提前跟设计小姐姐规范好各种需要变换的颜色并通过「CSS变量」进行定义，通过JS批量操作这些定义好的「CSS变量」即可。\n这也是「变换主题颜色」的一种解决方案之一，好处在于只需写一套CSS代码。\n\n<code>["red", "blue", "green"].forEach(v => {\n  const btn = document.getElementById(`${v}-theme-btn`);\n  btn.addEventListener(\n   "click", () => document.body.style.setProperty("--bg-color", v));\n});\n</code>\n在此总结下CSS使用变量的好处：\n\n减少样式代码的重复性\n增加样式代码的扩展性\n提高样式代码的灵活性\n增多一种CSS与JS的通讯方式\n不用深层遍历DOM改变某个样式\n可能有些同学会问，Sass和Less早就实现了变量这个特性，何必再多此一举呢。\n可是细想一下，「CSS变量」对比Sass和Less的变量，又有它的过人之处。\n\n浏览器原生特性，无需经过任何转译就可直接运行\nDOM对象一员，极大便利了CSS与JS之间的联系\n<h3>认识</h3>本来打算用一半篇幅讲述「CSS变量」的规范和用法，但是网上一搜一大把就感觉没必要了，贴上阮一峰老师写的教程《CSS变量教程》。\n同时笔者也对「CSS变量」的细节地方进行一个整理，方便大家记忆。\n\n声明：<code>--变量名</code>\n读取：<code>var(--变量名, 默认值)</code>\n类型\n普通：只能用作<code>属性值</code>不能用作<code>属性名</code>\n字符：与字符串拼接 <code>"Hello, "var(--name)</code>\n数值：使用<code>calc()</code>与数值单位连用 <code>var(--width) * 10px</code>\n\n作用域\n范围：在<code>当前元素块作用域</code>及其<code>子元素块作用域</code>下有效\n优先级别：<code>内联样式 > ID选择器 > 类选择器 = 属性选择器 = 伪类选择器 > 标签选择器 = 伪元素选择器</code>\n\n接下来使用几个特别的场景展示「CSS变量」的魅力。\n还是那句话，「一样东西有使用的场景，那自然就会有它的价值」，那么用的人也会越来越多。\n\n<h3>使用场景</h3>其实「CSS变量」有一个特别好用的场景，那就是结合List元素集合使用。\n如果不明白这是什么，请继续往下看。\n\n<code>以下所有演示代码基于Vue文件，但HTML、CSS和JS分开书写，为了简化CSS的书写而使用Sass进行预处理，方便代码演示\n</code>\n<h5>条形加载条</h5>一个条形加载条通常由几条线条组成，并且每条线条对应一个存在不同时延的相同动画，通过时间差运行相同的动画，从而产生加载效果。\n估计大部分的同学可能会把CSS代码写成以下这样。\n\n<code>&lt;ul class="strip-loading flex-ct-x"> &lt;li v-for="v in 6" :key="v">&lt;/li>\n&lt;/ul>\n</code>\n<code>.loading { width: 200px; height: 200px;\n li {\n     border-radius: 3px; width: 6px;\n     height: 30px; background-color: #f66;\n     animation: beat 1s ease-in-out infinite;\n     &amp; + li { margin-left: 5px;}\n     &amp;:nth-child(2) { animation-delay: 200ms;}\n     &amp;:nth-child(3) { animation-delay: 400ms;}\n     &amp;:nth-child(4) { animation-delay: 600ms;}\n     &amp;:nth-child(5) { animation-delay: 800ms;}\n     &amp;:nth-child(6) { animation-delay: 1s;} }}\n</code>\n分析代码发现，每个<code>&lt;li></code>只是存在<code>animation-delay</code>不同，而其余代码则完全相同，换成其他类似的List元素集合场景，那岂不是有10个<code>&lt;li></code>就写10个<code>:nth-child</code>。\n\n显然这种方法不灵活也不容易封装成组件，如果能像JS那样封装成一个函数，并根据参数输出不同的样式效果，那就更棒了。\n说到这里，很明显就是为了铺垫「CSS变量」的开发技巧了。\n\n对于HTML部分的修改，让每个<code>&lt;li></code>拥有一个自己作用域下的「CSS变量」。\n对于CSS部分的修改，就需要分析哪些属性是随着<code>index</code>递增而发生规律变化的，对规律变化的部分使用「CSS变量」表达式代替即可。\n\n<code>&lt;ul class="strip-loading flex-ct-x"> &lt;li v-for="v in 6" :key="v" :style="`--line-index: ${v}`">&lt;/li>\n&lt;/ul>\n</code>\n<code>.strip-loading { width: 200px; height: 200px; li {\n     --time: calc((var(--line-index) - 1) * 200ms);\n     border-radius: 3px;\n     width: 6px;\n     height: 30px;\n     background-color: #f66;\n     animation: beat 1.5s ease-in-out var(--time) infinite;\n     &amp; + li { margin-left: 5px; }\n }}\n</code>\n<code>源码链接可在文章结尾处获取\n</code>\n代码中的变量<code>--line-index</code>和<code>--time</code>使每个<code>&lt;li></code>拥有一个属于自己的作用域。\n例如第2个<code>&lt;li></code>，<code>--line-index</code>的值为2，<code>--time</code>的计算值为<code>200ms</code>，换成第3个<code>&lt;li></code>后这两个值又会不同了。\n\n这就是「CSS变量」的作用范围所致(<code>在当前元素块作用域及其子元素块作用域下有效</code>)，因此在<code>.strip-loading</code>的块作用域下调用<code>--line-index</code>是无效的。\n\n<code>/* flex属性无效 */\n.loading { display: flex; align-items: center; flex: var(--line-index);}\n</code>\n通过妙用「CSS变量」，也把CSS代码从<code>29行</code>缩减到<code>15行</code>，对于那些含有List元素集合越多的场景，效果就更明显。\n而且这样写也更加美观更加容易维护，某天说加载效果的时间差不明显，直接将<code>calc((var(--line-index) - 1) * 200ms)</code>里的<code>200ms</code>调整成<code>400ms</code>即可。\n就无需对每个<code>:nth-child(n)</code>进行修改了。\n\n<h5>心形加载条</h5>前段时间刷掘金看到<code>陈大鱼头兄</code>的心形加载条，觉得挺漂亮的，很带感觉。\n\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_gif/v735W8ZTLWkdq6dsibyI1ianFE0iaCVmiaIicMq7LKu9CoibDTWicG2qg6cTJCxvlVRqouhx5nb6AZcD8xhBxiaIyxytnQ/640">\n通过动图分析，发现每条线条的背景色和动画时延不一致，另外动画运行时的高度也不一致。\n细心的你可能还会发现，第1条和第9条的高度一致，第2条和第8条的高度一致，依次类推，得到<code>高度变换相同类</code>的公式：<code>对称index = 总数 + 1 - index</code>。\n\n背景色使用了滤镜的色相旋转<code>hue-rotate</code>函数，目的是为了使颜色过渡得更加自然；动画时延的设置和上面<code>条形加载条</code>的设置一致。\n下面就用「CSS变量」根据看到的动图实现一番。\n\n<code>&lt;div class="heart-loading flex-ct-x"> &lt;ul style="--line-count: 9">\n     &lt;li v-for="v in 9" :key="v" :class="`line-${v}`" :style="`--line-index: ${v}`">&lt;/li> &lt;/ul>\n&lt;/div>\n</code>\n<code>.heart-loading { width: 200px; height: 200px; ul {\n     display: flex;\n     justify-content: space-between;\n     width: 150px;\n     height: 10px; } li {\n     --Θ: calc(var(--line-index) / var(--line-count) * .5turn);\n     --time: calc((var(--line-index) - 1) * 40ms);\n     border-radius: 5px;\n     width: 10px;\n     height: 10px;\n     background-color: #3c9;\n     filter: hue-rotate(var(--Θ));\n     animation-duration: 1s;\n     animation-delay: var(--time);\n     animation-iteration-count: infinite; } .line-1, .line-9 {\n     animation-name: line-move-1; } .line-2, .line-8 {\n     animation-name: line-move-2; } .line-3, .line-7 {\n     animation-name: line-move-3; } .line-4, .line-6 {\n     animation-name: line-move-4; } .line-5 {\n     animation-name: line-move-5; }}\n</code>\n<code>源码链接可在文章结尾处获取\n</code>\n一波操作后就有了下面的效果。\n和<code>陈大鱼头兄</code>的心形加载条对比一下，颜色、波动曲线和跳动频率有点不一样，在暖色调的蔓延和肾上腺素的飙升下，这是一种心动的感觉。\n想起自己曾经写的一首诗：<code>我见犹怜，爱不释手，雅俗共赏，君子好逑</code>。\n\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_gif/v735W8ZTLWkdq6dsibyI1ianFE0iaCVmiaIic8uyyVw7xeERWCZI60ytkOnPibqUohqhRf7P8VA4Ztq8xiaKPHCSvXUeA/640">\n<h5>标签导航栏</h5>上面通过两个加载条演示了「CSS变量」在CSS中的运用以及一些妙用技巧，现在通过标签导航栏演示「CSS变量」在JS中的运用。\n\nJS中主要有3个操作「CSS变量」的API，看上去简单易记，分别如下：\n\n读取变量：<code>elem.style.getPropertyValue()</code>\n设置变量：<code>elem.style.setProperty()</code>\n删除变量：<code>elem.style.removeProperty()</code>\n先上效果图，效果中主要是使用「CSS变量」标记每个Tab的背景色和切换Tab的显示状态。\n\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_gif/v735W8ZTLWkdq6dsibyI1ianFE0iaCVmiaIiccC3Vyzr84zffgMicKrpMh1zwmKddP5cWKpJjPFn72bc52rVUrTwOiaIw/640">\n<code>&lt;div class="tab-navbar"> &lt;nav>\n     &lt;a v-for="(v, i) in list" :key="v" :class="{ active: index === i }" @click="select(i)">标题{{i + 1}}&lt;/a> &lt;/nav> &lt;div>\n     &lt;ul ref="tabs" :style="`--tab-count: ${list.length}`">\n         &lt;li v-for="(v, i) in list" :key="v" :style="`--bg-color: ${v}`">内容{{i + 1}}&lt;/li>\n     &lt;/ul> &lt;/div>\n&lt;/div>\n</code>\n<code>.tab-navbar { display: flex; overflow: hidden; flex-direction: column-reverse; border-radius: 10px; width: 300px; height: 400px; nav {\n     display: flex;\n     height: 40px;\n     background-color: #f0f0f0;\n     line-height: 40px;\n     text-align: center;\n     a {\n         flex: 1;\n         cursor: pointer;\n         transition: all 300ms;\n         &amp;.active {\n        background-color: #66f;\n        font-weight: bold;\n        color: #fff;\n         }\n     } } div {\n     flex: 1;\n     ul {\n         --tab-index: 0;\n         --tab-width: calc(var(--tab-count) * 100%);\n         --tab-move: calc(var(--tab-index) / var(--tab-count) * -100%);\n         display: flex;\n         flex-wrap: nowrap;\n         width: var(--tab-width);\n         height: 100%;\n         transform: translate3d(var(--tab-move), 0, 0);\n         transition: all 300ms;\n     }\n     li {\n         display: flex;\n         justify-content: center;\n         align-items: center;\n         flex: 1;\n         background-color: var(--bg-color);\n         font-weight: bold;\n         font-size: 20px;\n         color: #fff;\n     } }}\n</code>\n<code>exportdefault { data() {\n     return {\n         index: 0,\n         list: ["#f66", "#09f", "#3c9"]\n     }; }, methods: {\n     select(i) {\n         this.index = i;\n         this.$refs.tabs.style.setProperty("--tab-index", i);\n     } }};\n</code>\n<code>源码链接可在文章结尾处获取\n</code>\n在<code>&lt;ul></code>上定义<code>--tab-index</code>表示Tab当前的索引，当点击按钮时重置<code>--tab-index</code>的值，就可实现不操作DOM来移动<code>&lt;ul></code>的位置显示指定的Tab。\n不操作DOM而可移动<code>&lt;ul></code>是因为定义了<code>--tab-move</code>，通过<code>calc()</code>计算<code>--tab-index</code>与<code>--tab-move</code>的关系，从而操控<code>transform: translate3d()</code>来移动<code>&lt;ul></code>。\n\n另外在<code>&lt;li></code>上定义<code>--bg-color</code>表示Tab的背景色，也是一种比较简洁的模板赋值方式，总比写<code>&lt;li :style="backgroundColor: ${color}"></code>要好看。\n如果多个CSS属性依赖一个变量赋值，那么使用「CSS变量」赋值到style上就更方便了，那些CSS属性可在CSS文件里进行计算与赋值，这样可帮助JS分担一些属性计算工作。\n\n当然，这个标签导航栏也可通过纯CSS实现，有兴趣的同学可看看笔者之前一篇文章里的纯CSS标签导航栏。\n\n<h5>悬浮跟踪按钮</h5>通过几个栗子实践了「CSS变量」在CSS和JS上的运用，相信大家已经掌握了其用法和技巧。\n之前在某个网站看过一个比较酷炫的鼠标悬浮特效，好像也是使用「CSS变量」实现的。\n笔者凭着记忆也使用「CSS变量」实现一番。\n\n其实思路也比较简单，先对按钮进行布局和着色，然后使用伪元素标记鼠标的位置，定义<code>--x</code>和<code>--y</code>表示伪元素在按钮里的坐标，通过JS获取鼠标在按钮上的<code>offsetLeft</code>和<code>offsetLeft</code>分别赋值给<code>--x</code>和<code>--y</code>，再对伪元素添加径向渐变的背景色，大功告成，一个酷炫的鼠标悬浮跟踪特效就这样诞生了。\n\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_gif/v735W8ZTLWkdq6dsibyI1ianFE0iaCVmiaIic8N0Kmj3Tk4wJuAjgxEcKhd5pDYod7CRnJGmuHEyWnFCoyV2D3rCjicA/640">\n<code>&lt;a class="track-btn pr tac" @mousemove="move"> &lt;span>妙用CSS变量，让你的CSS变得更心动&lt;/span>\n&lt;/a>\n</code>\n<code>.track-btn { display: block; overflow: hidden; border-radius: 100px; width: 400px; height: 50px; background-color: #66f; line-height: 50px; cursor: pointer; font-weight: bold; font-size: 18px; color: #fff; span {\n     position: relative; } &amp;::before {\n     --size: 0;\n     position: absolute;\n     left: var(--x);\n     top: var(--y);\n     width: var(--size);\n     height: var(--size);\n     background-image: radial-gradient(circle closest-side, #09f, transparent);\n     content: "";\n     transform: translate3d(-50%, -50%, 0);\n     transition: all 200ms ease; } &amp;:hover::before {\n     --size: 400px; }}\n</code>\n<code>exportdefault { name: "track-btn", methods: {\n     move(e) {\n         const x = e.pageX - e.target.offsetLeft;\n         const y = e.pageY - e.target.offsetTop;\n         e.target.style.setProperty("--x", `${x}px`);\n         e.target.style.setProperty("--y", `${y}px`);\n     } }};\n</code>\n<code>源码链接可在文章结尾处获取\n</code>\n其实可结合鼠标事件来完成更多的酷炫效果，例如<code>动画关联</code>、<code>事件响应</code>等操作。\n没有做不到，只有想不到，尽情发挥你的想象力啦。\n\n之前在CodePen上还看到一个挺不错的栗子，一个悬浮视差按钮，具体代码涉及到一些3D变换的知识。\n看完源码后，按照其思路自己也实现一番，顺便对代码稍加改良并封装成Vue组件，存放到本课件示例代码中。\n感觉录制的GIF有点别扭，显示效果不太好，有兴趣的同学可下载本课件示例代码，自己运行看看效果。\n\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_gif/v735W8ZTLWkdq6dsibyI1ianFE0iaCVmiaIicaibG3zsXTVagGYkZCnxD8Q0JvgGeicjBk8K9X1P9vKocCIuR2I43Dialw/640">\n<h3>兼容</h3>对于现代浏览器来说，「CSS变量」的兼容性其实还是蛮好的，所以大家可放心使用。\n毕竟现在都是各大浏览器厂商快速迭代的时刻，产品对于用户体验来说是占了很大比重，因此在条件允许的情况下还是大胆尝新，不要被一些过去的所谓的规范所约束着。\n\n<img class="lazy" data-src="https://mmbiz.qpic.cn/mmbiz_png/v735W8ZTLWkdq6dsibyI1ianFE0iaCVmiaIiciatYC929RXgq42NcSSEpyBDQ9XDVPSNAC3Tzs628MfYBxPnGxjWY1og/640">\n\n\n',
'<h2>Select the first td of every tr</h2>\ntd:first-child\ntd:nth-child(1)\ntable tr td:nth-child(1)\n\n',
'<h2>google fonts</h2>\nuse of interesting google fonts\nhttps://fonts.googleapis.com/css?family=Chewy:regular|Arimo:regular,italic,700,700italic|Lato:100,100italic,300,300italic,regular,italic,700,700italic,900,900italic|Gloria+Hallelujah:regular&#038;subset=latin,latin-ext,greek,hebrew,greek-ext,vietnamese,cyrillic,cyrillic-ext&#038;display=swap\n\n',
'<h2>The New Features in CSS4</h2>\n<h3>:default</h3> — the default selector causes certain elements to be selected by default, as soon as the page loads. \nWhile similar to the :checked selector, :default styles aren’t actually removed if the user happens to un-check them. \nThis can be especially useful for if a user decides to revert back to the default list of checked items. \nWhereas :checked styles will be removed, making it harder for the user to recall what those automatically checked elements were, :default styles will remain, allowing the user a more efficient and easier experience.\n\n<img class="lazy" data-src="https://miro.medium.com/max/778/1*ejz9bfQXcwquMHIiba-vtw.png">\n:default selector example showing how styles remain even after being un-checked\n\n<h3>:valid</h3> and :invalid — the :valid selector tells the user when information they’ve entered is correct, while :invalid alerts the user when the information is, you guessed it, incorrect. \nThis can be useful to guide the user into understanding what is needed to fill out form elements, for example.\n\n<img class="lazy" data-src="https://miro.medium.com/max/1084/1*XHqZXV1piqeLmf50CqWCyw.png">\nThe red input element is alerting the user that this is not a valid email. \nThe green input element is indicating the email is valid.\n\n<h3>:matches</h3> — this selector is a time saver in itself. \nBy grouping and matching items together that need the same styling, this makes for faster and easier to read CSS styling. \nFor example, say you have a bunch of h2’s on your page, and only half of them need to be styled. \nYou could simply add classes to those that need styling, or call on each section — or you could indicate each semantic section of your page, that includes an h2, and needs to be styled. \n*hint — this is also a great reason to use semantic HTML — easier to use the :match selector!\n\n<img class="lazy" data-src="https://miro.medium.com/max/1448/1*cjPRf4jJa4IJbz5uuZl7Vg.png">\n\n<h3>:in</h3>-range and :out-of-range — Used for things like form elements, these handy selectors are perfect for when only a certain range of data is valid. \nSimilar to the concept of :valid and :invalid, however :in-range / :out-of-range are best used for ranges of data (eg. \ndate, month, week, etc)\n\n<img class="lazy" data-src="https://miro.medium.com/max/1712/1*v3sVosR-MnrJpvxBo1fDsg.png">\nthe red input does not have a date within the specified time frame (2017–01–01 to 2018–01–01), causing the input to be red. \nThe green input fits the range of data called for, making it green.\n\n<h3>:not</h3> selector. \nThis selector is apart of CSS3, however, was revamped for CSS4. \n:not can take a list of elements and style them, while excluding certain elements. \nIn CSS3, :not could only take 1 exclusion, but can now take more than 1 in CSS4.\n\n<img class="lazy" data-src="https://miro.medium.com/max/784/1*ZH-LaILG27HIcriEvR8_jw.png">\nExample, showing how CSS3 could only exclude one element, while CSS4 accepts more than 1 element to exclude from styling.\nThere are more features than these awesome ones, so I strongly recommend Googling a few to see what cool new things in CSS4 you can benefit from!\n\n<h3>Relational Pseudo-Class</h3>\n\nThe relational pseudo-class selector matches elements, taking a list of selectors as an argument.\n\n<img class="lazy" data-src="https://somersetdesign.co.uk/userfiles/images/Screen%20Shot%202016-08-03%20at%2011_00_25.png" />\n\nThis selector will match all elements within the specified div, applying red styling to all the relevant elements with a single rule. \nThis new CSS4 feature will provide enhanced control for designers, who will now be able to select child elements with ease.\n\n<h3>Hyperlinks</h3>\n\nUnlike relational selectors, the new CSS4 hyperlink selector is virtually ready to go.\n\n<img class="lazy" data-src="https://somersetdesign.co.uk/userfiles/images/Screen%20Shot%202016-08-03%20at%2011_02_37.png" />\n\nThis selector provides a fast way to style any hyperlink, matching both :visited and :link. \nBest of all, it works in most major desktop browsers besides Internet Explorer. \nNonetheless, this quick and simple selector will definitely prove an efficient way of styling your hyperlinks.\n\n<h3>Negation</h3>\n\nNegation selectors were introduced back in CSS3, but the :not() pseudo-class itself was capable of accepting only one selector. \nIn CSS4, a list of selectors can now be applied.\n\n<img class="lazy" data-src="https://somersetdesign.co.uk/userfiles/images/Screen%20Shot%202016-08-03%20at%2011_04_09.png" />\n\nIn practice, this selector will allow you to pass arguments that serve as exceptions to the following rules. \nIn this instance, all elements bar those with a class of &lsquo;.examplep1\' and an ID of &lsquo;#example2\'.\n\n \n\nThe best thing about this selector is that it expands upon an already existing selector in an intuitive manner, meaning increased functionality without any hassle.\n\n<h3>Grid Structural</h3>\n\nThese selectors apply to elements organised into grid structures comprised of columns and rows.\n\n<img class="lazy" data-src="https://somersetdesign.co.uk/userfiles/images/Screen%20Shot%202016-08-03%20at%2011_04_46.png" />\n\nHere, a specific column with a class of &lsquo;.yellow\' is being styled.\n\nGrid structural selectors can also be used to style every nth element, such that every fifth column could be styled in the same manner:\n\n<img class="lazy" data-src="https://somersetdesign.co.uk/userfiles/images/Screen%20Shot%202016-08-03%20at%2011_05_25.png" />\n\nThough unfortunately lacking browser support, grid structural selectors nonetheless provide a far greater degree of specificity for designers when using grid structures such as tables.\n\n<h3>Drag-and-Drop</h3>\n\nThe drag and drop pseudo-class allow you to style drop targets when the user is currently dragging a particular item.\n\n<img class="lazy" data-src="https://somersetdesign.co.uk/userfiles/images/Screen%20Shot%202016-08-03%20at%2011_05_56.png" />\n\nThis code will add a blue background to a drop target, as determined by usage of the HTML5 &lsquo;dropzone\' attribute.  This can be specified further:\n\n<img class="lazy" data-src="https://somersetdesign.co.uk/userfiles/images/Screen%20Shot%202016-08-03%20at%2011_06_30.png" />\n\nHere, any drop target that is not compatible with an object currently being dragged will be styled with a red outline.\n\n \n\nThis feature is currently listed as &lsquo;at-risk\', so it\'s implementation is far from guaranteed. \nNonetheless, it\'s a unique tool that seems likely to increase ease-of-use and provide additional styling options for designers.\n\nThough CSS4 is far from finished, its new features appear promising. \nThere\'s likely a long time ahead before they become commonplace, but their functionality seems so useful that we\'re sure it\'ll be worth the wait.\n\n',
'<h2>animate css library</h2>\n<a href="https://animate.style/" class="whitebut ">animate css library</a>\n&lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">\n<code>After installing Animate.css, add the class animate__animated to an element, along with any of the animation names (don\'t forget the animate__ prefix!):</code>\n&lt;div class="animate__animated animate__bounce">An animated element&lt;/div>\n<div class="animate__animated animate__bounce">An animated element</div>\n<div class="animate__animated animate__bounce animate__delay-2s">delay Example</div>\n<span class="animate__animated animate__flash animate__delay-2s">An flash element</span>\n<span class="animate__animated animate__pulse animate__repeat-3">repeat headShake Example</span>\n<div class="animate__animated animate__backInDown animate__repeat22">Example</div>\n\n<span onmouseover=\'this.setAttribute("class", "animate__animated animate__flash");\' onmouseout=\'this.setAttribute("class", "");\'>test Example by onmouseover</span>\nbounce, flash, pulse, rubberBand, shakeX, shakeY, headShake, jello, heartBeat\nbounceOut, fadeIn, fadeOut, flipOutX, zoomIn, zoomOut\n\n',
'<h2>onmouseover to set class and style</h2>\n&lt;span onmouseover=\'this.setAttribute("class", "animate__animated animate__flash animate__repeat-3");\' onmouseout=\'this.setAttribute("class", "");\'>test Example&lt;/span>\n\nsetAttribute("style", "background-color: red;");\n\nAnimate CSS, ImagehoverCSS, Loading IO, Hint CSS, Skeleton, Mini.css, Font awesome, Howler.js, SweetAlert 2, Cleave.js, HTML2Canvas, Popmotion, Typed.js, Scroll Magic\n\n<a href="https://minicss.org/" class="whitebut ">Mini.css</a>\n<a href="https://minicss.org/docs" class="whitebut ">mini.css</a>\n&lt;link rel="stylesheet" href="https://cdn.rawgit.com/Chalarangelo/mini.css/v3.0.1/dist/mini-default.min.css">\nor\n&lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/mini.css/3.0.1/mini-default.min.css">\n\nAfter adding mini.css to your project, remember to also add the following line inside your HTML page\'s <head> tag to utilize the viewport meta tag:\n\n&lt;meta name="viewport" content="width=device-width, initial-scale=1">\n\n<a href="https://www.youtube.com/watch?v=vLdG_7Dg_7M" class="whitebut ">Useful CSS Tools for Web Design</a>\n<a href="https://redstapler.co/5-useful-css-tools-web-design/" class="whitebut ">Useful CSS Tools for Web Design</a>\n\n<a href="https://bennettfeely.com/clippy/" class="whitebut ">css clip-path</a>\n\nclip-path: polygon(50% 0%, 100% 38%, 82% 100%, 18% 100%, 0% 38%);\n\n\n<a href="https://keyframes.app/" class="whitebut ">Keyframes CSS</a>\n\n',
'<h2>css hide cursor</h2>\ncursor: none;\n\n',
'<h2>CSS force image resize and keep aspect ratio</h2>\nimg {\n  display: block;\n  max-width:230px;\n  max-height:95px;\n  width: auto;\n  height: auto;\n}\n\n\n',
'<h2>css select anchor contains string</h2>\n  keywordList <- html_nodes(pagesource, "li a[href*=\'military\']") # select anchor contains \'military\'\n  # or\n  keywordList = pagesource %>% html_nodes("a[href*=\'military\']")\n\n\n\n\n',
'<h2>responsive design min(), max(), and clamp()</h2>\nlogical CSS functions\nThe math functions, calc(), min(), max(), and clamp() allow mathematical expressions with addition (+), subtraction (-), multiplication (*), and division (/) to be used as component values\n\nmin(1rem, 50%, 10vw),\nthe browser calculates which of these relative units is the smallest, and uses that value as the actual value.\n\nThe max() function selects the largest value from a list of comma-separated expressions.\n\nTo use clamp() enter three values: a minimum value, ideal value, and maximum value.\n\nAny of these functions can be used anywhere a length, frequency, angle, time, percentage, number, or integer is allowed.\nYou can use these on their own (i.e. \nfont-size: max(0.5vw, 50%, 2rem)), in conjunction with calc() (i.e. \nfont-size: max(calc(0.5vw - 1em), 2rem)), or composed (i.e. font-size: max(min(0.5vw, 1em), 2rem)).\n\np { width: clamp(45ch, 50%, 75ch); }\nThis allows for the browser to determine the width of the paragraph.\nIt will set the width to 50%, unless 50% is smaller than 45ch, at which point 45ch will be selected, and visa versa for if 50% is wider than 75ch.\n\np { font-size: clamp(1.5rem, 5vw, 3rem); }\n\n',
'<h2>CSS Functions</h2>\n<span class="pink">attr()</span>Returns the value of an attribute of the selected element\n<span class="pink">calc()</span>Allows you to perform calculations to determine CSS property values\n<span class="pink">conic-gradient()</span>Creates a conic gradient\n<span class="pink">counter()</span>Returns the current value of the named counter\n<span class="pink">cubic-bezier()</span>Defines a Cubic Bezier curve\n<span class="pink">hsl()</span>Defines colors using the Hue-Saturation-Lightness model (HSL)\n<span class="pink">hsla()</span>Defines colors using the Hue-Saturation-Lightness-Alpha model (HSLA)\n<span class="pink">linear-gradient()</span>Creates a linear gradient\n<span class="pink">max()</span>Uses the largest value, from a comma-separated list of values, as the property value\n<span class="pink">min()</span>Uses the smallest value, from a comma-separated list of values, as the property value\n<span class="pink">radial-gradient()</span>Creates a radial gradient\n<span class="pink">repeating-conic-gradient()</span>Repeats a conic gradient\n<span class="pink">repeating-linear-gradient()</span>Repeats a linear gradient\n<span class="pink">repeating-radial-gradient()</span>Repeats a radial gradient\n<span class="pink">rgb()</span>Defines colors using the Red-Green-Blue model (RGB)\n<span class="pink">rgba()</span>Defines colors using the Red-Green-Blue-Alpha model (RGBA)\n<span class="pink">var()</span>Inserts the value of a custom property\n\n\n\n',
'<h2>CSS Selector Ultimate Guide</h2>\n<div id="CSSSelectortoc"><a href="#CSSSelectortopic-1" target="_self">\n<span class="orange">Basic Selectors</span></a> <a href="#CSSSelectortopic-2" target="_self">Universal Selector</a> <a href="#CSSSelectortopic-3" target="_self">Type Selector</a> <a href="#CSSSelectortopic-4" target="_self">Class Selector</a> <a href="#CSSSelectortopic-5" target="_self">Id Selector</a> <a href="#CSSSelectortopic-6" target="_self">\n<span class="orange">Combination Selectors</span></a> <a href="#CSSSelectortopic-7" target="_self">Descendant Selector</a> <a href="#CSSSelectortopic-8" target="_self">Direct Child Selector</a> <a href="#CSSSelectortopic-9" target="_self">General Sibling Selector</a> <a href="#CSSSelectortopic-10" target="_self">Adjacent Sibling Selector</a> <a href="#CSSSelectortopic-11" target="_self">Or Selector</a> <a href="#CSSSelectortopic-12" target="_self">And Selector</a> <a href="#CSSSelectortopic-13" target="_self">Combination Selector Important Notes</a> <a href="#CSSSelectortopic-14" target="_self">\n<span class="orange">Pseudo Element Selectors</span></a> <a href="#CSSSelectortopic-15" target="_self">Before Pseudo Element</a> <a href="#CSSSelectortopic-16" target="_self">After Pseudo Element</a> <a href="#CSSSelectortopic-17" target="_self">Pseudo Element Selector Important Notes</a> <a href="#CSSSelectortopic-18" target="_self">\n<span class="orange">Pseudo Class Selectors</span></a> <a href="#CSSSelectortopic-19" target="_self">Hover Pseudo Class</a> <a href="#CSSSelectortopic-20" target="_self">Focus Pseudo Class</a> <a href="#CSSSelectortopic-21" target="_self">Checked Pseudo Class</a> <a href="#CSSSelectortopic-22" target="_self">Disabled Pseudo Class</a> <a href="#CSSSelectortopic-23" target="_self">First Child Pseudo Class</a> <a href="#CSSSelectortopic-24" target="_self">First Of Type Pseudo Class</a> <a href="#CSSSelectortopic-25" target="_self">Not Pseudo Class</a> <a href="#CSSSelectortopic-26" target="_self">\n<span class="orange">Attribute Selectors</span></a> <a href="#CSSSelectortopic-27" target="_self">Has Attribute Selector</a> <a href="#CSSSelectortopic-28" target="_self">Exact Attribute Selector</a> <a href="#CSSSelectortopic-29" target="_self">Begins With Attribute Selector</a> <a href="#CSSSelectortopic-30" target="_self">Ends With Attribute Selector</a> <a href="#CSSSelectortopic-31" target="_self">Substring Attribute Selector</a> <a href="#CSSSelectortopic-32" target="_self">\n<span class="orange">Conclusion</span></a> </div>\nWhen you first learn CSS you learn a few different types of selectors like class and id selectors, but there are hundreds of other selector combinations in CSS that you need to know in order to truly master CSS. \nIn this article I will be covering every single type of selector and all of the most important selectors of those types that you need to know. \nAlso, I have a <a href="https://webdevsimplified.com/specificity-cheat-sheet.html">complete CSS selector cheat sheet</a> that covers all the selectors from this article plus more with visual examples that you can download for free.\n\n<h3 id="CSSSelectortopic-1">\n<span class="orange">Basic Selectors</span></h3>\nTo start we need to cover the most basic form of selectors and also talk about what a CSS selector is. \nA CSS selector is simply the code you write that determines which HTML elements your CSS styles will refer to. \nIn the below example <code>.class-name</code> is the CSS selector since it is the part that comes before the curly braces.\n<code>.class-name {\n  color: blue\n}</code>\n\nWhen it comes to basic selectors there are really only 4 types that all other selectors are built on and those are the universal, type, class, and id selector.\n<h3 id="CSSSelectortopic-2">Universal Selector</h3>\nThe universal selector, which is just a <code>*</code>, does like it\'s name says and selects everything. \nThe below code would set the margin to 0 on all elements on the page.\n<code>* {\n  margin: 0;\n}</code>\n\nThis selector is perfect for when you want to make large changes across your entire page such as setting <code>box-sizing</code> or removing margins, but is generally not used for much else.\n<h3 id="CSSSelectortopic-3">Type Selector</h3>\nThe type selector is a selector that you will use relatively rarely as it is just too general to be useful. \nThe type selector allows you to select all elements of a particular type, such as all <code>div</code> or <code>img</code> elements. \nTo use this selector just put the name of the element you want to select. \nThe below example selects all <code>div</code> elements.\n<code>div {\n  background-color: red;\n}</code>\n\nI recommend never using this type of selector since it is too easy to accidentally add styles to elements you don\'t actually want to add styles too. \nThe only time I would ever use the type selector is if I wanted to set some default styles that apply to my entire site such as setting <code>font-size</code> for heading tags, or selecting the <code>body</code> tag to remove margins.\n<h3 id="CSSSelectortopic-4">Class Selector</h3>\nThis is by far the most common type of selector that you will see. \nClasses are attributes that you can add to any HTML element that serve no purpose other than to be used with CSS or JavaScript. \nThese class selectors are amazing in CSS since they allow you to specify which elements you want to style in the HTML and you can also share styles between multiple elements by giving them the same class.\n<code>&lt;button class="btn btn-primary">Save&lt;/button>\n&lt;button class="btn btn-danger">Cancel&lt;/button></code>\n\nIn the above example you can see we gave both our buttons the <code>btn</code> class so they can both share the styles associated with that class in our CSS. \nWe also gave them each their own <code>btn-primary</code> or <code>btn-danger</code> class to add extra styles for those specific buttons. \nTo use a class selector in CSS you simply put the name of the class you want to select after a period.\n<code>.btn {\n  border: 1px solid black;\n}\n\n.btn-primary {\n  background-color: blue;\n}\n\n.btn-danger {\n  background-color: red;\n}</code>\n\n<em>On a side note I mentioned how you can use classes in JavaScript, but I generally consider doing so a bad practice. \nIf you want to know why then you should read <a href="/2019-10/do-not-use-class-selectors-in-javascript">this article on why I don\'t use classes in JavaScript</a>.</em>\n<h3 id="CSSSelectortopic-5">Id Selector</h3>\nThe final basic selector is id selectors. \nThey are very similar to class selectors in that you can define ids on HTML elements and then reference them in CSS, but there are a few differences.\nThe first main difference is that id selectors cannot be shared between elements on the same page since in HTML an id is unique so no two elements on the page can have the same id.\nId selectors are also more specific which makes them override a lot of other CSS styles which you do not want. \nIf you are unsure of how specificity works in CSS you should check out my <a href="/2020-02/css-specificity">complete CSS specificity article</a> which covers specificity in depth with interactive examples.\nThe final difference is that id selectors start with a <code>#</code> symbol instead of a period.\n<code>&lt;nav>...&lt;/nav></code>\n\n<code>#nav-bar {\n  margin-bottom: 1rem;\n}</code>\n\n<h3 id="CSSSelectortopic-6">\n<span class="orange">Combination Selectors</span></h3>\nThe real power of CSS selectors comes in your ability to combine selectors together. \nThere are 6 main combination selectors you need to know which will allow you to select the exact element you want every time.\n<h3 id="CSSSelectortopic-7">Descendant Selector</h3>\nThe first type of combination selector is the descendant selector. \nThis selector allows you to select any element that matches a specific selector which is a descendant of an element that matches a different selector. \nLet\'s take a look at a quick example.\n<code>div span {\n  color: red;\n}\n&lt;div>\n  &lt;span>Selected&lt;/span>\n  &lt;a>\n    &lt;span>Selected&lt;/span>\n  &lt;/a>\n&lt;/div>\n&lt;span>Not&lt;/span></code>\n\nThe above CSS selector selects all span elements that are descendants of a div element. \nYou will notice that this means the first span is selected since it is a direct child of the div. \nThe second span is also selected since while it is not a direct child of a div it is a descendant of a div. \nThe final span is not selected, though, since it is not inside a div.\nNow in order to use a descendant selector all you need to do is separate two selectors by a space. \nThe first selector will be the parent selector and the second selector will be the selector for the descendants.\n<h3 id="CSSSelectortopic-8">Direct Child Selector</h3>\nSimilar to the descendant selector, the direct child selector is for selecting child elements, but the main difference is the direct child selector will only select an element that is the direct child of the first parent selector.\n<code>div > span {\n  color: red;\n}&lt;div>\n  &lt;span>Selected&lt;/span>\n  &lt;a>\n    &lt;span>Not&lt;/span>\n  &lt;/a>\n&lt;/div>\n&lt;span>Not&lt;/span></code>\n\nAs you can see above the span inside the a tag is not selected since it is not a direct child of the div and instead is a direct child of an a tag. \nThe first span is selected, though, since it is the direct child of a div.\nIn order to use a direct child selector just put a greater than symbol between the first selector and the second selector.\n<h3 id="CSSSelectortopic-9">General Sibling Selector</h3>\nThis next selector is all about selecting siblings, but can be a bit confusing. \nLet\'s take a look at an example and I will explain what I mean.\n<code>div ~ a {\n  color: red;\n}\n&lt;a>Not&lt;/a>\n&lt;div>&lt;/div>\n&lt;a>Selected&lt;/a>\n&lt;a>Selected&lt;/a></code>\n\nYou would think since this selector is called the general sibling selector that it would select all elements that are siblings of the first element, but it actually only selects the siblings that come <k>after</k> the first selector. \nThis is because CSS can only read in one direction so has no way to modify elements that come before other elements.\nAs for the actual selector itself all you need to do is put a <code>~</code> between the selectors. \nThe first selector will be for the sibling to check after and the second selector is for the actual siblings you are checking for.\n<h3 id="CSSSelectortopic-10">Adjacent Sibling Selector</h3>\nSimilar to the general sibling selector the adjacent sibling selector is for selecting siblings, but this selector can only select the element that comes direct after the first element.\n<code>div + a {\n  color: red;\n}&lt;a>Not&lt;/a>\n&lt;div>&lt;/div>\n&lt;a>Selected&lt;/a>\n&lt;a>Not&lt;/a></code>\n\nAs you can see above the only a tag that is selected is the one directly after the div. \nIt is also important to note that if the sibling directly after the div was something other than an a tag then the selector we have written would do nothing since it can only select the element that is the first element after the div.\nTo use this selector just put a <code>+</code> between the first and second selector.\n<h3 id="CSSSelectortopic-11">Or Selector</h3>\nNow we are coming to my two favorite combination selectors, the or and and selectors. \nFirst we will talk about the or selector which is a way to write a CSS selector that will select elements that match at least one of the selectors.\n<code>div, span {\n  color: red;\n}\n\n&lt;div>Selected&lt;/div>\n&lt;a>Not&lt;/a>\n&lt;div>Selected&lt;/div>\n&lt;span>Selected&lt;/span></code>\n\nThe above selector selects all elements that are either a div or a span. \nThis is great if you want to have multiple selectors do the same thing. \nTo use the or selector just separate your selectors by a comma. \nGenerally, if the selectors are long I will separate them onto different lines to make them easier to read.\n<code>.really-really-long-name,\n.another-name {\n  color: red;\n}</code>\n\n<h3 id="CSSSelectortopic-12">And Selector</h3>\nThe final combination selector is the and selector and it is probably the most used combination selector. \nThis selector allows you to write CSS selectors that force elements to match all the selectors specified.\n<code>div.red {\n  color: red;\n}&lt;div class="red">Selected&lt;/div>\n&lt;div>Not&lt;/div>\n&lt;span class="red">Not&lt;/span></code>\n\nAs you can see only the div with the class of red is selected in the above example. \nUsing the and combination selector is also incredibly easy since all you have to do is write all the selectors right next to each other with no spacing between them.\nThe only important thing to know about this selector is that if you are using a universal selector or a type selector then you must put the type/universal selector first.\n<code>div.red {} /* Good */\n.reddiv {} /* Bad */</code>\n\n<h3 id="CSSSelectortopic-13">Combination Selector Important Notes</h3>\nThe important thing to know about these combination selectors is that you can utilize any of the selectors we talk about in combination with each other even other combination selectors.\n<code>div.container > .large.red {\n  font-size: 2rem;\n  color: red;\n}</code>\n\nFor example, in the above selector we combined together multiple type and class selectors using direct child combinations with and combinations. \nThis ability to combine together infinitely many selector combinations is what makes CSS so flexible.\n<h3 id="CSSSelectortopic-14">\n<span class="orange">Pseudo Element Selectors</span></h3>\nNow that we have covered the most common types of selectors we need to talk about a few other selectors that you will still use all the time, but are a bit more niche. \nThe first type we are talking about are pseudo element selectors which there are only 2 that you need to know and they are both almost identical. \n<em>If you want to go more in depth on pseudo elements check out my <a href="/2021-12/css-pseudo-elements">pseudo element ultimate guide article</a>.</em>\n\n<h3 id="CSSSelectortopic-15">Before Pseudo Element</h3>\nThe before pseudo element is an element you can create which will be placed as the very first child of the element you are creating it for.\n<code>div::before {\n  content: "Child 0";\n}</code>\n\n<code>&lt;div>\n  &lt;span>Child 1&lt;/span>\n  &lt;span>Child 2&lt;/span>\n&lt;/div></code>\n\nIn the above code we are using the before pseudo selector to select the before element for our div. \nThis will create a new element in our HTML that has the text "Child 0" inside of it. \nYou will notice in our HTML, though, there is no element corresponding to the ::before element and that is because the pseudo element is created entirely in CSS and when we write our HTML we don\'t reference it.\nNow to create a pseudo element just prefix it <code>::</code> and then put the type of pseudo element you are selecting. \nIn our case we are creating a before pseudo element inside every div on our page.\n<h3 id="CSSSelectortopic-16">After Pseudo Element</h3>\nThe after pseudo element is exactly the same as the before pseudo element except that it is added as the last child of the element instead of the first.\n<code>div::after {\n  content: "Child 3";\n}</code>\n\n<code>&lt;div>\n  &lt;span>Child 1&lt;/span>\n  &lt;span>Child 2&lt;/span>\n&lt;/div></code>\n\n<h3 id="CSSSelectortopic-17">Pseudo Element Selector Important Notes</h3>\nYou must include a content property for your pseudo elements or they will not exist on the page. \nIt can simply be an empty string, though, if you don\'t want it to have any content.\n<code>div::after {\n  content: "";\n}</code>\n\nPseudo elements also can be defined using a single colon, but this is not recommended and is only implemented for backwards compatibility.\n<code>div:after {\n  content: "Technically it works";\n}</code>\n\nYou also cannot add pseudo elements to elements that replace their content with something else such as an <code>img</code> element.\nLastly, pseudo elements will show up in your browser dev tools which can make debugging them much easier.\n<h3 id="CSSSelectortopic-18">\n<span class="orange">Pseudo Class Selectors</span></h3>\nNow this is really where CSS starts to become a vast world of selectors. \nThere are hundreds of pseudo classes which are all used to represent special states of elements that you can use as selectors in CSS, but there are really only a handful that are truly important for you to understand.\nI will try to cover as many as I can here, but if you want a complete list of all the pseudo selectors that are important to know you should <a href="https://webdevsimplified.com/specificity-cheat-sheet.html">download my free selector cheat sheet</a>.\nTo define a pseudo class it is nearly identical to pseudo elements, but you use one colon instead of two.\n<h3 id="CSSSelectortopic-19">Hover Pseudo Class</h3>\nProbably the most useful CSS pseudo class is hover. \nThe hover pseudo class allows you to style an element differently when it is hovered. \nFor example, you can change the background color of a button so users know it is clickable.\n<code>button:hover {\n  background-color: red;\n}</code>\n\n<h3 id="CSSSelectortopic-20">Focus Pseudo Class</h3>\nThe focus pseudo class is another really important selector since it allows you to style an element based on if it has focus or not. \nFor example you can change the border color of an input field when it is focused.\n<code>input:focus {\n  border-color: blue;\n}</code>\n\n<h3 id="CSSSelectortopic-21">Checked Pseudo Class</h3>\nThe checked pseudo class allows you to style an element based on if it is checked or not. \nFor example you can change the opacity of a checkbox when it is checked.\n<code>input:checked {\n  opacity: .8;\n}</code>\n\n<h3 id="CSSSelectortopic-22">Disabled Pseudo Class</h3>\nThe disabled pseudo class allows you to style an element based on if it is disabled or not. \nFor example you can change the background color of an input when it is disabled.\n<code>input:disabled {\n  background-color: gray;\n}</code>\n\n<h3 id="CSSSelectortopic-23">First Child Pseudo Class</h3>\nThe first child pseudo class selects the first child inside a parent.\n<code>a:first-child {\n  color: red;\n}&lt;div>\n  &lt;a>Selected&lt;/a>\n  &lt;a>Not&lt;/a>\n&lt;/div>\n&lt;div>\n  &lt;span>Not&lt;/span>\n  &lt;a>Not&lt;/a>\n&lt;/div></code>\n\nThe important thing to note about this selector is it selects the first child and not the first child element that matches the CSS selector. \nThat is why the a tag in the second div is not selected.\nYou can also use the <code>only-child</code>, <code>last-child</code>, <code>nth-child</code>, and <code>nth-last-child</code> selectors which do nearly the same things, but are for selecting other specific children.\n<h3 id="CSSSelectortopic-24">First Of Type Pseudo Class</h3>\nThe first of type pseudo class selects the first child inside a parent that matches the specific element type.\n<code>a:first-of-type {\n  color: red;\n}\n&lt;div>\n  &lt;a>Selected&lt;/a>\n  &lt;a>Not&lt;/a>\n&lt;/div>\n&lt;div>\n  &lt;span>Not&lt;/span>\n  &lt;a>Selected&lt;/a>\n&lt;/div></code>\n\nThe important thing to note about this selector is it doesn\'t care if the element is the first child or not. \nIt only cares that it is the first of a specific type.\nYou can also use the <code>only-of-type</code>, <code>last-of-type</code>, <code>nth-of-type</code>, and <code>nth-last-of-type</code> selectors which do nearly the same things, but are for selecting other specific children.\n<h3 id="CSSSelectortopic-25">Not Pseudo Class</h3>\nThe final pseudo class I want to cover is the not pseudo class which allows you to select elements that do not match a specific selector.\n<code>a:not(.green) {\n  color: red;\n}\n&lt;a>Selected&lt;/a>\n&lt;a class="large">Selected&lt;/a>\n&lt;span class="red">Not&lt;/span>\n&lt;a class="green">Not&lt;/a></code>\n\nThe not pseudo class works by putting another selector inside parenthesis inside the <code>:not</code> selector. \nThis selector in the parenthesis is the not selector so in our example we are selecting all a tags that do not have the class green.\n<h3 id="CSSSelectortopic-26">\n<span class="orange">Attribute Selectors</span></h3>\nThe final type of selector I want to talk about is the attribute selector. \nThis selector allows you to select any element based on the attributes that it has. \nThis is really useful when used in combination with custom data attributes.\nAn important note about attribute selectors is that they all are defined within square brackets.\n<em>If you want to go in depth with data attributes you should check out my <a href="/2019-10/use-data-attributes-in-css">complete CSS data attribute guide</a> as well as my <a href="/2020-10/javascript-data-attributes">JavaScript data attribute guide</a>.</em>\n<h3 id="CSSSelectortopic-27">Has Attribute Selector</h3>\nThe most basic form of attribute selector is the has attribute selector. \nThis selector just checks to see if an element has the specified attribute.\n<code>[data-active] {\n  color: red;\n}\n\n&lt;div data-active>Selected&lt;/div>\n&lt;div data-active="true">Selected&lt;/div>\n&lt;div data-active="false">Selected&lt;/div>\n&lt;div>Not&lt;/div></code>\n\nThe has attribute selector doesn\'t care what the value of the attribute is or even if there is a value for the attribute. \nIt only cares that there is an attribute on the HTML element that matches the specified attribute in CSS.\n<h3 id="CSSSelectortopic-28">Exact Attribute Selector</h3>\nIf you want to check for a specific value instead you need to use the exact attribute selector.\n<code>[data-active="true"] {\n  color: red;\n}&lt;div data-active>Not&lt;/div>\n&lt;div data-active="true">Selected&lt;/div>\n&lt;div data-active="false">Not&lt;/div>\n&lt;div>Not&lt;/div></code>\n\nThe exact attribute selector will only match elements that have the specified attribute with the exact specified value. \nThe equal sign between the attribute name and the value is what defines this as an exact attribute selector.\n<h3 id="CSSSelectortopic-29">Begins With Attribute Selector</h3>\nIf you want to check for an attribute that starts with a specific value then you need the begins with attribute selector.\n<code>[data-active^="t"] {\n  color: red;\n}\n&lt;div data-active>Not&lt;/div>\n&lt;div data-active="true">Selected&lt;/div>\n&lt;div data-active="test">Selected&lt;/div>\n&lt;div data-active="false">Not&lt;/div></code>\n\nThe caret symbol followed by an equal sign between the attribute name and the value is what defines this as a begins with attribute selector.\n<h3 id="CSSSelectortopic-30">Ends With Attribute Selector</h3>\nThis is identical to the begins with attribute selector but for checking the end of the value instead.\n<code>[data-active$="e"] {\n  color: red;\n}\n&lt;div data-active>Not&lt;/div>\n&lt;div data-active="apple">Selected&lt;/div>\n&lt;div data-active="true">Selected&lt;/div>\n&lt;div data-active="test">Not&lt;/div></code>\n\nThe dollar sign followed by an equal sign between the attribute name and the value is what defines this as an ends with attribute selector.\n<h3 id="CSSSelectortopic-31">Substring Attribute Selector</h3>\nThis is similar to the last two selectors, but it checks that the string passed to it appears anywhere in the attribute value.\n<code>[data-active*="e"] {\n  color: red;\n}\n\n&lt;div data-active>Not&lt;/div>\n&lt;div data-active="apple">Selected&lt;/div>\n&lt;div data-active="test">Selected&lt;/div>\n&lt;div data-active="gap">Not&lt;/div></code>\n\nThe asterisk sign followed by an equal sign between the attribute name and the value is what defines this as a substring attribute selector.\n<h3 id="CSSSelectortopic-32">\n<span class="orange">Conclusion</span></h3>\nCSS selectors are incredibly powerful and vast in their uses, but you really only need to know the small handful of selectors listed above to write impressive CSS. \nAlso, if you want a quick cheat sheet that you can reference as needed I highly recommend downloading <a href="https://webdevsimplified.com/specificity-cheat-sheet.html">my free CSS selector cheat sheet</a>.\n\n',
'<h2>css content attr</h2>\n<a href="https://stackoverflow.com/questions/9244197/css-content-attr-and-url-in-the-same-sentence" class="whitebut ">css Content, Attr and Url in the same sentence</a>\n\na::after { content: "Photo: attr(id); }\na::after { content: " (" attr(href) ")"; }\na:hover:after{ content: " " attr(id); }\n\n\n',
'<h2>white-space CSS property</h2>\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/white-space\n\nThe property specifies two things:\nWhether and how white space is collapsed.\nWhether lines may wrap at soft-wrap opportunities.\nThe <k><code>white-space</code></k> CSS property sets how <a href="/en-US/docs/Glossary/Whitespace">white space</a> inside an element is handled.\n<iframe class="interactive" height="390" src="https://interactive-examples.mdn.mozilla.net/pages/css/white-space.html" title="MDN Web Docs Interactive Example" loading="lazy"></iframe>\n\n/* Keyword values */\nwhite-space: normal;\nwhite-space: nowrap;\nwhite-space: pre;\nwhite-space: pre-wrap;\nwhite-space: pre-line;\nwhite-space: break-spaces;\n\n/* Global values */\nwhite-space: inherit;\nwhite-space: initial;\nwhite-space: revert;\nwhite-space: unset;\n\n',
'<h2>debug CSS Grid with Chrome DevTools</h2>\n<a href="https://developer.chrome.com/docs/devtools/" class="whitebut ">Chrome DevTools</a>\nhttps://developers.google.com/codelabs/devtools-debug-css-grid\n<a href="https://developers.google.com/codelabs/" class="whitebut ">codelabs</a>\n\n<div id="debugCSStoc" class="toc"><a href="#debugCSStopic-0" target="_self" onclick="jumpto(0)">1. Introduction</a>\n<a href="#debugCSStopic-1" target="_self" onclick="jumpto(1)"> What you\'ll <k>learn</k></a>\n<a href="#debugCSStopic-2" target="_self" onclick="jumpto(2)"> What you\'ll <k>need</k></a>\n<a href="#debugCSStopic-3" target="_self" onclick="jumpto(3)"> What you\'ll <k>do</k></a>\n<a href="#debugCSStopic-4" target="_self" onclick="jumpto(4)">2. Start</a>\n<a href="#debugCSStopic-5" target="_self" onclick="jumpto(5)">3. Enable the grid overlay</a>\n<a href="#debugCSStopic-6" target="_self" onclick="jumpto(6)">4. Customize grid overlay display</a>\n<a href="#debugCSStopic-7" target="_self" onclick="jumpto(7)">5. Solve the puzzle</a>\n<a href="#debugCSStopic-8" target="_self" onclick="jumpto(8)">6. Congratulations!</a>\n</div></center>\n\n\n\n<h3 id="debugCSStopic-0">1. Introduction</h3>\nDevTools now has better support for <a href="/web/updates/2020/10/devtools#css-grid" target="_blank">CSS grid debugging</a>!\n<img src="https://developers.google.com/static/codelabs/devtools-debug-css-grid/css-grid-debugging_1440.png">\n\nWhen an HTML element on your page has <code>display: grid</code> or <code>display: inline-grid</code> applied to it, the <k>Elements panel</k> offers a number of options to help you to better inspect the grid.\n\n<h3 id="debugCSStopic-1"> What you\'ll <k>learn</k></h3>\nThis codelab will teach you how to debug CSS Grid with Chrome DevTools.\n\n<li>How to toggle Grid debugging feature from the Elements panel</li>\n<li>How to customize the grid overlay settings in the Layout pane</li>\n<li>How to edit the styles with help of grid overlays</li>\n\n<h3 id="debugCSStopic-2"> What you\'ll <k>need</k></h3>\n<li>A working computer and realiable wifi</li>\n<li>Chrome 87 and above.</li>\n<li>[Optional] A basic understanding of the <a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Grids" target="_blank">CSS Grid</a>.</li>\n\n<h3 id="debugCSStopic-3"> What you\'ll <k>do</k></h3>\nYou will solve this puzzle with the help of the CSS Grid debbuging tools.\n<img src="https://developers.google.com/static/codelabs/devtools-debug-css-grid/puzzle_1440.png">\n\n<h3 id="debugCSStopic-4">2. Start</h3>\nClick the following link to open the puzzle page:\n<a href="https://jec.fyi/demo/cds-quest-grid" target="_blank"><button class="button button-primary">Open the puzzle page</button></a>\n\nNext, on the puzzle page, <a href="/web/tools/chrome-devtools/open" target="_blank">open the Chrome DevTools</a>.\n\n<h3 id="debugCSStopic-5">3. Enable the grid overlay</h3>\n<a href="/web/tools/chrome-devtools/dom#inspect" target="_blank">Inspect the puzzle</a> in the <k>Elements</k> panel. \nClick and focus on the puzzle container node:\n\n<code>&lt;div class="chrome-puzzle">\n</code>\n\nIn the <k>Elements</k> panel, notice that there is a <code>grid</code> badge next to the puzzle container. \nClick on it to toggle the grid overlay.\n\nWhy is there a <code>grid</code> badge next to the puzzle container? Examine its CSS in the <k>Styles</k> pane, it is because it has <code>display: grid</code> property.\n\n<h3 id="debugCSStopic-6">4. Customize grid overlay display</h3>\nAt the moment, the grid overlay display with the line numbers. \nLet\'s customize the display further to help us solve our puzzle.\n\nClick on the <k>Layout</k> pane, select <k>Hide line labels</k> in the dropdown to hide the line numbers on the grid overlay.\n\nNow, go to the <k>Styles</k> pane, examine the puzzle container CSS. \nIt contains a <code>grid-template-areas</code> property:\n\n<code>.chrome-puzzle {\n  grid-template-areas:\n    "top-left top-right"\n    "bottom-left bottom-right";\n}\n</code>\n\nThe area names are useful for us to solve the puzzle! Let\'s update the settings to display them on screen.\n\nGo back to the <k>Layout</k> pane, enable the <k>Show area names</k> checkbox.\n\nTa-da! The grid overlay now shows the area names of each puzzle pieces.\n\n<aside class="special">\n Go try out other settings like <k>Show track sizes</k> or <k>Extend grid lines</k>!\n\n</aside>\n\n<h3 id="debugCSStopic-7">5. Solve the puzzle</h3>\nWith the area names display on screen, we can start working on the puzzle.\n\nLet\'s place each puzzle pieces into the correct area.\n\nWe can start by <a href="/web/tools/chrome-devtools/dom#inspect" target="_blank">inspect</a> the first puzzle piece.\n\n<code>&lt;img src="...-grid-4.png" class="piece-4">\n</code>\n\nIn the <k>Styles</k> pane, locate the piece\'s CSS class:\n\n<code>.piece-4 {\n    grid-area: auto;\n}\n</code>\n\nThe <code>grid-area</code> is currently set to <code>auto</code>. \nYou can update that with the correct area name.\n\nWhich area should this piece belong to? Let\'s says the correct area of this piece is <code>top-right</code>, you can then replace the value <code>auto</code> with <code>top-right</code>. \nVisualize the changes right away. \nThe piece is now placed in the <code>top-right</code> area.\n\nUpdate the <code>grid-area</code> of each pieces until you solve the puzzle!\n<img src="https://developers.google.com/static/codelabs/devtools-debug-css-grid/puzzle-complete_1440.png">\n\n<h3 id="debugCSStopic-8">6. Congratulations!</h3>\nCongratulations! You\'ve successfully complete this codelab!\n\nHere is the <a href="/web/tools/chrome-devtools/css/grid" target="_blank">documentation</a> if you want learn more about the CSS Grid debugging tools.\n\n',
'<h2>to Center an Image with CSS</h2>\n<h3>Text-Align</h3>\nThe first way to center an image horizontally is using the <code>text-align</code> property. \nHowever, this method only works if the image is inside a block-level container such as a <code>&lt;div></code>:\n\n<h3>Margin: Auto</h3>\nAnother way to center an image is by using the <code>margin: auto</code> property (for left-margin and right-margin). \n\n\nHowever, using <code>margin: auto</code> alone will not work for images. \nIf you need to use <code>margin: auto</code>, there are 2 additional properties you must use as well.\n\nThe margin-auto property does not have any effects on inline-level elements. \nSince the <code>&lt;img></code> tag is an inline element, we need to convert it to a block-level element first:\n<code>img {\n  margin: auto;\n  display: block;\n}</code>\n\nSecondly, we also need to define a width. \nSo the left and right margins can take the rest of the empty space and  auto-align themselves, which does the trick (unless we give it a width of 100%):\n<code>img {\n  width: 60%;\n  margin: auto;\n  display: block;\n}</code>\n<h3>Display: Flex</h3>\nThe third way to center an image horizontally is by using <code>display: flex</code>. \nJust like we used the <code>text-align</code> property for a container, we use <code>display: flex</code> for a container as well. \n\nHowever, using <code>display: flex</code> alone will not be enough. \nThe container must also have an additional property called <code>justify-content</code>:\n<code>div {\n  display: flex;\n  justify-content: center;\n}\n\nimg {\n  width: 60%;\n}</code>\n\nThe <code>justify-content</code> property works together with <code>display: flex</code>, which we can use to center the image horizontally.\n\nFinally, the width of the image must be smaller than the width of the container, otherwise, it takes 100% of the space and then we can\'t center it.\n\n<h3>Centering an Image Vertically</h3><h3>Display: Flex</h3>\nFor vertical alignment, using <code>display: flex</code> is again really helpful. \n\nConsider a case where our container has a height of 800px, but the height of the image is only 500px:\n<code>div {\n  display: flex;\n  justify-content: center;\n  height: 800px;\n}\n\nimg {\n  width: 60%;\n  height: 500px;\n}</code>\n\nNow, in this case, adding a single line of code to the container, <code>align-items: center</code>, does the trick:\n<code>div {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 800px;\n}</code>\n\nThe <code>align-items</code> property can position elements vertically if used together with <code>display: flex</code>.\n<h3>Position: Absolute &amp; Transform Properties</h3>\nAnother method for vertical alignment is by using the <code>position</code> and <code>transform</code> properties together. \nThis one is a bit complicated, so let\'s do it step by step.\n<h3>Step 1: Define Position Absolute</h3>\nFirstly, we change the positioning behavior of the image from <code>static</code> to <code>absolute</code>:\n<code>div {\n  height: 800px;\n  position: relative;\n  background: red;\n}\n\nimg {\n  width: 80%;\n  position: absolute;\n}</code>\n\nAlso, it should be inside a relatively positioned container, so we add <code>position: relative</code> to its container div.\n<h3>Step 2: Define Top &amp; Left Properties</h3>\nSecondly, we define the top and left properties for the image, and set them to 50%. \nThis will move the starting point(top-left) of the image to the center of the container:\n<code>img {\n  width: 80%;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n}</code>\n<h3>Step 3: Define the Transform Property</h3>\nBut the second step has moved the image partially outside of its container. \nSo we need to bring it back inside. \n\nDefining a <code>transform</code> property and adding -50% to its X and Y axis does the trick:\n<code>img {\n  width: 80%;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}</code>\n\n',
'<h2>CSS 2022 新特性</h2>\n<div id="CSS2022toc" class="toc"><a href="#CSS2022topic-0" target="_self"><span class="orange"> 2022 已经支持的特性</span></a>\n<a href="#CSS2022topic-1" target="_self"> @layer</a>\n<a href="#CSS2022topic-2" target="_self"> subgrid</a>\n<a href="#CSS2022topic-3" target="_self"> @container</a>\n<a href="#CSS2022topic-4" target="_self"> hwb</a>\n<a href="#CSS2022topic-5" target="_self"> lch, oklch, lab, oklab, display-p3 等</a>\n<a href="#CSS2022topic-6" target="_self"> color-mix()</a>\n<a href="#CSS2022topic-7" target="_self"> color-contrast()</a>\n<a href="#CSS2022topic-8" target="_self"> 相对颜色语法</a>\n<a href="#CSS2022topic-9" target="_self"> 渐变色 namespace</a>\n<a href="#CSS2022topic-10" target="_self"> accent-color</a>\n<a href="#CSS2022topic-11" target="_self"> inert</a>\n<a href="#CSS2022topic-12" target="_self"> COLRv1 Fonts</a>\n<a href="#CSS2022topic-13" target="_self"> 视口单位</a>\n<a href="#CSS2022topic-14" target="_self"> :has()</a>\n<a href="#CSS2022topic-15" target="_self"><span class="orange"> 即将支持的特性</span></a>\n<a href="#CSS2022topic-16" target="_self"> @scope</a>\n<a href="#CSS2022topic-17" target="_self"> 样式嵌套</a>\n<a href="#CSS2022topic-18" target="_self"> prefers-reduced-data</a>\n<a href="#CSS2022topic-19" target="_self"> 自定义 media 名称</a>\n<a href="#CSS2022topic-20" target="_self"> media 范围描述支持表达式</a>\n<a href="#CSS2022topic-21" target="_self"> @property</a>\n<a href="#CSS2022topic-22" target="_self"> scroll-start</a>\n<a href="#CSS2022topic-23" target="_self"> :snapped</a>\n<a href="#CSS2022topic-24" target="_self"> :toggle()</a>\n<a href="#CSS2022topic-25" target="_self"> anchor()</a>\n<a href="#CSS2022topic-26" target="_self"> selectmenu</a>\n</div></center>\n\n\n\n<h3 id="CSS2022topic-0"><span class="orange"> 2022 已经支持的特性</span></h3>\n<h4 id="CSS2022topic-1"> @layer</h4>\n解决业务代码的 !important 问题。\n为什么业务代码需要用 !important 解决问题？\n因为 css 优先级由文件申明顺序有关，而现在大量业务使用动态插入 css 的方案，插入的时机与 js 文件加载与执行时间有关，这就导致了样式优先级不固定。\n\n<k>@layer</k> 允许业务定义样式优先级，层越靠后优先级越高，比如下面的例子，<k>override</k> 定义的样式优先级比 <k>framework</k> 高：\n<k>@layer framework, override;@layer override {  .title {    color: white;  }}@layer framework {  .title {    color: red;  }}</k><h4 id="CSS2022topic-2"> subgrid</h4>\nsubgrid 解决 grid 嵌套 grid 时，子网格的位置、轨迹线不能完全对齐到父网格的问题。\n只要在子网格样式做如下定义：\n<k>.sub-grid {  display: grid;  grid-template-columns: subgrid;  grid-template-rows: subgrid;}</k><h4 id="CSS2022topic-3"> @container</h4>\n@container 使元素可以响应某个特定容器大小。\n在 @container 出来之前，我们只能用 @media 响应设备整体的大小，而 @container 可以将相应局限在某个 DOM 容器内：\n<k>// 将 .container 容器的 container-name 设置为 abc.container {  container-name: abc;}</k><k>// 根据 abc 容器大小做出响应@container abc (max-width: 200px) {  .text {    font-size: 14px;  }}</k>一个使用场景是：元素在不同的 <k>.container</k> 元素内的样式可以是不同的，取决于当前所在 <k>.container</k> 的样式。\n\n<h4 id="CSS2022topic-4"> hwb</h4>\n支持 hwb（hue, whiteness, blackness） 定义颜色：\n<k>.text {  color: hwb(30deg 0% 20%);}</k>三个参数分别表示：角度 [0-360]，混入白色比例、混入黑色比例。\n角度对应在色盘不同角度的位置，每个角度都有属于自己的颜色值，这个函数非常适合直观的从色盘某个位置取色。\n\n<h4 id="CSS2022topic-5"> lch, oklch, lab, oklab, display-p3 等</h4>\n<k>lch</k>(lightness, chroma, hue)，即亮度、饱和度和色相，语法如：\n<k>.text {  color: lch(50%, 100, 100deg);}</k>chroma(饱和度) 指颜色的鲜艳程度，越高色彩越鲜艳，越低色彩越暗淡。\nhue(色相) 指色板对应角度的颜色值。\n\n<k>oklch</k>(lightness, chroma, hue, alpha)，即亮度、饱和度、色相和透明度。\n\n<k>.text {  color: oklch(59.69% 0.156 49.77 / 0.5);}</k>更多的就不一一枚举说明了，总之就是颜色表达方式多种多样，他们之间也可以互相转换。\n\n<h4 id="CSS2022topic-6"> color-mix()</h4>\ncss 语法支持的 mix，类似 sass 的 mix() 函数功能：\n<k>.text {  color: color-mix(in srgb, #34c9eb 10%, white);}</k>第一个参数是颜色类型，比如 hwb、lch、lab、srgb 等，第二个参数就是要基准颜色与百分比，第三个参数是要混入的颜色。\n\n<h4 id="CSS2022topic-7"> color-contrast()</h4>\n让浏览器自动在不同背景下调整可访问颜色。\n换句话说，就是背景过深时自动用白色文字，背景过浅时自动用黑色文字：\n<k>.text {  color: color-contrast(black);}</k>还支持更多参数，详情见 Manage Accessible Design System Themes With CSS Color-Contrast()。\n\n<h4 id="CSS2022topic-8"> 相对颜色语法</h4>\n可以根据语法类型，基于某个语法将某个值进行一定程度的变化：\n<k>.text {  color: hsl(from var(--color) h s calc(l - 20%));}</k>如上面的例子，我们将 <k>--color</k> 这个变量在 hsl 颜色模式下，将其 l(lightness) 亮度降低 20%。\n\n<h4 id="CSS2022topic-9"> 渐变色 namespace</h4>\n现在渐变色也支持申明 namespace 了，比如：\n<k>.text {  background-image: linear-gradient(to right in hsl, black, white);}</k>这是为了解决一种叫 灰色死区 的问题，即渐变色如果在色盘穿过了饱和度为 0 的区域，中间就会出现一段灰色，而指定命名空间比如 hsl 后就可以绕过灰色死区。\n\n因为 hsl 对应色盘，渐变的逻辑是在色盘上沿圆弧方向绕行，而非直接穿过圆心（圆心饱和度低，会呈现灰色）。\n\n<h4 id="CSS2022topic-10"> accent-color</h4>\naccent-color 主要对单选、多选、进度条这些原生输入组件生效，控制的是它们的主题色：\n<k>body {  accent-color: red;}</k>比如这样设置之后，单选与多选的背景色会随之变化，进度条表示进度的横向条与圆心颜色也会随之变化。\n\n<h4 id="CSS2022topic-11"> inert</h4>\ninert 是一个 attribute，可以让拥有该属性的 dom 与其子元素无法被访问，即无法被点击、选中、也无法通过快捷键选中：\n<k>&lt;div inert>...&lt;/div></k><h4 id="CSS2022topic-12"> COLRv1 Fonts</h4>\nCOLRv1 Fonts 是一种自定义颜色与样式的矢量字体方案，浏览器支持了这个功能，用法如下：\n<k>@import url(https://fonts.googleapis.com/css2?family=Bungee+Spice);@font-palette-values --colorized {  font-family: "Bungee Spice";  base-palette: 0;  override-colors: 0 hotpink, 1 cyan, 2 white;}.spicy {  font-family: "Bungee Spice";  font-palette: --colorized;}</k>上面的例子我们引入了矢量图字体文件，并通过 <k>@font-palette-values --colorized</k> 自定义了一个叫做 <k>colorized</k> 的调色板，这个调色板通过 <k>base-palette: 0</k> 定义了其继承第一个内置的调色板。\n\n使用上除了 <k>font-family</k> 外，还需要定义 <k>font-palette</k> 指定使用哪个调色板，比如上面定义的 <k>--colorized</k>。\n\n<h4 id="CSS2022topic-13"> 视口单位</h4>\n除了 <k>vh</k>、<k>vw</k> 等，还提供了 <k>dvh</k>、<k>lvh</k>、<k>svh</k>，主要是在移动设备下的区别：\n<k>dvh</k>: dynamic vh, 表示内容高度，会自动忽略浏览器导航栏高度。\n\n<k>lvh</k>: large vh, 最大高度，包含浏览器导航栏高度。\n\n<k>svh</k>: small vh, 最小高度，不包含浏览器导航栏高度。\n\n<h4 id="CSS2022topic-14"> :has()</h4>\n可以用来表示具有某些子元素的父元素：\n<k>.parent:has(.child) {}</k>表示选中那些有用 <k>.child</k> 子节点的 <k>.parent</k> 节点。\n\n<h3 id="CSS2022topic-15"><span class="orange"> 即将支持的特性</span></h3>\n<h4 id="CSS2022topic-16"> @scope</h4>\n可以让某个作用域内样式与外界隔绝，不会继承外部样式：\n<k>@scope (.card) {  header {    color: var(--text);  }}</k>如上定义后，<k>.card</k> 内 <k>header</k> 元素样式就被确定了，不会受到外界影响。\n如果我们用 <k>.card { header {} }</k> 来定义样式，全局的 <k>header {}</k> 样式定义依然可能覆盖它。\n\n<h4 id="CSS2022topic-17"> 样式嵌套</h4>\n@nest 提案时 css 内置支持了嵌套，就像 postcss 做的一样：\n<k>.parent {  &amp;:hover {    // ...  }}</k><h4 id="CSS2022topic-18"> prefers-reduced-data</h4>\n@media 新增了 <k>prefers-reduced-data</k>，描述用户对资源占用的期望，比如 <k>prefers-reduced-data: reduce</k> 表示期望仅占用很少的网络带宽，那我们可以在这个情况下隐藏所有图片和视频：\n<k>@media (prefers-reduced-data: reduce) {  picture,  video {    display: none;  }}</k>也可以针对 <k>reduce</k> 情况降低图片质量，至于要压缩多少效果取决于业务。\n\n<h4 id="CSS2022topic-19"> 自定义 media 名称</h4>\n允许给 @media 自定义名称了，如下定义了很多自定义 @media：\n<k>@custom-media --OSdark (prefers-color-scheme: dark);@custom-media --OSlight (prefers-color-scheme: light);@custom-media --pointer (hover) and (pointer: coarse);@custom-media --mouse (hover) and (pointer: fine);@custom-media --xxs-and-above (width >= 240px);@custom-media --xxs-and-below (width &lt;= 240px);</k>我们就可以按照自定义名称使用了：\n<k>@media (--OSdark) {  :root {    …  }}</k><h4 id="CSS2022topic-20"> media 范围描述支持表达式</h4>\n以前只能用 <k>@media (min-width: 320px)</k> 描述宽度不小于某个值，现在可以用 <k>@media (width >= 320px)</k> 代替了。\n\n<h4 id="CSS2022topic-21"> @property</h4>\n@property 允许拓展 css 变量，描述一些修饰符:\n<k>@property --x {  syntax: "&lt;length>";  initial-value: 0px;  inherits: false;}</k>上面的例子把变量 <k>x</k> 定义为长度类型，所以如果错误的赋值了字符串类型，将会沿用其 <k>initial-value</k>。\n\n<h4 id="CSS2022topic-22"> scroll-start</h4>\n<k>scroll-start</k> 允许定义某个容器从某个位置开始滚动：\n<k>.snap-scroll-y {  scroll-start-y: var(--nav-height);}</k><h4 id="CSS2022topic-23"> :snapped</h4>\n:snapped 这个伪类可以选中当前滚动容器中正在被响应的元素：\n<k>.card:snapped {  --shadow-distance: 30px;}</k>这个特性有点像 IOS select 控件，上下滑动后就像个左轮枪一样转动元素，最后停留在某个元素上，这个元素就处于 <k>:snapped</k> 状态。\n同时 JS 也支持了 <k>snapchanging</k> 与 <k>snapchanged</k> 两种事件类型。\n\n<h4 id="CSS2022topic-24"> :toggle()</h4>\n只有一些内置 html 元素拥有 <k>:checked</k> 状态，<k>:toggle</k> 提案是用它把这个状态拓展到每一个自定义元素：\n<k>button {  toggle-trigger: lightswitch;}button::before {  content: "<u+0001f31a> ";}html:toggle(lightswitch) button::before {  content: "<u+0001f31d> ";}</u+0001f31d></u+0001f31a></k>上面的例子把 <k>button</k> 定义为 <k>lightswitch</k> 的触发器，且定义当 <k>lightswitch</k> 触发或不触发时的 css 样式，这样就可以实现点击按钮后，黑脸与黄脸的切换。\n\n<h4 id="CSS2022topic-25"> anchor()</h4>\nanchor() 可以将没有父子级关系的元素建立相对位置关系，更详细的用法可以看 CSS Anchored Positioning。\n\n<h4 id="CSS2022topic-26"> selectmenu</h4>\nselectmenu 允许将任何元素添加为 select 的 option：\n<k>&lt;selectmenu>  &lt;option>Option 1&lt;/option>  &lt;option>Option 2&lt;/option>  &lt;option>Option 3&lt;/option>&lt;/selectmenu></k>还支持更复杂的语法，比如对下拉内容分组：\n<k>&lt;selectmenu class="my-custom-select">  &lt;div slot="button">    &lt;span class="label">Choose a plant&lt;/span>    &lt;span behavior="selected-value" slot="selected-value">&lt;/span>    &lt;button behavior="button">&lt;/button>  &lt;/div>  &lt;div slot="listbox">    &lt;div popup behavior="listbox">      &lt;div class="section">        &lt;h3>Flowers&lt;/h3>        &lt;option>Rose&lt;/option>        &lt;option>Lily&lt;/option>        &lt;option>Orchid&lt;/option>        &lt;option>Tulip&lt;/option>      &lt;/div>      &lt;div class="section">        &lt;h3>Trees&lt;/h3>        &lt;option>Weeping willow&lt;/option>        &lt;option>Dragon tree&lt;/option>        &lt;option>Giant sequoia&lt;/option>      &lt;/div>    &lt;/div>  &lt;/div>&lt;/selectmenu></k>\n\n总结\nCSS 2022 新特性很大一部分是将 HTML 原生能力暴露出来，赋能给业务自定义，不过如果这些状态完全由业务来实现，比如 Antd <k>&lt;Select></k> 组件早已实现自定义下拉选项与样式，既然 HTML 没有提供自定义能力，就按照其交互用 DIV + JS 模拟一套实现出来，定制空间更大。\n\n但也有很多能力依赖浏览器实现，或者本身更适合实现在 CSS 侧，比如 @scope、subgrid、对颜色的处理等。\n\n',
'<h2>Awesome CSS Properties</h2>\n\n<div id="CSSPropertiestoc" class="toc"><a href="#CSSPropertiestopic-0" target="_self">CSS :in-range and :out-of-range pseudo-classes</a>\n<a href="#CSSPropertiestopic-1" target="_self">(a) :in-range</a>\n<a href="#CSSPropertiestopic-2" target="_self">(b) :out-of-range</a>\n<a href="#CSSPropertiestopic-3" target="_self">grayscale( ) function</a>\n<a href="#CSSPropertiestopic-4" target="_self">Glass Effect</a>\n<a href="#CSSPropertiestopic-5" target="_self">Use the following CSS code to style text</a>\n<a href="#CSSPropertiestopic-6" target="_self">CSS clamp( ) function</a>\n<a href="#CSSPropertiestopic-7" target="_self">Center a div</a>\n<a href="#CSSPropertiestopic-8" target="_self">Gradual CSS Linear Gradient</a>\n<a href="#CSSPropertiestopic-9" target="_self">CSS Shake Effect</a>\n<a href="#CSSPropertiestopic-10" target="_self">Text Overflow</a>\n<a href="#CSSPropertiestopic-11" target="_self">\'column-count\' Property</a>\n<a href="#CSSPropertiestopic-12" target="_self">CSS Animations</a>\n<a href="#CSSPropertiestopic-13" target="_self">Shadow Effects</a>\n<a href="#CSSPropertiestopic-14" target="_self">CSS Clipping</a>\n<a href="#CSSPropertiestopic-15" target="_self">CSS background-blend-mode Property</a>\n</div></center>\n\n\n<h3 id="CSSPropertiestopic-0">CSS :in-range and :out-of-range pseudo-classes</h3>\nThese pseudo-classes are used to style inputs within and outside specified range limits.\n<h3 id="CSSPropertiestopic-1">(a) :in-range</h3>\nThe input> element is in-range if its current value is between the bounds of the min and max attributes.\nThis pseudo-class makes it easy to determine whether a field’s current value is acceptable.\n<h3 id="CSSPropertiestopic-2">(b) :out-of-range</h3>\nThe input> element is out-of-range if its current value is outside the bounds of the min and max attributes.\nIt gives the user a visual indication if a field value exceeds its range.\nCSS Code:\n/* in-range */\ninput:in-range{\nbackground-color: rgba(0, 255, 0, 0.25);\n}\n/* out-of-range */\ninput:out-of-range{\nbackground-color: rgba(255, 0, 0, 0.25);\n}\nOutput:\n<img class="lazy" data-="https://miro.medium.com/v2/resize:fit:640/format:webp/1*f3hv4AbQrfBBwbmPMaXcMA.png">\nVisual representation of both in-range and out-of-range pseudo-classes.\nYou should know that these pseudo-classes only apply to elements with a range restriction. \nWithout this limitation, the element could not be in-range or out-of-range.\n<h3 id="CSSPropertiestopic-3">grayscale( ) function</h3>\nYou can use the value 100% to convert images from color to black and white. \nWhen you set this value to 0%, your image will remain the same.\nUsing a value of 100% will convert your image to black and white. \nThis means that there will be no color in the photograph. \n\nYou can use values between 0 and 100% to create a variety of different effects.\nCSS Code:\n.grayscale-image{\nfilter: grayscale(100%);\n}\nOutput:\n<img class="lazy" data-="https://miro.medium.com/v2/resize:fit:640/format:webp/1*2xSZUN7PkoTqjrDjwDB5FA.png">\nImage before and after applying the grayscale( ) function.\n<h3 id="CSSPropertiestopic-4">Glass Effect</h3>\nYou can add the Glass Effect to your next project using a few lines of code. \nYes, it really is that easy. \nGlass effects are beautiful and add elegance to your design.\n<a href="https://css.glass/" target="_blank">Glass.CSS</a> is the most popular glassmorphism generator, where you can create CSS Glass Effects for your project for free. \nAll you need to do is adjust some settings according to your needs and copy-paste the CSS code into your project.\nCSS Code:\n.glass-effect{\n   -webkit-backdrop-filter: blur(6.2px);\n   backdrop-filter: blur(6.2px);\n   background: rgba(255, 255, 255, 0.4);\n   border-radius: 16px;\n   border: 1px solid rgba(255, 255, 255, 0.24); \n}\nResult:\n<img class="lazy" data-="https://miro.medium.com/v2/resize:fit:640/format:webp/1*4NP_n_R1DxlD81y0vPJx1A.png">\nElegant Glass Effect!\n<h3 id="CSSPropertiestopic-5">Use the following CSS code to style text</h3>\nThese are some very basic text styling tips that everyone should know. \nHowever, there are many other advanced options available as well.\nCSS Code:\np{\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 5rem;\n  text-transform: capitalize;\n  text-shadow: 2px 2px 2px pink, 1px 1px 2px pink;\n  text-align: center;\n  font-weight: normal;\n  line-height: 1.6;\n  letter-spacing: 2px;\n}\n<h3 id="CSSPropertiestopic-6">CSS clamp( ) function</h3>\nThe CSS clamp( ) function restricts a value to a range between two upper and lower bounds. \nThere must be a preferred value, a minimum value, and a maximum value.\nClamp( ) comes in handy when font sizes change depending on the viewport.\nCSS Code:\np{\n  font-size: clamp(1.8rem, 2.5vw, 2.8rem);\n}\n\n<h3 id="CSSPropertiestopic-7">Center a div</h3>\nThe most important task for a developer is centering a div. \nThere are so many other options for centering a div. \nIn this example, we used CSS flexbox to center a div horizontally and vertically.\nCSS Code:\ndiv{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n<h3 id="CSSPropertiestopic-8">Gradual CSS Linear Gradient</h3>\nTo create a Gradual CSS Linear Gradient, simply use the CSS code below.\nCSS Code:\ndiv {\n    background: linear-gradient(35deg, #CCFFFF, #FFCCCC, rgb(204, 204, 255));\n    border-radius: 20px;\n    width: 70%;\n    height: 400px;\n    margin: 50px auto;\n  }\nResult:\n<img class="lazy" data-="https://miro.medium.com/v2/resize:fit:640/format:webp/1*KhkmAIZAKIaZ8NHEdgYWrQ.png">\n<h3 id="CSSPropertiestopic-9">CSS Shake Effect</h3>\nThis "shake" animation effect shakes an input field when a user enters invalid input. \nIt is simple but elegant. \nFor instance, the input field will shake if a user enters numbers in a text field instead of letters.\nHTML Code:\n&lt;input id="name" type="text" placeholder="Enter your name" pattern="[A-Za-z]*"/>\nCSS Code:\ninput:invalid{\n      animation: shake 0.2s ease-in-out 0s 2;\n      box-shadow: 0 0 0.4em red;\n}\n  @keyframes shake {\n      0% { margin-left: 0rem; }\n      25% { margin-left: 0.5rem; }\n      75% { margin-left: -0.5rem; }\n      100% { margin-left: 0rem; }\n}\nResult:\n<img class="lazy" data-="https://miro.medium.com/v2/resize:fit:640/1*BIYn6iUEUcb8JUm_uzpjIQ.gif">\nShake effect demo!\n<h3 id="CSSPropertiestopic-10">Text Overflow</h3>\nYou can use this property to truncate overflowing text. \nIt can be clipped and displayed with an ellipsis (...) or with a custom string.\nCSS Code:\n.text {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: clip;\n  width: 200px;\n }\ndiv.text {\n  white-space: nowrap; \n  width: 200px; \n  overflow: hidden;\n  text-overflow: ellipsis;\n  border: 1px solid #000000;\n}  \ndiv.text:hover {\n  overflow: visible;\n}\n<h3 id="CSSPropertiestopic-11">\'column-count\' Property</h3>\nIt specifies the number of columns into which an element should be divided.\nCSS Code:\np{\ncolumn-count: 2;\n}\nResult\n<img class="lazy" data-="https://miro.medium.com/v2/resize:fit:640/format:webp/1*cUahvlvcG5xTTgjhVwrs4A.png">\nColumn count example.\n<h3 id="CSSPropertiestopic-12">CSS Animations</h3>\nAnimation changes an element’s style gradually. \nIt can only be used if keyframes are specified first. \nA keyframe describes how an animated element appears at a specific point in an animation sequence.\nCSS Code:\ndiv{\n  width: 200px;\n  height: 200px;\n  background-color: blue;\n  animation-name: square;\n  animation-duration: 8s;\n}\n@keyframes square{\n  from {background-color: blue;}\n  to {background-color: black;}\n}\n<h3 id="CSSPropertiestopic-13">Shadow Effects</h3>\nUsing CSS, you can add effects both to text and elements. \nDefine properties as text-shadow and box-shadow. \nUse text-shadow to add shadow to text and box-shadow to add shadow to elements.\n(i) text-shadow: It gives the text a shadow.\nh1{\n  color: blue;\n  text-shadow: 2px 2px 4px #000000;\n}\nResult:\n<img class="lazy" data-="https://miro.medium.com/v2/resize:fit:640/format:webp/1*BcwIyweJpJgRXRQh_bl55w.png">\n(ii) box-shadow: It is used to give the elements a shadow effect. \nThe actual div in the example below is purple, and the box shadow is sky-blue and is set 10 pixels to the right and bottom.\ndiv{\n  width: 200px;\n  height: 200px;\n  padding: 15px;\n  background-color: purple;\n  box-shadow: 10px 10px skyblue;\n}\nResult:\n<img class="lazy" data-="https://miro.medium.com/v2/resize:fit:640/format:webp/1*KUzB8uO_YCZ-fnC5xGv4iA.png">\nBox shadow example.\n<h3 id="CSSPropertiestopic-14">CSS Clipping</h3>\nUsing the clip-path property, you can only show a portion of an element while concealing the rest.\nCSS Code:\n.bg{\n  height: 100%;\n  width: 100%;\n  background-color: rgba(199, 62, 133, 0.9);\n  clip-path: polygon(100% 0, 100% 0, 100% 51%, 0 100%, 0 90%, 0 52%, 0 51%);\n  position: absolute;\n}\nResult:\n<img class="lazy" data-="https://miro.medium.com/v2/resize:fit:640/format:webp/1*KZGRxvRrv-LK4NUsiNRXbA.png">\nCSS clip-path property!\n<a class="ae ko" href="https://bennettfeely.com/clippy/" rel="noopener ugc nofollow" target="_blank">Clippy-CSS</a> clip-path maker is a quick and easy way to create complex shapes in CSS by clipping an element to a basic shape (circle, ellipse, polygon, or inset) or an SVG source.\n<h3 id="CSSPropertiestopic-15">CSS background-blend-mode Property</h3>\nThis property describes how the background color and image (or two images) should blend.\nA list of blend modes corresponding to each background image makes up the value. \nBlending mode specifies how background layers blend (color or picture).\nYou can make stunning backgrounds with the background-blend-mode property.\nCSS Code:\ndiv{\n   width: 600px;\n   height: 400px;\n   background-repeat: no-repeat, repeat;\n   background-position: center;\n   background-image: url("flower.png"), url("background-image.png");\n   background-blend-mode: color;\n}\n  \n  \nResult:\n<img class="lazy" data-="https://miro.medium.com/v2/resize:fit:640/format:webp/1*r8JYpwGACq_XWmlMuMRzfw.png">\n\n',
'<h2>Create Tooltips</h2>\nStep 1) Add HTML:\n<div class="tooltip">Hover over me\n  <span class="tooltiptext">Tooltip text</span>\n</div>\n\nStep 2) Add CSS:\n/* Tooltip container */\n.tooltip { position: relative; display: inline-block;\n           border-bottom: 1px dotted black;\n           /* dots under the hoverable */\n}\n\n/* Tooltip text */\n.tooltip .tooltiptext { visibility: hidden; width: 120px; background-color: #555; color: #fff; text-align: center; padding: 5px 0; border-radius: 6px;\n\n/* Position the tooltip text */\n position: absolute; z-index: 1; bottom: 125%; left: 50%; margin-left: -60px;\n\n/* Fade in tooltip */\n opacity: 0; transition: opacity 0.3s;\n}\n\n/* Tooltip arrow */\n.tooltip .tooltiptext::after { content: ""; position:\n   absolute; top: 100%; left: 50%; margin-left: -5px; border-width: 5px; border-style: solid;\n   border-color: #555 transparent transparent transparent;\n}\n\n/* Show tooltip text when mouse over tooltip */\n.tooltip:hover .tooltiptext { visibility: visible;\n                opacity: 1;\n}\n\n',
'<h2>tailwindcss</h2>\n<a href="https://tailwindcss.com/" class="whitebut ">tailwindcss</a>\n<a href="https://tailwindcss.com/docs/ " class="whitebut ">tailwindcss tailwindcss</a>\n\n',
'<h2>create custom tags for HTML</h2>\nAll to do is define CSS content for that tag.\n\nmytag { font-weight: bold; }\n\nAnd now the mytag is your own bold:\n&lt;mytag>This text is in bold&lt;/mytag>\n\n',
'<h2>select an html element that has two class names</h2>\n.class1.class2 {color:red}\n\n&lt;div class="class1 class2">&lt;/div>\n\n&lt;div class="element"/>\n&lt;div class="element last"/>\nYou can just do\n\ndiv.element\n{ // styles effect both divs }\n\ndiv.last\n{ // style will only effect the second and overides because lower in the css }\n\n',
'<h2>HTML Responsive Web Design</h2>\n<div id="ResponsiveWebtoc" class="toc"><a href="#ResponsiveWebtopic-0" target="_self"><pk>What is Responsive Web Design?</pk></a>\n<a href="#ResponsiveWebtopic-1" target="_self"><pk>Setting The Viewport</pk></a>\n<a href="#ResponsiveWebtopic-2" target="_self"><pk>Responsive Images</pk></a>\n<a href="#ResponsiveWebtopic-3" target="_self"> Using the width Property</a>\n<a href="#ResponsiveWebtopic-4" target="_self"> Using the max-width Property</a>\n<a href="#ResponsiveWebtopic-5" target="_self"> Show Different Images Depending on Browser Width</a>\n<a href="#ResponsiveWebtopic-6" target="_self"><pk>Responsive Text Size</pk></a>\n<a href="#ResponsiveWebtopic-7" target="_self"><pk>Media Queries</pk></a>\n<a href="#ResponsiveWebtopic-8" target="_self"><pk>Responsive Web Page - Full Example</pk></a>\n<a href="#ResponsiveWebtopic-9" target="_self"><pk>Responsive Web Design - Frameworks</pk></a>\n<a href="#ResponsiveWebtopic-10" target="_self"><pk>W3.CSS</pk></a>\n<a href="#ResponsiveWebtopic-11" target="_self"><pk>Bootstrap</pk></a>\n</div></center>\n\n\n\nA responsive web design will automatically adjust for different screen sizes and viewports.\n\n<h3 id="ResponsiveWebtopic-0"><pk>What is Responsive Web Design?</pk></h3>\nResponsive Web Design is about using HTML and CSS to automatically resize, hide, shrink, or enlarge, a website, to make it look good on all devices (desktops, tablets, and phones):\n\n<h3 id="ResponsiveWebtopic-1"><pk>Setting The Viewport</pk></h3>\nTo create a responsive website, add the following &lt;meta> tag to all your web pages:\n\n<k>Example</k>\n<r>&lt;meta name="viewport" content="width=device-width, initial-scale=1.0"></r>\nThis will set the viewport of your page, which will give the browser instructions on how to control the page\'s dimensions and scaling.\nHere is an example of a web page <em>without</em> the viewport meta tag, and the same web page <em>with</em> the viewport meta tag:\nWithout the viewport meta tag:\n<img src="https://www.w3schools.com/css/img_viewport1.png">\nWith the viewport meta tag:\n<img src="https://www.w3schools.com/css/img_viewport2.png">\n\n<h3 id="ResponsiveWebtopic-2"><pk>Responsive Images</pk></h3>\nResponsive images are images that scale nicely to fit any browser size.\n\n<h3 id="ResponsiveWebtopic-3"> Using the width Property</h3>\nIf the CSS width property is set to 100%, the image will be responsive and scale up and down:\n<img src="https://www.w3schools.com/html/img_girl.jpg">\n\n<k>Example</k>\n&lt;img src="https://www.w3schools.com/html/img_girl.jpg" <k>style="width:100%;"</k>>\nNotice that in the example above, the image can be scaled up to be larger than its original size.\nA better solution, in many cases, will be to use the max-width property instead.\n\n<h3 id="ResponsiveWebtopic-4"> Using the max-width Property</h3>\nIf the max-width property is set to 100%, the image will scale down if it has to, but never scale up to be larger than its original size:\n<img src="https://www.w3schools.com/html/img_girl.jpg">\n\n<k>Example</k>\n&lt;img src="https://www.w3schools.com/html/img_girl.jpg">\n\n<h3 id="ResponsiveWebtopic-5"> Show Different Images Depending on Browser Width</h3>\nThe HTML &lt;picture> element allows you to define different images for different browser window sizes.\nResize the browser window to see how the image below changes depending on the width:\n<source srcset="img_smallflower.jpg" media="(max-width: 600px)">\n<source srcset="img_flowers.jpg" media="(max-width: 1500px)">\n<source srcset="flowers.jpg">\n<img src="https://www.w3schools.com/html/img_smallflower.jpg">\n\n\n<k>Example</k>\n&lt;picture>\n &lt;source srcset="img_smallflower.jpg" media="(max-width: 600px)">\n &lt;source srcset="img_flowers.jpg" media="(max-width: 1500px)">\n &lt;source srcset="flowers.jpg">\n &lt;img src="https://www.w3schools.com/html/img_smallflower.jpg">\n &lt;/picture> \n\n<h3 id="ResponsiveWebtopic-6"><pk>Responsive Text Size</pk></h3>\nThe text size can be set with a "vw" unit, which means the "viewport width".\nThat way the text size will follow the size of the browser window:\n\nResize the browser window to see how the text size scales.\n\n<k>Example</k>\n&lt;h1>Hello World&lt;/h1>\nViewport is the browser window size.\n1vw = 1% of viewport width.\nIf the viewport is 50cm wide, 1vw is 0.5cm.\n\n<h3 id="ResponsiveWebtopic-7"><pk>Media Queries</pk></h3>\nIn addition to resize text and images, it is also common to use media queries in responsive web pages.\nWith media queries you can define completely different styles for different browser sizes.\nExample: resize the browser window to see that the three div elements below will display horizontally on large screens and stack vertically on small screens:\n<style>\n.menu { width:20%; float:left; }\n.main { width:60%; float:left; }\n.endright { width:20%; float:left; }\n\n@media (max-width:800px) {\n.menu { width:100%; }\n.main { width:100%; }\n.endright { width:100%; }\n}\n</style>\n<div class="menu">\n <div class="blue bord">Left Menu\n\n\n</div>\n</div>\n\n<div class="main">\n <div class="gray bord">Main Content\n\n\n</div>\n</div>\n<div class="endright">\n <div class="green bord">Right Content\n\n\n</div>\n</div>\n\n<k>Example</k>\n&lt;style>\n.left, .endright { float: left; width: 20%; /* The width is 20%, by default */ }\n.main { float: left; width: 60%; /* The width is 60%, by default */ }\n/* Use a media query to add a breakpoint at 800px: */\n  @media screen and (max-width: 800px) {\n   .left, .main, .endright { width: 100%; /* The width is 100%, when the viewport is 800px or smaller */ }\n}\n&lt;/style>\n<k>Tip:</k> To learn more about Media Queries and Responsive Web Design, read our <a href="/css/css_rwd_intro.asp">RWD Tutorial</a>.\n\n<h3 id="ResponsiveWebtopic-8"><pk>Responsive Web Page - Full Example</pk></h3>\nA responsive web page should look good on large desktop screens and on small mobile phones.\nEver heard about <k>W3Schools Spaces</k>? Here you can create your website from scratch or use a template, and host it for free.\n<a href="https://www.w3spaces.com" target="_blank">Get started for free ❯</a>\n<em>* no credit card required</em>\n\n<h3 id="ResponsiveWebtopic-9"><pk>Responsive Web Design - Frameworks</pk></h3>\nAll popular CSS Frameworks offer responsive design.\nThey are free, and easy to use.\n\n<h3 id="ResponsiveWebtopic-10"><pk>W3.CSS</pk></h3>\nW3.CSS is a modern CSS framework with support for desktop, tablet, and mobile \ndesign by default.\nW3.CSS is smaller and faster than similar CSS frameworks.\nW3.CSS is designed to be independent of jQuery or any other JavaScript library.\n\nTo learn more about W3.CSS, read our <a href="https://www.w3schools.com/w3css/default.asp">W3.CSS Tutorial</a>.\n\n<h3 id="ResponsiveWebtopic-11"><pk>Bootstrap</pk></h3>\nAnother popular CSS framework is Bootstrap:\n\n',
'<h2>CSS 中使用 RegEx</h2>\n<div id="CSS中使用toc" class="toc"><a href="#CSS中使用topic-0" target="_self">当类名越来越多时</a>\n<a href="#CSS中使用topic-1" target="_self">CSS + “正则” = 双赢</a>\n<a href="#CSS中使用topic-2" target="_self"> (^) 插入符</a>\n<a href="#CSS中使用topic-3" target="_self"> (*) 星号</a>\n<a href="#CSS中使用topic-4" target="_self"> ($) 美元符</a>\n<a href="#CSS中使用topic-5" target="_self">实践例子：从混乱到优雅</a>\n<a href="#CSS中使用topic-6" target="_self">1. 给新品加标识</a>\n<a href="#CSS中使用topic-7" target="_self">2. 为畅销商品加特殊背景</a>\n<a href="#CSS中使用topic-8" target="_self">处理缺货商品 (out-of-stock)</a>\n<a href="#CSS中使用topic-9" target="_self">按优先级排序</a>\n<a href="#CSS中使用topic-10" target="_self">正则式选择器小结</a>\n<a href="#CSS中使用topic-11" target="_self">结语</a>\n</div></center>\n\n\n\n在 CSS 里以正则提升效率\n<h3 id="CSS中使用topic-0">当类名越来越多时</h3>举个例子：你在做一个商品列表页面，每个商品都有可能是：\n新品（new）\n畅销（best-seller）\n暂时缺货（out-of-stock）\n甚至多种状态叠加\n如果你为这些状态分别写不同的类，比如 .new、.bestseller、.out-of-stock，然后在 HTML 里疯狂堆叠类名，就会发现 CSS 变得十分臃肿、不易维护。\n<h3 id="CSS中使用topic-1">CSS + “正则” = 双赢</h3>好消息是，CSS 提供了三种与正则思路类似的特殊属性选择器，让我们可以更灵活地筛选类名。\n<k id="CSS中使用topic-2"> (^) 插入符</k>：匹配以某字符串开头的类名\n例：div[class^="card"] 匹配所有类名以 card 开头的元素\n<k id="CSS中使用topic-3"> (*) 星号</k>：匹配在任意位置出现的子串\n例：div[class*="new"] 匹配类名里含有 new 的所有元素\n<k id="CSS中使用topic-4"> ($) 美元符</k>：匹配以特定字符串结尾的类名\n例：div[class$="prioritize"] 匹配类名以 prioritize 结尾的元素\n有了它们，我们就能用更加简洁的方式来管理各种状态，而无需定义一堆独立类。\n<h3 id="CSS中使用topic-5">实践例子：从混乱到优雅</h3>假设我们想给“新品”商品加一个“新”角标或标志，以往的做法是：\n&lt;div class="card new">&lt;/div>\n然后在 CSS 里用 .new 做对应样式。\n但如果改用“正则”选择器，我们可以只写一个带有 new 的类名，如：card-new。\n<h3 id="CSS中使用topic-6">1. 给新品加标识</h3>div[class*="new"] {\n    content: url(\'new-icon.png\');\n}\n只要类名里包含“new”，就会自动加载新品图标。\n比如：\n&lt;div class="card-new"> ... &lt;/div>\n即可匹配到这个规则。\n<h3 id="CSS中使用topic-7">2. 为畅销商品加特殊背景</h3>类似地，如果类名里含有 seller，可以这样写：\ndiv[class*="seller"] {\n    background-color: gold;\n}\n那么像 card-seller 或 card-new-seller 都会触发该样式。\n这样一来，如果有一个商品既是新品又是畅销，只要设置类名为 card-new-seller，同时包含 new 和 seller，就能叠加两种效果，无需再为多重状态编写额外 CSS 规则。\n<h3 id="CSS中使用topic-8">处理缺货商品 (out-of-stock)</h3>对缺货商品，可以在类名中包含 out，例如：card-out。\n在 CSS 中只需写：\ndiv[class*="out"] {\n    filter: grayscale(80%);\n    opacity: 0.5;\n}\n结果就是所有带 out 关键字的商品，都统一呈现“灰阶 + 半透明”的视觉效果。\n而如果商品既是新品，又缺货，又是畅销，只要类名是 card-new-seller-out，就能自动应用所有相应的样式规则。\n<h3 id="CSS中使用topic-9">按优先级排序</h3>假设我们想让有些商品在列表中排在最前面，可以用 prioritize 字样。\ndiv[class*="prioritize"] {\n    order: -1; /* 在 flex 或 grid 容器中可以让它排在前面 */\n}\n如果你希望把它放在末尾，可以改成：\ndiv[class$="prioritize"] {\n    order: 999;\n}\n另外，如果想排除缺货的优先级高商品，可以在选择器加上 :not()，比如：\ndiv[class*="prioritize"]:not([class*="out"]) {\n    order: -1;\n}\n这样就不会把“既优先又缺货”的商品也放到最前。\n<h3 id="CSS中使用topic-10">正则式选择器小结</h3>**^=**：定位以某字符串开头的类名\n***=**：搜索类名任意位置\n**$=**：匹配以某字符串结尾的类名\n这三种方式让我们可以“巧妙地”给不同类名加上相同前缀或后缀，不同子字符串，就能轻松管理多重状态。\n相比传统的“一堆独立类再手动组合”，这种写法更紧凑，维护起来也更轻松。\n<h3 id="CSS中使用topic-11">结语</h3>“在 CSS 中用正则”听上去可能有点稀奇，但只要掌握了 ^, *, $ 这三个巧妙的小技巧，就能大幅简化对多状态类名的管理，让你的 CSS 文件告别混乱。\n',
'<h2>object-position</h2>Now, say your image was cropped with <k>object-fit</k>, but the part of the image that’s shown is not positioned as you’d like. You can use the <em>object-position</em> property to control exactly that.\nLet’s start with our <k>object-fit: cover</k> example:\n<code>.alligator-turtle { object-fit: cover; width: 300px; height: 337px;}</code>\n<img src="https://d33wubrfki0l68.cloudfront.net/a9c7e461090fc25097e6391a5bb823b0f28ba008/1672b/images/css/object-fit/example-object-fit.jpg">\nNow let’s change the position of the visible part of the image on the X axis so that we see the right-most edge of the image:\n<code>.alligator-turtle { object-fit: cover; object-position: 100% 0; width: 300px; height: 337px;}</code>\n<img src="https://d33wubrfki0l68.cloudfront.net/a9c7e461090fc25097e6391a5bb823b0f28ba008/1672b/images/css/object-fit/example-object-fit.jpg">\nAnd finally, here’s what happens if you provide a position that’s out of bounds:\n<code>.alligator-turtle { object-fit: cover; object-position: -20% 0; width: 300px; height: 337px;}</code>\n<img src="https://d33wubrfki0l68.cloudfront.net/a9c7e461090fc25097e6391a5bb823b0f28ba008/1672b/images/css/object-fit/example-object-fit.jpg">',
'<h2>新一代CSS选择器</h2>\n<div id="新一代CSS选择器toc" class="toc"><a href="#新一代CSS选择器topic-0" target="_self">:is() 选择器：组合选择的神器</a><br><a href="#新一代CSS选择器topic-1" target="_self">:where() 选择器：零特异性的福音</a><br><a href="#新一代CSS选择器topic-2" target="_self">:has() 关系选择器：父元素选择的革命</a><br><a href="#新一代CSS选择器topic-3" target="_self">属性选择器通配符匹配</a><br><a href="#新一代CSS选择器topic-4" target="_self">:nth-child() 进阶用法</a><br><a href="#新一代CSS选择器topic-5" target="_self">复合选择器优化</a><br><a href="#新一代CSS选择器topic-6" target="_self">媒体查询容器</a><br></div></center><br><br>\n\n<h3 id="新一代CSS选择器topic-0">:is() 选择器：组合选择的神器</h3>:is()选择器可以将多个选择器分组，大幅减少重复代码。\n/* 之前的写法 */\nheader p, main p, footer p { line-height: 1.6;}\n\n/* 使用:is()的写法 */\n:is(header, main, footer) p { line-height: 1.6; }\n\n<h3 id="新一代CSS选择器topic-1">:where() 选择器：零特异性的福音</h3>:where()的功能类似:is()，但特异性为0，让样式更容易被覆盖。\n/* 特异性较高 */\narticle :is(header, footer) p { color: #333; }\n\n/* 特异性为0，更容易覆盖 */\narticle :where(header, footer) p { color: #333; }\n\n<h3 id="新一代CSS选择器topic-2">:has() 关系选择器：父元素选择的革命</h3>:has()让我们终于可以基于子元素选择父元素。\n/* 选择包含图片的段落 */\np:has(img) { display: flex; align-items: center; }\n\n/* 选择后面有标题的段落 */\np:has(+ h2) { margin-bottom: 2em; }\n\n<h3 id="新一代CSS选择器topic-3">属性选择器通配符匹配</h3>使用属性选择器的通配符匹配可以更灵活地选择元素。\n/* 选择所有数据属性 */\n[data-*="important"] { font-weight: bold; }\n\n/* 选择特定语言的元素 */\n[lang|="en"] { font-family: \'Arial\', sans-serif; }\n\n<h3 id="新一代CSS选择器topic-4">:nth-child() 进阶用法</h3>使用公式选择特定元素，实现复杂的选择模式。\nli:nth-child(n+4) { margin-top: 1em; }\nli:nth-child(-n+5) { font-weight: bold; }\n\n<h3 id="新一代CSS选择器topic-5">复合选择器优化</h3>组合多个选择器条件，实现精确匹配。\n/* 同时满足多个条件 *、\nbutton[type="submit"]:not(:disabled):hover {transform: translateY(-1px);}\n\n<h3 id="新一代CSS选择器topic-6">媒体查询容器</h3>使用容器查询，实现更精确的响应式设计。\n@container sidebar (min-width: 400px) { .widget { display: grid; grid-template-columns: 1fr 1fr; } }\n',
]
ImgList = cssTips
