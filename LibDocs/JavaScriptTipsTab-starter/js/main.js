// List of JavaScript tips
var JavaScriptTips = [
'onkeydown Event :<br><br>The user pushes a keyboard key<br>&lt;input type="text" onkeydown="myFunction()"><br>&lt;p id="demo">&lt;/p><br>function myFunction() {<br>  document.getElementById("demo").innerHTML = "You pressed a key";<br>}',
'onload Event :<br><br>The browser has finished loading the page<br>&lt;body onload="myFunction()">',
'difference between slice() and substring() :<br><br>substring() cannot accept negative indexes<br>Syntax: string.slice(start, stop);<br>Syntax: string.substring(start, stop);<br><br>Distinctions of substring():<br>If start > stop, then substring will swap those 2 arguments.<br>If either argument is negative or is NaN, it is treated as if it were 0.<br><br>Distinctions of slice():<br>If start > stop, slice() will return the empty string. ("")<br>If start is negative: sets char from the end of string<br>',
'Keywords: continue :<br><br>Jumps out of a loop and starts at the top<br>let text = "";<br><br>for (let i = 0; i < 5; i++) {<br>  if (i === 3) continue;<br>  text += i + "<br>";<br>} // 0 1 2 4<br>',
'Keywords: try ... catch :<br><br>Implements error handling to a block of statements<br>The try statement allows you to define a block of code to be tested for errors.<br>The catch statement allows you to define a block of code to be executed, if an error occurs in the try block.<br>The finally statement lets you execute code, after try and catch, regardless of the result.<br><br>try {<br>  adddlert("Welcome guest!");<br>}<br>catch(err) {<br>  document.getElementById("demo").innerHTML = err.message;<br>}<br>finally {<br>  document.getElementById("demo").value = "";<br>}<br><br>try {<br>  eval("alert(\'Hello)");   // Missing \' will produce an error<br>}<br>catch(err) {<br>  document.getElementById("demo").innerHTML = err.name;<br>}<br>',
':input, eg. $(\":input\") :<br><br>selects All input elements<br>&lt;input type="button" value="Another useless button">&lt;br><br>&lt;input type="reset" value="Reset"><br>&lt;input type="submit" value="Submit">&lt;br><br><br>22 input types:<br>"button","checkbox","color","date","datetime-local","email","file","hidden","image","month","number","password","radio","range","reset","search","submit","tel","text","time","url","week"',
'event.which :<br><br>Returns which keyboard key or mouse button was pressed for the event<br>$("input").keydown(function(event){<br>  $("div").html("Key: " + event.which); // 32 for space, 50 for @<br>});<br>',
'prependTo() :<br><br>Inserts HTML elements at the beginning of selected elements<br>$("<span>Hello World!</span>").prependTo("p");',
'map() :<br><br>Passes each element in the matched set through a function, producing a new jQuery object containing the return values<br>Examples<br>const numbers = [4, 9, 16, 25];<br>const newArr = numbers.map(Math.sqrt)<br><br>const numbers = [65, 44, 12, 4];<br>const newArr = numbers.map(myFunction)<br>function myFunction(num) { return num * 10; }<br><br>const persons = [<br>  {firstname : "Malcom", lastname: "Reynolds"},<br>  {firstname : "Kaylee", lastname: "Frye"},<br>  {firstname : "Jayne", lastname: "Cobb"}<br>];<br>persons.map(getFullName);<br>function getFullName(item) { return [item.firstname,item.lastname].join(" "); }',
'$.post() :<br><br>Loads data from a server using an AJAX HTTP POST request<br>$("input").keyup(function(){<br>  var txt = $("input").val();<br>  $.post("demo_ajax_gethint.asp", {suggest: txt}, function(result){<br>    $("span").html(result);<br>  });<br>});<br><br>$("button").click(function(){<br>  $.post("demo_test.asp", function(data, status){<br>    alert("Data: " + data + "<br>Status: " + status);<br>  });<br>});<br>',
'serialize() :<br><br>Encodes a set of form elements as a string for submission<br>$("button").click(function(){<br>  $("div").text($("form").serialize());<br>});<br><br>$.ajax({<br>    type : "POST",<br>    url : "url",<br>    data : $("#form").serialize() + "&par1=1&par2=2&par3=232"<br>}<br>',
'JavaScript Class:<br><br><pre>Use the keyword <i>class</i> to create a class.<br>Always add a method named <i>constructor()</i> to define properties.<br>A JavaScript class is <b>not</b> an object.<br>It is a <b>template</b> for JavaScript objects.<br><br>class Car {<br>   constructor(name, year) {<br>    this.name = name;<br>    this.year = year;<br>  }<br>}<br><br>When you have a class, you can use the class to create objects:<br>let myCar1 = new Car("Ford", 2014);<br>let myCar2 = new Car("Audi", 2019);<br><h3>Class Methods</h3><br><br>Use the keyword <i>class</i> to create a class.<br>Always add a <i>constructor()</i> method.<br>Then add any number of methods.<br><br>class ClassName {<br>  constructor() { ... }<br>  method_1() { ... }<br>  method_2() { ... }<br>  method_3() { ... }<br>}<br><br>class Car {<br>   constructor(name, year) {<br>    this.name = name;<br>    this.year = year;<br>   }<br>  age() {<br>    let date = new Date();<br>    return date.getFullYear() - this.year;<br>   }<br>}<br><br>let myCar = new Car("Ford", 2014);<br>document.getElementById("demo").innerHTML =<br>"My car is " + myCar.age() + " years old.";</pre>',
'<h2>JavaScript Global Methods and Properties</h2><table><br><tr><th>Name</th><th>Description</th></tr><br><tr><td><a href="jsref_decodeuri.asp">decodeURI()</a></td><td>Decodes a URI</td></tr><br><tr><td><a href="jsref_decodeuricomponent.asp">decodeURI<br>Component()</a></td><td>Decodes a URI component</td></tr><br><tr><td><a href="jsref_encodeuri.asp">encodeURI()</a></td><td>Encodes a URI</td></tr><br><tr><td><a href="jsref_encodeuricomponent.asp">encodeURI<br>Component()</a></td><td>Encodes a URI component</td></tr><br><tr><td><a href="jsref_eval.asp">eval()</a></td><td>Evaluates a string and executes it as if it was script code</td></tr><br><tr><td><a href="jsref_infinity.asp">Infinity</a></td><td>A numeric value that represents positive/negative infinity</td></tr><br><tr><td><a href="jsref_isfinite.asp">isFinite()</a></td><td>Determines whether a value is a finite, legal number</td></tr><br><tr><td><a href="jsref_isnan.asp">isNaN()</a></td><td>Determines whether a value is an illegal number</td></tr><br><tr><td><a href="jsref_nan.asp">NaN</a></td><td>&quot;Not-a-Number&quot; value</td></tr><br><tr><td><a href="jsref_number.asp">Number()</a></td><td>Converts an object\'s value to a number</td></tr><br><tr><td><a href="jsref_parsefloat.asp">parseFloat()</a></td><td>Parses a string and returns a floating point number</td></tr><br><tr><td><a href="jsref_parseint.asp">parseInt()</a></td><td>Parses a string and returns an integer</td></tr><br><tr><td><a href="jsref_string.asp">String()</a></td><td>Converts an object\'s value to a string</td></tr><br><tr><td><a href="jsref_undefined.asp">undefined</a></td><td>Indicates that a variable has not been assigned a value</td></tr><br><tr><td><a href="jsref_unescape.asp">unescape()</a></td><td><span class="deprecated">Deprecated</span>. Use instead:<br><a href="jsref_decodeuri.asp">decodeURI()</a><br><a href="jsref_decodeuricomponent.asp">decodeURIComponent()</a></td></tr><br></table><br></div><br><h3>Note</h3><br>Since these methods are global, and global the object is the browser window, these methods are actually window methods:<br>isNaN() is the same as window.isNaN().',
'Don\'t forget the var keyword when assigning a variable\'s value for the first time.<br>When to Use JavaScript var?<br>Always declare JavaScript variables with var, let, or const.<br>If you want your code to run in older browsers, you must use var.',
'undefined, null, 0, false, NaN, and \'\' (empty string) are all falsy.',
'Declare a function with<br/> function <em>myFunctionName</em>() { <br>&nbsp;&nbsp;...<br> }',
'if/else statements look like <br/> if (<em>condition</em>) { <br/>&nbsp;&nbsp;...<br/>} else { <br/>&nbsp;&nbsp;...<br/>}',
'You can return the result of a function into a variable with return:<br><br>function timesFive(inputNumber) {<br> &nbsp;&nbsp;return inputNumber * 5; <br>}<br>console.log(timesFive(6));<br>// Output: 30 ',
'The && operator means both things must be true: <br/>true && true = true<br>true && false = false<br>false && false = false',
'The || operator means either can be true: <br/>true || true = true<br>true || false = true<br>false || false = false',
'A <k>for</k> has three condtions: a start condition, a stop condition, and an iterator: <br><br>for (var i = 0; i < myArray.length; i++) { <br>&nbsp;&nbsp;...<br>}',
'To interpolate a variable into a string, use the + operator, like this: <br><br>var myName = \'Jon\';<br/> \'Hello, my name is \' + myName;',
'To generate a random number, use JavaScript\'s built in function Math.random().',
'Arrays hold lists of data. You can access any of the list items by using bracket notation, like this: <br><br>var myArray = [\'pears\', \'asparagus\', \'bananas\'];<br>myArray[1]; // asparagus',
'jQuery selectors start with the dollar sign and parentheses :<br><br>$()',
'jQuery element selector selects element name :<br><br>$(\'p\'), $(\'div\'), $(\'p\').hide();',
'jQuery #id selector selects the id tag :<br><br>$(\'#test\'),  $(\'#test\').hide();',
'jQuery class selector finds a specific class \'test\' to hide it :<br><br>$(\'.test\').hide();',
'Selects all elements :<br><br>$(\'*\')',
'Selects the current HTML element :<br><br>$(this)',
'Selects all &lt;p&gt; elements with class=\'intro\' :<br><br>$(\'p.intro\')',
'Selects the first &lt;p&gt; element :<br><br>$(\'p:first\')',
'Selects the first &lt;li&gt; element of the first &lt;ul&gt; :<br><br>$(\'ul li:first\')',
'Selects the first &lt;li&gt; element of every &lt;ul&gt; :<br><br>$(\'ul li:first-child\')',
'Selects all elements with an href attribute :<br><br>$(\'[href]\')',
'Selects all &lt;a&gt; elements \"_blank\" :<br><br>$(\'a[target=\'_blank\']\')',
'Selects all &lt;a&gt; elements NOT \"_blank\" :<br><br>$(\'a[target!=\'_blank\']\')',
'Selects all &lt;button&gt; elements and &lt;input&gt; elements of type=\'button\' :<br><br>$(\':button\')',
'Selects all even &lt;tr&gt; elements :<br><br>$(\'tr:even\')',
'Selects all odd &lt;tr&gt; elements in a table :<br><br>$(\'tr:odd\')',
'display data by writing into an HTML element :<br><br>document.getElementById(\"demo\").innerHTML = 5 + 6;',
'display data by writing into the HTML output :<br><br>document.write(5 + 6); will delete all existing HTML',
'display data by writing into an alert box :<br><br>window.alert(5 + 6);',
'display data by writing into the browser console :<br><br>console.log(5 + 6);',
'Javascript Object :<br><br>var car = {type:\"Fiat\', model:\"500\', color:\"white\"};',
'Object Properties :<br><br>The name:values pairs',
'Object Methods :<br><br>Methods are properties stored as function<br>const person = {<br>  firstName: "John\',<br>  lastName: "Doe\',<br>  fullName: function() {<br>    return this.firstName + " " + this.lastName;<br>  }<br>};',
'Object Spaces and line breaks are not important :<br><br>Object definition can span multiple lines',
'Accessing Object Properties :<br><br>objectName.propertyName, or objectName[\"propertyName\"]',
'Accessing Object Methods :<br><br>objectName.methodName(), with ()',
'Local variables have local scope :<br><br>Local scope can only be accessed within the function.',
'Global variable has global scope :<br><br>All scripts and functions on a web page can access global variable',
'Assigning value to a not declared variable :<br><br>Automatically become a GLOBAL variable.',
'onchange Event :<br><br>An HTML element has been changed',
'convert number to string<br><br>num.toString()',
'onclick Event :<br><br>The user clicks an HTML element',
'onmouseover Event :<br><br>The user moves the mouse over an HTML element',
'onmouseout Event :<br><br>The user moves the mouse away from an HTML element',
'String Length Methods :<br><br>var sln = txt.length;',
'String indexOf() method:first occurrence of a specified text :<br><br>var pos = str.indexOf(\"locate\");',
'String lastIndexOf() method:last occurrence of a specified text :<br><br>var pos = str.lastIndexOf(\"locate\");',
'String lastIndexOf() method: accept a second parameter as starting position for the search :<br><br>var pos = str.indexOf(\"locate\',15);',
'String search() method: searches a string :<br><br>str=\"String search() method: searches a string :\"<br><br>pos = str.search(\"method\");',
'String slice() method: extracts a part of a string :<br><br>var res = str.slice(7, 13);',
'String slice() method: negative parameter, counted from the end :<br><br>var res = str.slice(-12, -6);',
'String slice() method: omit the second parameter, slice out the rest :<br><br>var res = str.slice(7);',
'String slice() method: counting from the end :<br><br>var res = str.slice(7);',
'difference between slice() and substr() :<br><br>second parameter specifies the length of the extracted part<br>String.slice( begin, end )<br>String.substr( start, length )<br>',
'replace() method replaces value :<br><br>var n = str.replace(\"Microsoft\', \"W3Schools\");',
'regular expression to replace all matches, with a /g flag :<br><br>var n = str.replace(/Microsoft/g, \"W3Schools\");',
'replace() is case sensitive, To replace case insensitive use /i flag :<br><br>var n = str.replace(/MICROSOFT/i, \"W3Schools\");',
'toUpperCase(): convert to upper case :<br><br>var text2 = text1.toUpperCase();',
'toLowerCase(): convert to lower case :<br><br>var text2 = text1.toLowerCase();',
'concat() joins two or more strings :<br><br>var text3 = text1.concat(\" \', text2);',
'concat() method can use the plus operator :<br><br>var text = \"Hello\" + \" \" + \"World!\";',
'charAt() method returns the character at a specified position :<br><br>str.charAt(0);<br>let text = \'HELLO WORLD\';<br>let letter = text.charAt(1); // E',
'charCodeAt() method returns the unicode of the character at a specified index :<br><br>str.charCodeAt(0);',
'split() method convert string to an array :<br><br>txt.split(","); // Split on commas',
'to end each executable statement :<br><br>Add a semicolon',
'add white space to script to make it more readable :<br><br>JavaScript ignores multiple spaces',
'group javaScript statements in code blocks :<br><br>inside curly brackets {...}',
'Keywords: break :<br><br>Terminates a switch or a loop',
'Keywords: debugger :<br><br>Stops the execution and calls the debugging function',
'Keywords: do ... while :<br><br>Executes a block of statements, and repeats while a condition is true',
'Keywords: for :<br><br>Marks block of statements to be executed as long as condition is true',
'Keywords: function :<br><br>Declares a function',
'Keywords: if ... else :<br><br>Marks a block of statements to be executed, depending on condition<br>switch(expression) {<br>  case x:<br>    // code block<br>    break;<br>  case y:<br>    // code block<br>    break;<br>  default:<br>    // code block<br>}<br>let day;<br>switch (new Date().getDay()) {<br>  case 0:<br>    day = "Sunday";<br>    break;<br>  case 1:<br>    day = "Monday";<br>    break;<br>  case 2:<br>    day = "Tuesday";<br>    break;<br>  case 3:<br>    day = "Wednesday";<br>    break;<br>  case 4:<br>    day = "Thursday";<br>    break;<br>  case 5:<br>    day = "Friday";<br>    break;<br>  case  6:<br>    day = "Saturday";<br>}<br>',
'Keywords: return :<br><br>Exits a function',
'Keywords: switch :<br><br>Marks a block of statements to be executed, depending on different cases',
'Keywords: var :<br><br>Declares a variable',
'<h3>convert a string to a number</h3><br>using the unary plus operator (+)<br>quantity = "12";<br>+quantity<br><br>convert array of string to a number<br>var arr = ["1", "2", "3"];<br>var nums = arr.map(unaryOp);<br><br>// Function that converts string to number<br>function unaryOp(value) { return +value; }<br>',
'modular operator (%) :<br><br>returns the division remainder. var z = x % y',
'increment operator (++) :<br><br>increments numbers. x++;',
'Exponentiation ** :<br><br>10 ** 2',
'Shift left &lt;&lt; :<br><br>x &lt;&lt; 2<br>The left shift(<<) is a binary operator that takes two numbers,<br>left shifts the bits of the first operand,<br>and the second operand decides number of places to shift.<br><br>Left-shifting is equivalent to multiplying (2 raised to power b)<br><br>',
'Shift right (unsigned) &gt;&gt;&gt; :<br><br>x &gt;&gt;&gt; 2',
'Equal comparator :<br><br>x == y',
'Strict equal :<br><br>x === y<br>equal value and type<br>	5 === "5"	false',
'Logical and :<br><br>&&',
'Logical or :<br><br>||',
'<h3>jQuery get the image src</h3>$(".class").find("tag").attr("src");',
'Math.PI; :<br><br>returns 3.141592653589793',
'Math.round() :<br><br>Math.round(4.4); returns the value of x rounded to its nearest integer:',
'Math.pow() :<br><br>Math.pow(8, 2); returns the value of x to the power of y:',
'Math.sqrt() :<br><br>Math.sqrt(64);',
'Math.abs() :<br><br>Math.abs(-4.7);',
'Math.ceil() :<br><br>Math.ceil(4.4);',
'Math.floor() :<br><br>Math.floor(4.7);',
'Math.sin() :<br><br>Math.sin(90 * Math.PI / 180);',
'Math.min() :<br><br>Math.min(0, 150, 30, 20, -8, -200);',
'Math.random() :<br><br>Math.random();',
'Math.E :<br><br>returns Euler\'s number',
'Math.SQRT2 :<br><br>returns the square root of 2',
'Math.SQRT1_2 :<br><br>returns the square root of 1/2',
'Math.LN2 :<br><br>returns the natural logarithm of 2',
'Math.LN10 :<br><br>returns the natural logarithm of 10',
'Math.LOG2E :<br><br>returns base 2 logarithm of E',
'Math.LOG10E :<br><br>returns base 10 logarithm of E',
'<k>find unique items in array</k><br>myArray = ["a", 1, "a", 2, "1"];<br>uniqueItems = [...new Set(myArray)]<br>["a", 1, 2, "1"]<br>',
'abs(x) :<br><br>Returns the absolute value of x',
'acos(x) :<br><br>Returns the arccosine of x, in radians',
'asin(x) :<br><br>Returns the arcsine of x, in radians',
'atan(x) :<br><br>Returns the arctangent of x as a numeric value between -PI/2 and PI/2 radians',
'atan2(y, x) :<br><br>Returns the arctangent of the quotient of its arguments',
'ceil(x) :<br><br>Returns the value of x rounded up to its nearest integer',
'cos(x) :<br><br>Returns the cosine of x (x is in radians)',
'exp(x) :<br><br>Returns the value of Ex',
'floor(x) :<br><br>Returns the value of x rounded down to its nearest integer',
'log(x) :<br><br>Returns the natural logarithm (base E) of x',
'max(x, y, z, ..., n) :<br><br>Returns the number with the highest value',
'min(x, y, z, ..., n) :<br><br>Returns the number with the lowest value',
'pow(x, y) :<br><br>Returns the value of x to the power of y',
'random() :<br><br>Returns a random number between 0 and 1',
'round(x) :<br><br>Returns the value of x rounded to its nearest integer',
'sin(x) :<br><br>Returns the sine of x (x is in radians)',
'sqrt(x) :<br><br>Returns the square root of x',
'tan(x) :<br><br>Returns the tangent of an angle',
'Math.random() :<br><br>returns a random number between 0 (inclusive),  and 1 (exclusive) Math.random();',
'Random Integers :<br><br>Math.floor(Math.random() * 10);',
'Displaying Dates :<br><br>document.getElementById(\"demo\").innerHTML = Date();',
'Creating Date Objects :<br><br>new Date(dateString), Date(milliseconds)',
'date object from the specified date and time :<br><br>var d = new Date(\"October 13, 2014 11:13:00\");',
'HTML onclick event :<br><br>In HTML: &lt;element onclick=\"myScript\"&gt;',
'JavaScript onclick function :<br><br>In JavaScript: object.onclick = function(){myScript};',
'JavaScript onclick using the addEventListener() method :<br><br>object.addEventListener(\"click\', myScript);',
'JavaScript onclick object example :<br><br>document.getElementById(\"demo\").onclick = function() {myFunction()};',
'HTML set object content :<br><br>document.getElementById(\"demo\").innerHTML = \"Changed!\";',
'JavaScript prompt for input :<br><br>var person = prompt(\"Please enter your name\', \"Harry Potter\");',
'JavaScript concat strings :<br><br>\"Hello \" + person + \"! How are you?\";',
'JavaScript Display an alert box :<br><br>alert(\"Hello! I am an alert box!!\");',
'HTML DOM writeln() Method :<br><br>document.writeln(\'Hello there!\');',
'HTML DOM writeln with attributes :<br><br>document.writeln(\'&lt;font face=\"Arial\" size=\"5\" color=\"red\"&gt;Hello there!&lt;/font&gt;\');',
'HTML opening a new window :<br><br>&lt;a href=\"link.html\" target=\"_blank\"&gt;Click Here&lt;/a&gt;',
'HTML opening a new window with name :<br><br>&lt;a href=\"link.html\" target=\"mywindow\"&gt;Click Here&lt;/a&gt;',
'JavaScript Opening A Window :<br><br>window.open(\'link.html\',\'mywindow\');',
'JavaScript onclick Opening A Window :<br><br>&lt;a href=\"#\" onClick=\"window.open(\'link.html\',\'mywindow\');\"&gt;Click Here&lt;/a&gt;',
'JavaScript window.open set window features :<br><br>window.open(\'link.html\',\'mywindow\',\'window features\');',
'JavaScript window.open location bar and status bar :<br><br>window.open(\'link.html\',\'mywindow\',\'location, status\');',
'JavaScript window.open Features :<br><br>menubar, scrollbar, width, height, toolbar, location, resizable, directories',
'JavaScript window.open Features sample :<br><br>window.open(\'window1.htm\',\'newwindow\',\'height=300,width=200,status,scrollbars\');',
'Javascript Link Events :<br><br>including JavaScript without &lt;script&gt; tags in HTML',
'Javascript Link Events execute when certain things happen :<br><br>&lt;a href=\"#\" onClick=\"JavaScript Code\"&gt;Click Here&lt;/a&gt;',
'three ways of executing Link Events :<br><br>onClick, onMouseOver, onMouseOut',
'Link Events for image swaps (mouseover images) :<br><br>&lt;a href=\"index.htm\" onMouseOver=\"button.src=\'homeon.gif\';\" onMouseOut=\"button.src=\'home.gif\';\"&gt;&lt;img src=\"home.gif\" name=\"button\"&gt;&lt;/a&gt;',
'No id name &lt;a href=\"#\"&gt;Click Here&lt;/a&gt; :<br><br>specify the top position',
'JavaScript Link Events for Status Bar text :<br><br>window.status=\'Your Text In Here\';',
'Two JavaScripts most important functions :<br><br>If and Loops',
'JavaScript if function :<br><br>if(guess == 5){}',
'JavaScript while loop :<br><br>while(input != password){}',
'JavaScript for function :<br><br>for(loop=0; loop &lt; 11; loop++){}',
'HTML create a form :<br><br>&lt;form name=\"formname\"&gt;&lt;/form&gt;',
'HTML Place a text box :<br><br>&lt;input type=\"text\" name=\"boxname\"&gt;',
'set object value :<br><br>window.document.formname.first_text.value=\'Hi there\';',
'JavaScript onBlur Event :<br><br>cursor leaves an input field &lt;input type=\"text\" onblur=\"myFunction()\"&gt;',
'JavaScript onFocus Event :<br><br>cursor is moved into the field &lt;input type=\"text\" onfocus=\"myFunction()\"&gt;',
'JavaScript onchange Event :<br><br>the field is changed and the cursor moves out of it object.onchange = function(){myScript};',
'JavaScript onMouseOver sample :<br><br>&lt;a href=\"#\" onMouseOver=\"sayhi();\"&gt;Say Hi&lt;/a&gt;',
'JavaScript Submit Button :<br><br>&lt;form name=\"myform\" onSubmit=\"MyFunction();&gt;',
'Two form items :<br><br>Checkboxes and radio buttons',
'to check Checkboxes :<br><br>if(window.document.example1.my_checkbox.checked=true){}',
'JavaScript Switch Statement :<br><br>switch(expression) {case n: ... break; default: ... }',
'JavaScript For/In Loop :<br><br>for (x in person) {}',
'JavaScript Break :<br><br>for (i = 0; i &lt; 10; i++) {if (i === 3) { break; }}',
'JavaScript Continue :<br><br>for (i = 0; i &lt; 10; i++) {if (i === 3) { continue; }}',
'JavaScript Labels :<br><br>label: ... break labelname; continue labelname;',
'JavaScript open window and write content :<br><br>var imgWindow = window.open(\"\"); imgWindow.document.write(theListDom);',
'JavaScript history.back function :<br><br>$(\'.keys\').click(function(){parent.history.back();}',
'Jquery load file :<br><br>$.get(\'5FC.txt\', function (d) {var theList = d.split(\',\');}',
'object.append :<br><br>$( \"#codelist\" ).append(\"Total: \" + theList.length + \"&lt;br&gt;\");',
'Jquery getChar(event) :<br><br>{return String.fromCharCode(event.which)}',
'Jquery chkKey() :<br><br>var testkey = getChar(event); if(testkey == \'9\'){...}',
'JavaScript window.scrollTo :<br><br>&lt;b class=\"left\" onclick=\"window.scrollTo(0,document.body.scrollHeight);\"&gt;Go Bottom&lt;/b&gt;',
'The JavaScript labeled statement can be used with... :<br><br>break or continue statements, useful in nested loops (loops inside loops)',
'JavaScript Form submit() Method :<br><br>Submit a form: document.getElementById(\"myForm\").submit();',
'load jquery script :<br><br>&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.js\"&gt;&lt;/script&gt;',
'define an empty object :<br><br>&lt;div id=\"toc\"&gt;&lt;/div&gt;',
'assign an empty object to a variable :<br><br>var toc = $(\'#toc\');',
'a makeLine function to create HTML lines :<br><br>function makeLi(text, href) {return $(\'&lt;a href=\"\' + href + \'\"&gt;\' + text + \'&lt;/a&gt;&lt;br&gt;\');}',
'Jquery each function :<br><br>$(\'h1, h2\').each(function(i) {...}',
'Jquery this selector :<br><br>Selects the current HTML element',
'Jquery this selector sample :<br><br>var chapter = $(this), chapterNumber = i + 1;',
'Javascript append method :<br><br>toc.append(makeLi(\'Chapter \' + chapterNumber + \': \' + chapter.text(), \'#chapter-\' + chapterNumber));',
'jQuery attr() Method :<br><br>chapter.attr(\'id\', \'chapter-\' + chapterNumber);',
'jQuery prepend() Method :<br><br>chapter.prepend(\'&lt;p class=\"toc\"&gt;&lt;a title=\"Back to top\" href=\"#toc\"&gt;Top&lt;/a&gt;&lt;/p&gt;\');',
'$(\"*\") :<br><br>Jquery Selects all elements',
'$(this) :<br><br>Jquery Selects the current HTML element',
'$(\"p.intro\") :<br><br>Jquery Selects all &lt;p&gt; elements with class=\"intro\"',
'$(\"p:first\") :<br><br>Jquery Selects the first &lt;p&gt; element',
'$(\"ul li:first\") :<br><br>Jquery Selects the first &lt;li&gt; element of the first &lt;ul&gt;',
'$(\"ul li:first-child\") :<br><br>Jquery Selects the first &lt;li&gt; element of every &lt;ul&gt;',
'$(\"[href]\") :<br><br>Jquery Selects all elements with an href attribute',
'$(\"a[target=\'_blank\']\") :<br><br>Jquery Selects all &lt;a&gt; elements with a target attribute value equal to \"_blank\"',
'$(\"a[target!=\'_blank\']\") :<br><br>Jquery Selects all &lt;a&gt; elements with a target attribute value NOT equal to \"_blank\"',
'$(\":button\") :<br><br>Jquery Selects all &lt;button&gt; elements and &lt;input&gt; elements of type=\"button\"',
'$(\"tr:even\") :<br><br>Jquery Selects all even &lt;tr&gt; elements',
'$(\"tr:odd\") :<br><br>Jquery Selects all odd &lt;tr&gt; elements',
'*, eg. $(\"*\") :<br><br>selects All elements',
'#id, eg. $(\"#lastname\") :<br><br>selects The element with id=\"lastname\"',
'.class, eg. $(\".intro\") :<br><br>selects All elements with class=\"intro\"',
'.class,.class, eg. $(\".intro,.demo\") :<br><br>selects All elements with the class \"intro\" or \"demo\"',
'element, eg. $(\"p\") :<br><br>selects All &lt;p&gt; elements',
'el1, el2, el3, eg. $(\"h1,div,p\") :<br><br>selects All &lt;h1&gt;, &lt;div&gt; and &lt;p&gt; elements',
':first, eg. $(\"p:first\") :<br><br>selects The first &lt;p&gt; element',
':last, eg. $(\"p:last\") :<br><br>selects The last &lt;p&gt; element',
':even, eg. $(\"tr:even\") :<br><br>selects All even &lt;tr&gt; elements',
':odd, eg. $(\"tr:odd\") :<br><br>selects All odd &lt;tr&gt; elements',
':first-child, eg. $(\"p:first-child\") :<br><br>selects All &lt;p&gt; elements that are the first child of their parent',
':first-of-type, eg. $(\"p:first-of-type\") :<br><br>selects All &lt;p&gt; elements that are the first &lt;p&gt; element of their parent',
':last-child, eg. $(\"p:last-child\") :<br><br>selects All &lt;p&gt; elements that are the last child of their parent',
':last-of-type, eg. $(\"p:last-of-type\") :<br><br>selects All &lt;p&gt; elements that are the last &lt;p&gt; element of their parent',
':nth-child(n), eg. $(\"p:nth-child(2)\") :<br><br>selects All &lt;p&gt; elements that are the 2nd child of their parent',
':nth-last-child(n), eg. $(\"p:nth-last-child(2)\") :<br><br>selects All &lt;p&gt; elements that are the 2nd child of their parent, counting from the last child',
':nth-of-type(n), eg. $(\"p:nth-of-type(2)\") :<br><br>selects All &lt;p&gt; elements that are the 2nd &lt;p&gt; element of their parent',
':nth-last-of-type(n), eg. $(\"p:nth-last-of-type(2)\") :<br><br>selects All &lt;p&gt; elements that are the 2nd &lt;p&gt; element of their parent, counting from the last child',
':only-child, eg. $(\"p:only-child\") :<br><br>selects All &lt;p&gt; elements that are the only child of their parent',
':only-of-type, eg. $(\"p:only-of-type\") :<br><br>selects All &lt;p&gt; elements that are the only child, of its type, of their parent<br>element that has no siblings of the given type<br>li:only-of-type { color: red; }<br>&lt;ul> &lt;li>I\'m all alone!&lt;/li> &lt;/ul>  // this is red<br>&lt;ul><br>  &lt;li>We are together.&lt;/li><br>  &lt;li>We are together.&lt;/li><br>  &lt;li>We are together.&lt;/li><br>&lt;/ul>  <br>',
'parent &gt; child, eg. $(\"div &gt; p\") :<br><br>selects All &lt;p&gt; elements that are a direct child of a &lt;div&gt; element',
'parent descendant, eg. $(\"div p\") :<br><br>selects All &lt;p&gt; elements that are descendants of a &lt;div&gt; element',
'element + next, eg. $(\"div + p\") :<br><br>selects The &lt;p&gt; element that are next to each &lt;div&gt; elements',
'element ~ siblings, eg. $(\"div ~ p\") :<br><br>selects All &lt;p&gt; elements that are siblings of a &lt;div&gt; element',
':eq(index), eg. $(\"ul li:eq(3)\") :<br><br>selects The fourth element in a list (index starts at 0)',
':gt(no), eg. $(\"ul li:gt(3)\") :<br><br>selects List elements with an index greater than 3',
':lt(no), eg. $(\"ul li:lt(3)\") :<br><br>selects List elements with an index less than 3',
':not(selector), eg. $(\"input:not(:empty)\") :<br><br>selects All input elements that are not empty',
':header, eg. $(\":header\") :<br><br>selects All header elements &lt;h1&gt;, &lt;h2&gt; ...',
':animated, eg. $(\":animated\") :<br><br>selects All animated elements',
':focus, eg. $(\":focus\") :<br><br>selects The element that currently has focus',
':contains(text), eg. $(\":contains(\'Hello\')\") :<br><br>selects All elements which contains the text \"Hello\"',
':has(selector), eg. $(\"div:has(p)\") :<br><br>selects All &lt;div&gt; elements that have a &lt;p&gt; element',
':empty, eg. $(\":empty\") :<br><br>selects All elements that are empty',
':parent, eg. $(\":parent\") :<br><br>selects All elements that are a parent of another element',
':hidden, eg. $(\"p:hidden\") :<br><br>selects All hidden &lt;p&gt; elements',
':visible, eg. $(\"table:visible\") :<br><br>selects All visible tables',
':root, eg. $(\":root\") :<br><br>selects The document\'s root element',
':lang(language), eg. $(\"p:lang(de)\") :<br><br>selects All &lt;p&gt; elements with a lang attribute value starting with \"de\"',
'[attribute], eg. $(\"[href]\") :<br><br>selects All elements with a href attribute',
'[attribute=value], eg. $(\"[href=\'default.htm\']\") :<br><br>selects All elements with a href attribute value equal to \"default.htm\"',
'[attribute!=value], eg. $(\"[href!=\'default.htm\']\") :<br><br>selects All elements with a href attribute value not equal to \"default.htm\"',
'[attribute$=value], eg. $(\"[href$=\'.jpg\']\") :<br><br>selects All elements with a href attribute value ending with \".jpg\"',
'[attribute|=value], eg. $(\"[title|=\'Tomorrow\']\") :<br><br>selects All elements with a title attribute value equal to \'Tomorrow\', or starting with \'Tomorrow\' followed by a hyphen',
'[attribute^=value], eg. $(\"[title^=\'Tom\']\") :<br><br>selects All elements with a title attribute value starting with \"Tom\"',
'[attribute~=value], eg. $(\"[title~=\'hello\']\") :<br><br>selects All elements with a title attribute value containing the specific word \"hello\"',
'[attribute*=value], eg. $(\"[title*=\'hello\']\") :<br><br>selects All elements with a title attribute value containing the word \"hello\"',
':text, eg. $(\":text\") :<br><br>selects All input elements with type=\"text\"',
':password, eg. $(\":password\") :<br><br>selects All input elements with type=\"password\"',
':radio, eg. $(\":radio\") :<br><br>selects All input elements with type=\"radio\"',
':checkbox, eg. $(\":checkbox\") :<br><br>selects All input elements with type=\"checkbox\"',
':submit, eg. $(\":submit\") :<br><br>selects All input elements with type=\"submit\"',
':reset, eg. $(\":reset\") :<br><br>selects All input elements with type=\"reset\"',
':button, eg. $(\":button\") :<br><br>selects All input elements with type=\"button\"',
':image, eg. $(\":image\") :<br><br>selects All input elements with type=\"image\"',
':file, eg. $(\":file\") :<br><br>selects All input elements with type=\"file\"',
':enabled, eg. $(\":enabled\") :<br><br>selects All enabled input elements',
':disabled, eg. $(\":disabled\") :<br><br>selects All disabled input elements',
':selected, eg. $(\":selected\") :<br><br>selects All selected input elements',
':checked, eg. $(\":checked\") :<br><br>selects All checked input elements',
'blur() :<br><br>Attaches/Triggers the blur event',
'change() :<br><br>Attaches/Triggers the change event',
'click() :<br><br>Attaches/Triggers the click event',
'dblclick() :<br><br>Attaches/Triggers the double click event',
'die() :<br><br>Removed in version 1.9. Removes all event handlers added with the live() method',
'event.currentTarget :<br><br>The current DOM element within the event bubbling phase',
'event.data :<br><br>Contains the optional data passed to an event method when the current executing handler is bound',
'event.delegateTarget :<br><br>Returns the element where the currently-called jQuery event handler was attached',
'event.isDefaultPrevented() :<br><br>Returns whether event.preventDefault() was called for the event object',
'event.isImmediatePropagationStopped() :<br><br>Returns whether event.stopImmediatePropagation() was called for the event object',
'event.isPropagationStopped() :<br><br>Returns whether event.stopPropagation() was called for the event object',
'event.namespace :<br><br>Returns the namespace specified when the event was triggered',
'event.pageX :<br><br>Returns the mouse position relative to the left edge of the document',
'event.pageY :<br><br>Returns the mouse position relative to the top edge of the document',
'event.preventDefault() :<br><br>Prevents the default action of the event',
'event.relatedTarget :<br><br>Returns which element being entered or exited on mouse movement.',
'event.result :<br><br>Contains the last/previous value returned by an event handler triggered by the specified event',
'event.stopImmediatePropagation() :<br><br>Prevents other event handlers from being called',
'event.stopPropagation() :<br><br>Prevents the event from bubbling up the DOM tree, preventing any parent handlers from being notified of the event',
'event.target :<br><br>Returns which DOM element triggered the event',
'event.timeStamp :<br><br>Returns the number of milliseconds since January 1, 1970, when the event is triggered',
'event.type :<br><br>Returns which event type was triggered',
'focus() :<br><br>Attaches/Triggers the focus event',
'focusin() :<br><br>Attaches an event handler to the focusin event',
'focusout() :<br><br>Attaches an event handler to the focusout event',
'hover() :<br><br>Attaches two event handlers to the hover event',
'keydown() :<br><br>Attaches/Triggers the keydown event',
'keypress() :<br><br>Attaches/Triggers the keypress event',
'keyup() :<br><br>Attaches/Triggers the keyup event',
'live() :<br><br>Removed in version 1.9. Adds one or more event handlers to current, or future, selected elements',
'mousedown() :<br><br>Attaches/Triggers the mousedown event',
'mouseenter() :<br><br>Attaches/Triggers the mouseenter event',
'mouseleave() :<br><br>Attaches/Triggers the mouseleave event',
'mousemove() :<br><br>Attaches/Triggers the mousemove event',
'mouseout() :<br><br>Attaches/Triggers the mouseout event\nThe mouseout event occurs when the mouse pointer leaves the selected element.\n$("p").mouseout(function(){\n  $("p").css("background-color", "gray");\n});',
'mouseover() :<br><br>Attaches/Triggers the mouseover event',
'mouseup() :<br><br>Attaches/Triggers the mouseup event',
'off() :<br><br>Removes event handlers attached with the on() method',
'on() :<br><br>Attaches event handlers to elements',
'one() :<br><br>Adds one or more event handlers to selected elements. This handler can only be triggered once per element',
'$.proxy() :<br><br>Takes an existing function and returns a new one with a particular context',
'ready() :<br><br>Specifies a function to execute when the DOM is fully loaded',
'resize() :<br><br>Attaches/Triggers the resize event',
'scroll() :<br><br>Attaches/Triggers the scroll event',
'select() :<br><br>Attaches/Triggers the select event',
'submit() :<br><br>Attaches/Triggers the submit event',
'toggle() :<br><br>Removed in version 1.9. Attaches two or more functions to toggle between for the click event',
'trigger() :<br><br>Triggers all events bound to the selected elements',
'triggerHandler() :<br><br>Triggers all functions bound to a specified event for the selected elements',
'animate() :<br><br>Runs a custom animation on the selected elements',
'clearQueue() :<br><br>Removes all remaining queued functions from the selected elements',
'delay() :<br><br>Sets a delay for all queued functions on the selected elements<br>$(\'button\').click(function(){<br>  $(\'#div1\').delay(\'slow\').fadeIn();<br>  $(\'#div2\').delay(\'fast\').fadeIn();<br>});<br><br>var delayInMilliseconds = 1000; //1 second<br>setTimeout(function() {<br>  //your code to be executed after 1 second<br>}, delayInMilliseconds);<br>',
'dequeue() :<br><br>Removes the next function from the queue, and then executes the function',
'fadeIn() :<br><br>Fades in the selected elements',
'fadeOut() :<br><br>Fades out the selected elements',
'fadeTo() :<br><br>Fades in/out the selected elements to a given opacity',
'fadeToggle() :<br><br>Toggles between the fadeIn() and fadeOut() methods',
'finish() :<br><br>Stops, removes and completes all queued animations for the selected elements',
'hide() :<br><br>Hides the selected elements',
'queue() :<br><br>Shows the queued functions on the selected elements',
'show() :<br><br>Shows the selected elements',
'slideDown() :<br><br>Slides-down (shows) the selected elements<br>Slide-down (show) all hidden <p> elements:<br>  $("p").slideDown();<br>',
'slideToggle() :<br><br><br>The slideToggle() method toggles between slideUp() and slideDown() for the selected elements.<br>Toggle between slideUp() and slideDown() for all <p> elements:<br>  $("p").slideToggle();<br><br>',
'slideUp() :<br><br>Slides-up (hides) the selected elements',
'stop() :<br><br>Stops the currently running animation for the selected elements',
'toggle() :<br><br>Toggles between the hide() and show() methods',
'addClass() :<br><br>Adds one or more class names to selected elements',
'after() :<br><br>Inserts content after selected elements',
'append() :<br><br>Inserts content at the end of selected elements',
'appendTo() :<br><br>Inserts HTML elements at the end of selected elements',
'attr() :<br><br>Sets or returns attributes/values of selected elements',
'before() :<br><br>Inserts content before selected elements',
'clone() :<br><br>Makes a copy of selected elements',
'css() :<br><br>Sets or returns one or more style properties for selected elements',
'detach() :<br><br>Removes selected elements (keeps data and events)',
'empty() :<br><br>Removes all child nodes and content from selected elements',
'hasClass() :<br><br>Checks if any of the selected elements have a specified class name',
'height() :<br><br>Sets or returns the height of selected elements',
'html() :<br><br>Sets or returns the content of selected elements',
'innerHeight() :<br><br>Returns the height of an element (includes padding, but not border)',
'innerWidth() :<br><br>Returns the width of an element (includes padding, but not border)',
'insertAfter() :<br><br>Inserts HTML elements after selected elements',
'insertBefore() :<br><br>Inserts HTML elements before selected elements',
'offset() :<br><br>Sets or returns the offset coordinates for selected elements (relative to the document)',
'offsetParent() :<br><br>Returns the first positioned parent element',
'outerHeight() :<br><br>Returns the height of an element (includes padding and border)',
'outerWidth() :<br><br>Returns the width of an element (includes padding and border)',
'position() :<br><br>Returns the position (relative to the parent element) of an element',
'prepend() :<br><br>Inserts content at the beginning of selected elements',
'jQuery prop() Method\t\nsets or returns property value of the selected elements.\n  var $x = $("div");\n  $x.prop("color", "FF0000");\n  $x.append("The color property: " + $x.prop("color"));\n  $x.removeProp("color");',
'remove() :<br><br>Removes the selected elements (including data and events)',
'removeAttr() :<br><br>Removes one or more attributes from selected elements',
'removeClass() :<br><br>Removes one or more classes from selected elements',
'removeProp() :<br><br>Removes a property set by the prop() method',
'replaceAll() :<br><br>Replaces selected elements with new HTML elements',
'replaceWith() :<br><br>Replaces selected elements with new content',
'scrollLeft() :<br><br>Sets or returns the horizontal scrollbar position of selected elements',
'scrollTop() :<br><br>Sets or returns the vertical scrollbar position of selected elements',
'text() :<br><br>Sets or returns the text content of selected elements',
'toggleClass() :<br><br>Toggles between adding/removing one or more classes from selected elements',
'unwrap() :<br><br>Removes the parent element of the selected elements',
'val() :<br><br>Sets or returns the value attribute of the selected elements (for form elements)',
'width() :<br><br>Sets or returns the width of selected elements',
'wrap() :<br><br>Wraps HTML element(s) around each selected element',
'wrapAll() :<br><br>Wraps HTML element(s) around all selected elements',
'wrapInner() :<br><br>Wraps HTML element(s) around the content of each selected element',
'add() :<br><br>Adds elements to the set of matched elements',
'addBack() :<br><br>Adds the previous set of elements to the current set',
'children() :<br><br>Returns all direct children of the selected element',
'closest() :<br><br>Returns the first ancestor of the selected element',
'contents() :<br><br>Returns all direct children of the selected element (including text and comment nodes)',
'each() :<br><br>Executes a function for each matched element',
'end() :<br><br>Ends the most recent filtering operation in the current chain, and return the set of matched elements to its previous state',
'eq() :<br><br>Returns an element with a specific index number of the selected elements',
'filter() :<br><br>Reduce the set of matched elements to those that match the selector or pass the function\'s test',
'find() :<br><br>jQuery find() Method<br>$(document).ready(function(){<br>  $("ul").find("span").css({"color": "red", "border": "2px solid"});<br>});<br>Return all <span> elements that are descendants of <ul>:<br>The find() method returns descendant elements of the selected element.<br><br>JavaScript Array find()<br>Find the value of the first element with a value over 18:<br><br>const ages = [3, 10, 18, 20];<br>function checkAge(age) { return age > 18; }<br>function myFunction() {<br>  document.getElementById("demo").innerHTML = ages.find(checkAge);<br>}<br>',
'first() :<br><br>Returns the first element of the selected elements',
'has() :<br><br>Returns all elements that have one or more elements inside of them',
'is() :<br><br>Checks the set of matched elements against a selector/element/jQuery object, and return true if at least one of these elements matches the given arguments',
'last() :<br><br>Returns the last element of the selected elements',
'next() :<br><br>Returns the next sibling element of the selected element',
'nextAll() :<br><br>Returns all next sibling elements of the selected element',
'nextUntil() :<br><br>Returns all next sibling elements between two given arguments',
'not() :<br><br>Remove elements from the set of matched elements',
'offsetParent() :<br><br>Returns the first positioned parent element',
'parent() :<br><br>Returns the direct parent element of the selected element',
'parents() :<br><br>Returns all ancestor elements of the selected element',
'parentsUntil() :<br><br>Returns all ancestor elements between two given arguments',
'prev() :<br><br>Returns the previous sibling element of the selected element<br>$( \'li.third-item\' ).prev().css( \'background-color\', \'red\' );',
'prevAll() :<br><br>Returns all previous sibling elements of the selected element',
'prevUntil() :<br><br>Returns all previous sibling elements between two given arguments',
'siblings() :<br><br>Returns all sibling elements of the selected element',
'slice() :<br><br>Reduces the set of matched elements to a subset specified by a range of indices',
'$.ajax() :<br><br>Performs an async AJAX request',
'$.ajaxPrefilter() :<br><br>Handle custom Ajax options or modify existing options before each request is sent and before they are processed by $.ajax()',
'$.ajaxSetup() :<br><br>Sets the default values for future AJAX requests',
'$.ajaxTransport() :<br><br>Creates an object that handles the actual transmission of Ajax data',
'$.getJSON() :<br><br>Loads JSON-encoded data from a server using a HTTP GET request',
'$.getScript() :<br><br>Loads (and executes) a JavaScript from a server using an AJAX HTTP GET request',
'$.param() :<br><br>Creates a serialized representation of an array or object (can be used as URL query string for AJAX requests)',
'ajaxComplete() :<br><br>Specifies a function to run when the AJAX request completes',
'ajaxError() :<br><br>Specifies a function to run when the AJAX request completes with an error',
'ajaxSend() :<br><br>Specifies a function to run before the AJAX request is sent',
'ajaxStart() :<br><br>Specifies a function to run when the first AJAX request begins',
'ajaxStop() :<br><br>Specifies a function to run when all AJAX requests have completed',
'ajaxSuccess() :<br><br>Specifies a function to run when an AJAX request completes successfully',
'load() :<br><br>Loads data from a server and puts the returned data into the selected element',
'serializeArray() :<br><br>Encodes a set of form elements as an array of names and values',
'data() :<br><br>Attaches data to, or gets data from, selected elements',
'each() :<br><br>Execute a function for each matched element',
'get() :<br><br>Get the DOM elements matched by the selector',
'index() :<br><br>Search for a given element from among the matched elements',
'$.noConflict() :<br><br>Release jQuery\'s control of the $ variable',
'$.param() :<br><br>Create a serialized representation of an array or object (can be used as URL query string for AJAX requests)',
'jQuery removeData() Method<br>Remove previously attached data from a &lt;div> element<br>  $("div").removeData("greeting");<br>  alert("Greeting is: " + $("div").data("greeting"));<br>',
'toArray() :<br><br>Retrieve all the DOM elements contained in the jQuery set, as an array',
'jquery Property:<br><br>Contains the jQuery version number',
'jQuery.fx.interval Property:<br><br>Change the animation firing rate in milliseconds',
'jQuery.fx.off Property:<br><br>Globally disable/enable all animations',
'jQuery.support Property:<br><br>A collection of properties representing different browser features or bugs (Intended for jQuery\'s internal use)',
'jQuery length Property<br>$(selector).length<br>alert($("li").length);<br>Alert the number of <li> elements',
'onclick event :<br><br>document.getElementById(\"demo\").onclick = function() {myFunction()};',
'writeln() :<br><br>writes any number of expressions in the document window',
'alert() :<br><br>displays an alert dialog box with a message and an OK button',
'prompt() :<br><br>displays a prompt dialog box with a message and an input field',
'document.writeln(\'&lt;font face=\"Arial\" size=\"5\" color=\"red\"&gt;Hello there!&lt;/font&gt;\'); :<br><br>writes an expression in the document window',
'writeln(), document.write() :<br><br>they are identical, writeln() add with the a newline character',
'window.open(\'link.html\',\'mywindow\'); :<br><br>Opening A Window With JavaScript',
'&lt;a href=\"#\" onClick=\"window.open(\'link.html\',\'mywindow\');\"&gt;Click Here&lt;/a&gt; :<br><br>Opening A Window',
'window.open(\'link.html\',\'mywindow\',\'window features\'); :<br><br>Adding Windows features',
'Link Events :<br><br>onClick, onMouseOver, onMouseOut<br>HTML has the ability to let events trigger actions in a browser<br><br>Window Event<br>Form Events<br>Keyboard Events<br>Mouse Events<br>Drag Events<br>Clipboard Events<br>Media Events<br>Misc Events<br><strong>Link Events</strong>There are nine events that are associated with the links. <table><tbody><tr><td>Event</td><td>Event Handling Attribute</td><td>Description</td></tr><tr><td>Click</td><td>OnClick</td><td>This link event occurred when a user clicks the link.</td></tr><tr><td>DblClick</td><td>OnDblClick</td><td>This link event occurred when a user double clicks the link.</td></tr><tr><td>MouseDown</td><td>OnMouseDown</td><td>This link event occurred when a user presses the mouse button over the link.</td></tr><tr><td>MouseUp</td><td>OnMouseUp</td><td>This link event occurred when a user releases the pressed mouse button.</td></tr><tr><td>MouseOver</td><td>OnMouseOver</td><td>This link event is occurred when the user moves the mouse pointer over a link.</td></tr><tr><td>MouseOut</td><td>OnMouseOut</td><td>This link event is occurred when the user moves he mouse pointer from within a link to outside of that link.</td></tr><tr><td>KeyDown</td><td>OnKeyDown</td><td>This event  is occurred when the user pressed a key on the keyboard.</td></tr><tr><td>KeyUp</td><td>OnKeyUp</td><td>This event handling is occurred when the user release the pressed key of the keyboard.</td></tr><tr><td>KeyPress</td><td>OnKeyPress</td><td>This event handling is occurred when the user presses a key or when the user keeps a key pressed down.</td></tr></tbody></table>',
'&lt;a href="index.htm"\n onMouseOver="home_button.src=\'homeon.gif\';"\n onMouseOut="home_button.src=\'home.gif\';"\n>\n&lt;img src="home.gif" alt="Home" name="home_button" border="0">\n&lt;/a>',
'if(){}else{} :<br><br>if else function',
'if(){} :<br><br>if function',
'while(){} :<br><br>while loop condition',
'for(){} :<br><br>for function',
'&lt;form name=\"formname\"&gt;&lt;/form&gt; :<br><br>create a form',
'&lt;input type=\"text\" name=\"boxname\"&gt; :<br><br>Place a text box',
'window.document.formname.first_text.value=\'Hi there\'; :<br><br>put \'Hi there!\' into the value of the item called \'first_text\' in the form called \'formname\'',
'onBlur Events :<br><br>when the cursor is moved out of the field\nThe onblur event occurs when an HTML element loses focus.\nCall a function when a user leaves an input field\n&lt;input type="text" onblur="myFunction()">\n\n',
'onFocus Events :<br><br>when the cursor is moved into the field\nCall a function when an input field gets focus:\n&lt;input type="text" onfocus="myFunction()">\n',
'onChange Events :<br><br>when the field is changed and the cursor moves out of it',
'&lt;input type=\"text\" onBlur=\"dothis\"&gt; :<br><br>onBlur Events',
'function sayhi(){} :<br><br>JavaScript Functions',
'&lt;input type=\"submit\" value=\"Submit\"&gt; :<br><br>Submit Button',
'&lt;form name=\"myform\" onSubmit=\"MyFunction(); return false;\"&gt; :<br><br>onSubmit take action',
'if(window.document.example1.my_checkbox.checked=true){} :<br><br>Checkboxes action',
'switch(expression){case n: ... break; default: ...} :<br><br>Switch Statement',
'switch (new Date().getDay()) {case 5: text = \"Soon it is Weekend\"; break; case 6: text = \"It is Weekend\"; break; default: text = \"Waiting\";} :<br><br>Common week day Code Blocks',
'for (x in person) {text += person[x];} :<br><br>The For/In Loop',
'if (i === 3) { break;}, if (i === 3) { continue;} :<br><br>Break and Continue',
'label: statements; break labelname; continue labelname; :<br><br>JavaScript Labels',
'var array_name = [item1, item2, ...]; :<br><br>Creating an Array',
'arrays use numbered indexes, objects use named indexes :<br><br>Difference Between Arrays and Objects',
'var car = {type:\"Fiat\', model:\"500\', color:\"white\"}; :<br><br>Objects are variables containing many values',
'$(\'.keys\').click(function(){parent.history.back();return false;}); :<br><br>history.back function',
'$(\"#codelist\").load(\"HKCodelist.txt\"); :<br><br>load function',
'set html go to bottom automatically :<br><br>onclick=\"window.scrollTo(0,document.body.scrollHeight);\"',
'javascript load script :<br><br>&lt;script type=\"text/javascript\" src=theUrl&gt;&lt;/script&gt;',
'<h3>HTML DOM Events</h3>abort&emsp;The loading of a media is aborted<br>afterprint&emsp;A page has started printing<br>animationend&emsp;A CSS animation has completed<br>animationiteration&emsp;A CSS animation is repeated<br>animationstart&emsp;A CSS animation has started<br>beforeprint&emsp;A page is about to be printed<br>beforeunload&emsp;Before a document is about to be unloaded<br>blur&emsp;An element loses focus<br>canplay&emsp;The browser can start playing a media (has buffered enough to begin)<br>canplaythrough&emsp;The browser can play through a media without stopping for buffering<br>change&emsp;The content of a form element has changed<br>click&emsp;An element is clicked on<br>contextmenu&emsp;An element is right-clicked to open a context menu<br>copy&emsp;The content of an element is copied<br>cut&emsp;The content of an element is cutted<br>dblclick&emsp;An element is double-clicked<br>drag&emsp;An element is being dragged<br>dragend&emsp;Dragging of an element has ended<br>dragenter&emsp;A dragged element enters the drop target<br>dragleave&emsp;A dragged element leaves the drop target<br>dragover&emsp;A dragged element is over the drop target<br>dragstart&emsp;Dragging of an element has started<br>drop&emsp;A dragged element is dropped on the target<br>durationchange&emsp;The duration of a media is changed<br>ended&emsp;A media has reach the end ("thanks for listening")<br>error&emsp;An error has occurred while loading a file<br>focus&emsp;An element gets focus<br>focusin&emsp;An element is about to get focus<br>focusout&emsp;An element is about to lose focus<br>fullscreenchange&emsp;An element is displayed in fullscreen mode<br>fullscreenerror&emsp;An element can not be displayed in fullscreen mode<br>hashchange&emsp;There has been changes to the anchor part of a URL<br>input&emsp;An element gets user input<br>invalid&emsp;An element is invalid<br>keydown&emsp;A key is down<br>keypress&emsp;A key is pressed<br>keyup&emsp;A key is released<br>load&emsp;An object has loaded<br>loadeddata&emsp;Media data is loaded<br>loadedmetadata&emsp;Meta data (like dimensions and duration) are loaded<br>loadstart&emsp;The browser starts looking for the specified media<br>message&emsp;A message is received through the event source<br>mousedown&emsp;The mouse button is pressed over an element<br>mouseenter&emsp;The pointer is moved onto an element<br>mouseleave&emsp;The pointer is moved out of an element<br>mousemove&emsp;The pointer is moved over an element<br>mouseover&emsp;The pointer is moved onto an element<br>mouseout&emsp;The pointer is moved out of an element<br>mouseup&emsp;A user releases a mouse button over an element<br>offline&emsp;The browser starts working offline<br>online&emsp;The browser starts working online<br>open&emsp;A connection with the event source is opened<br>pagehide&emsp;User navigates away from a webpage<br>pageshow&emsp;User navigates to a webpage<br>paste&emsp;Some content is pasted in an element<br>pause&emsp;A media is paused<br>play&emsp;The media has started or is no longer paused<br>playing&emsp;The media is playing after beeing paused or buffered<br>popstate&emsp;The window\'s history changes<br>progress&emsp;The browser is downloading media data<br>ratechange&emsp;The playing speed of a media is changed<br>resize&emsp;The document view is resized<br>reset&emsp;A form is reset<br>scroll&emsp;An scrollbar is being scrolled<br>search&emsp;Something is written in a search field<br>seeked&emsp;Skipping to a media position is finished<br>seeking&emsp;Skipping to a media position is started<br>select&emsp;User selects some text<br>show&emsp;A <menu> element is shown as a context menu<br>stalled&emsp;The browser is trying to get unavailable media data<br>storage&emsp;A Web Storage area is updated<br>submit&emsp;A form is submitted<br>suspend&emsp;The browser is intentionally not getting media data<br>timeupdate&emsp;The playing position has changed (the user moves to a different point in the media)<br>toggle&emsp;The user opens or closes the <details> element<br>touchcancel&emsp;The touch is interrupted<br>touchend&emsp;A finger is removed from a touch screen<br>touchmove&emsp;A finger is dragged across the screen<br>touchstart&emsp;A finger is placed on a touch screen<br>transitionend&emsp;A CSS transition has completed<br>unload&emsp;A page has unloaded<br>volumechange&emsp;The volume of a media is changed (includes muting)<br>waiting&emsp;A media is paused but is expected to resume (e.g. buffering)<br>wheel&emsp;The mouse wheel rolls up or down over an element',
'<h3>jQuery Event Methods</h3><br>blur()&emsp;Attaches/Triggers the blur event<br>change()&emsp;Attaches/Triggers the change event<br>click()&emsp;Attaches/Triggers the click event<br>dblclick()&emsp;Attaches/Triggers the double click event<br>event.currentTarget&emsp;The current DOM element within the event bubbling phase<br>event.data&emsp;Contains the optional data passed to an event method when the current executing handler is bound<br>event.delegateTarget&emsp;Returns the element where the currently-called jQuery event handler was attached<br>event.isDefaultPrevented()&emsp;Returns whether event.preventDefault() was called for the event object<br>event.isImmediatePropagationStopped()&emsp;Returns whether event.stopImmediatePropagation() was called for the event object<br>event.isPropagationStopped()&emsp;Returns whether event.stopPropagation() was called for the event object<br>event.namespace&emsp;Returns the namespace specified when the event was triggered<br>event.pageX&emsp;Returns the mouse position relative to the left edge of the document<br>event.pageY&emsp;Returns the mouse position relative to the top edge of the document<br>event.preventDefault()&emsp;Prevents the default action of the event<br>event.relatedTarget&emsp;Returns which element being entered or exited on mouse movement<br>event.result&emsp;Contains the last/previous value returned by an event handler triggered by the specified event<br>event.stopImmediatePropagation()&emsp;Prevents other event handlers from being called<br>event.stopPropagation()&emsp;Prevents the event from bubbling up the DOM tree, preventing any parent handlers from being notified of the event<br>event.target&emsp;Returns which DOM element triggered the event<br>event.timeStamp&emsp;Returns the number of milliseconds since January 1, 1970, when the event is triggered<br>event.type&emsp;Returns which event type was triggered<br>event.which&emsp;Returns which keyboard key or mouse button was pressed for the event<br>focus()&emsp;Attaches/Triggers the focus event<br>focusin()&emsp;Attaches an event handler to the focusin event<br>focusout()&emsp;Attaches an event handler to the focusout event<br>hover()&emsp;Attaches two event handlers to the hover event<br>keydown()&emsp;Attaches/Triggers the keydown event<br>keypress()&emsp;Attaches/Triggers the keypress event<br>keyup()&emsp;Attaches/Triggers the keyup event<br>mousedown()&emsp;Attaches/Triggers the mousedown event<br>mouseenter()&emsp;Attaches/Triggers the mouseenter event<br>mouseleave()&emsp;Attaches/Triggers the mouseleave event<br>mousemove()&emsp;Attaches/Triggers the mousemove event<br>mouseout()&emsp;Attaches/Triggers the mouseout event<br>mouseover()&emsp;Attaches/Triggers the mouseover event<br>mouseup()&emsp;Attaches/Triggers the mouseup event<br>off()&emsp;Removes event handlers attached with the on() method<br>on()&emsp;Attaches event handlers to elements<br>one()&emsp;Adds one or more event handlers to selected elements. This handler can only be triggered once per element<br>$.proxy()&emsp;Takes an existing function and returns a new one with a particular context<br>ready()&emsp;Specifies a function to execute when the DOM is fully loaded<br>resize()&emsp;Attaches/Triggers the resize event<br>scroll()&emsp;Attaches/Triggers the scroll event<br>select()&emsp;Attaches/Triggers the select event<br>submit()&emsp;Attaches/Triggers the submit event<br>trigger()&emsp;Triggers all events bound to the selected elements<br>triggerHandler()&emsp;Triggers all functions bound to a specified event for the selected elements<br>',
'$.get() :<br><br>Loads data from a server using an AJAX HTTP GET request<br>Request "test.php" and alert the result of the request:<br>$("button").click(function(){<br>  $.get("test.php", function(data){ alert("Data: " + data); });  <br>});<br>',
'<h4>Global Modules: CommonJS modules Module caching caveats</h4><br>Modules are cached based on their resolved filename.<br>Since modules may resolve to a different filename based on the location of the calling module (loading from <k>node_modules</k> folders), it is not a <em>guarantee</em> that <k>require(\'foo\')</k> will always return the exact same object, if it would resolve to different files.<br>Additionally, on case-insensitive file systems or operating systems, different resolved filenames can point to the same file, but the cache will still treat them as different modules and will reload the file multiple times.<br>For example,<br><k>require(\'./foo\')</k> and <k>require(\'./FOO\')</k> return two different objects, irrespective of whether or not <k>./foo</k> and <k>./FOO</k> are the same file.',
'<h4>Global Modules: CommonJS modules<br><k>__dirname</k></h4><br><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;string></a><br>The directory name of the current module.<br>This is the same as the <a href="path.html#pathdirnamepath"><k>path.dirname()</k></a> of the <k>__filename</k>.<br>Example: running <k>node example.js</k> from <k>/Users/mjr</k><br><k>console.log(__dirname);<br>// Prints: /Users/mjr console.log(path.dirname(__filename));<br>// Prints: /Users/mjr</k>',
'<h4>Global Modules: CommonJS modules<br><k>__filename</k></h4><br><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;string></a><br>The file name of the current module.<br>This is the current module file\'s absolute path with symlinks resolved.<br>For a main program this is not necessarily the same as the file name used in the command line.<br>See <k>__dirname</k> for the directory name of the current module.<br>Examples:<br>Running <k>node example.js</k> from <k>/Users/mjr</k><br><k>console.log(__filename);<br>// Prints: /Users/mjr/example.js console.log(__dirname);<br>// Prints: /Users/mjr</k><br>Given two modules: <k>a</k> and <k>b</k>, where <k>b</k> is a dependency of<br><k>a</k> and there is a directory structure of:<br><k>/Users/mjr/app/a.js</k><br><k>/Users/mjr/app/node_modules/b/b.js</k><br>References to <k>__filename</k> within <k>b.js</k> will return<br><k>/Users/mjr/app/node_modules/b/b.js</k> while references to <k>__filename</k> within<br><k>a.js</k> will return <k>/Users/mjr/app/a.js</k>.',
'<h4>Global Modules: CommonJS modules<br><k>exports</k></h4><br><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">&lt;Object></a><br>A reference to the <k>module.exports</k> that is shorter to type.<br>See the section about the exports shortcut for details on when to use<br><k>exports</k> and when to use <k>module.exports</k>.',
'<h4>Global Modules: CommonJS modules<br><k>module</k></h4><br><a href="https://nodejs.org/api/modules.html#the-module-object">&lt;module></a><br>A reference to the current module, see the section about the<br><k>module</k> object.<br>In particular, <k>module.exports</k> is used for defining what a module exports and makes available through <k>require()</k>.',
'<h4>Global Modules: CommonJS modules<br><k>require(id)</k></h4><br><k>id</k> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;string></a> module name or path Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types">&lt;any></a> exported module content<br>Used to import modules, <k>JSON</k>, and local files.<br>Modules can be imported from <k>node_modules</k>.<br>Local modules and JSON files can be imported using a relative path (e.g.<br><k>./</k>, <k>./foo</k>, <k>./bar/baz</k>, <k>../foo</k>) that will be resolved against the directory named by <k>__dirname</k> (if defined) or the current working directory.<br>The relative paths of POSIX style are resolved in an OS independent fashion, meaning that the examples above will work on Windows in the same way they would on Unix systems.<br><k>// Importing a local module with a path relative to the `__dirname` or current<br>// working directory.<br>(On Windows, this would resolve to .\path\myLocalModule.)<br>const myLocalModule = require(\'./path/myLocalModule\');<br>// Importing a JSON file:<br>const jsonData = require(\'./path/filename.json\');<br>// Importing a module from node_modules or Node.js built-in module:<br>const crypto = require(\'node:crypto\');</k>',
'<h5>Global Modules: CommonJS modules<br><k>require.cache</k></h5><br><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">&lt;Object></a><br>Modules are cached in this object when they are required.<br>By deleting a key value from this object, the next <k>require</k> will reload the module.<br>This does not apply to <a href="addons.html">native addons</a>, for which reloading will result in an error.<br>Adding or replacing entries is also possible.<br>This cache is checked before built-in modules and if a name matching a built-in module is added to the cache,<br>only <k>node:</k>-prefixed require calls are going to receive the built-in module.<br>Use with care!<br><k>const assert = require(\'node:assert\');<br>const realFs = require(\'node:fs\');<br>const fakeFs = {};<br>require.cache.fs = { exports: fakeFs };<br>assert.strictEqual(require(\'fs\'), fakeFs);<br>assert.strictEqual(require(\'node:fs\'), realFs);</k>',
'<h5>Global Modules: CommonJS modules<br><k>require.main</k></h5><br><a href="https://nodejs.org/api/modules.html#the-module-object">&lt;module></a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type">&lt;undefined></a><br>The <k>Module</k> object representing the entry script loaded when the Node.js process launched, or <k>undefined</k> if the entry point of the program is not a CommonJS module.<br>See "Accessing the main module".<br>In <k>entry.js</k> script:<br><k>console.log(require.main);</k><br><k>node entry.js</k><br><k>Module {<br>  id: \'.\',<br>  path: \'/absolute/path/to\',<br>  exports: {},<br>  filename: \'/absolute/path/to/entry.js\',<br>  loaded: false,<br>  children: [],<br>  paths:<br>   [ \'/absolute/path/to/node_modules\',<br>     \'/absolute/path/node_modules\',<br>     \'/absolute/node_modules\',<br>     \'/node_modules\' ] }</k>',
'<h5>Global Modules: CommonJS modules<br><k>require.resolve(request[, options])</k></h5><br><k>request</k> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;string></a> The module path to resolve.<br><k>options</k> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">&lt;Object></a><br><k>paths</k> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;string[]></a> Paths to resolve module location from.<br>If present, these paths are used instead of the default resolution paths, with the exception of GLOBAL_FOLDERS like <k>$HOME/.node_modules</k>, which are always included.<br>Each of these paths is used as a starting point for the module resolution algorithm, meaning that the <k>node_modules</k> hierarchy is checked from this location.<br>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;string></a><br>Use the internal <k>require()</k> machinery to look up the location of a module,<br>but rather than loading the module, just return the resolved filename.<br>If the module can not be found, a <k>MODULE_NOT_FOUND</k> error is thrown.<h6><k>require.resolve.paths(request)</k>#</h6><br><k>request</k> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;string></a> The module path whose lookup paths are being retrieved.<br>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;string[]></a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type">&lt;null></a><br>Returns an array containing the paths searched during resolution of <k>request</k> or<br><k>null</k> if the <k>request</k> string references a core module, for example <k>http</k> or<br><k>fs</k>.',
'<h4>Global Modules: CommonJS modules<br><k>module.children</k></h4><br><a href="https://nodejs.org/api/modules.html#the-module-object">&lt;module[]></a><br>The module objects required for the first time by this one.',
'<h4>Global Modules: CommonJS modules<br><k>module.exports</k></h4><br><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">&lt;Object></a><br>The <k>module.exports</k> object is created by the <k>Module</k> system.<br>Sometimes this is not acceptable; many want their module to be an instance of some class.<br>To do this, assign the desired export object to <k>module.exports</k>.<br>Assigning the desired object to <k>exports</k> will simply rebind the local <k>exports</k> variable,<br>which is probably not what is desired.<br>For example, suppose we were making a module called <k>a.js</k>:<br><k>const EventEmitter = require(\'node:events\');<br>module.exports = new EventEmitter();<br>// Do some work, and after some time emit<br>// the \'ready\' event from the module itself.<br>setTimeout(() => {<br>  module.exports.emit(\'ready\');<br>}, 1000);</k><br>Then in another file we could do:<br><k>const a = require(\'./a\');<br>a.on(\'ready\', () => {<br>  console.log(\'module "a" is ready\');<br>});</k><br>Assignment to <k>module.exports</k> must be done immediately.<br>It cannot be done in any callbacks.<br>This does not work:<br><k>x.js</k>:<br><k>setTimeout(() => {<br>  module.exports = { a: \'hello\' };<br>}, 0);</k><br><k>y.js</k>:<br><k>const x = require(\'./x\');<br>console.log(x.a);</k>',
'<h5>Global Modules: CommonJS modules<br><k>exports</k> shortcut</h5><br>The <k>exports</k> variable is available within a module\'s file-level scope, and is assigned the value of <k>module.exports</k> before the module is evaluated.<br>It allows a shortcut, so that <k>module.exports.f = ...</k> can be written more succinctly as <k>exports.f = ...</k>.<br>However, be aware that like any variable, if a new value is assigned to <k>exports</k>, it is no longer bound to <k>module.exports</k>:<br><k>module.exports.hello = true; // Exported from require of module exports = { hello: false };  // Not exported, only available in the module</k><br>When the <k>module.exports</k> property is being completely replaced by a new object, it is common to also reassign <k>exports</k>:<br><k>module.exports = exports = function Constructor() {<br>  // ...<br>etc.<br>};</k><br>To illustrate the behavior, imagine this hypothetical implementation of<br><k>require()</k>, which is quite similar to what is actually done by <k>require()</k>:<br><k>function require(/* ...<br>*/) {<br>  const module = { exports: {} };<br>  ((module, exports) => {<br>    // Module code here.<br>In this example, define a function.<br>    function someFunc() {}<br>    exports = someFunc;<br>    // At this point, exports is no longer a shortcut to module.exports, and<br>    // this module will still export an empty default object.<br>    module.exports = someFunc;<br>    // At this point, the module will now export someFunc, instead of the<br>    // default object.<br>  })(module, module.exports);<br>  return module.exports;<br>}</k>',
'<h4>Global Modules: CommonJS modules<br><k>module.filename</k></h4><br><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;string></a><br>The fully resolved filename of the module.',
'<h4>Global Modules: CommonJS modules<br><k>module.id</k></h4><br><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;string></a><br>The identifier for the module.<br>Typically this is the fully resolved filename.',
'<h4>Global Modules: CommonJS modules<br><k>module.isPreloading</k></h4><br>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type">&lt;boolean></a> <k>true</k> if the module is running during the Node.js preload phase.',
'<h4>Global Modules: CommonJS modules<br><k>module.loaded</k></h4><br><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type">&lt;boolean></a><br>Whether or not the module is done loading, or is in the process of loading.',
'<h4>Global Modules: CommonJS modules<br><k>module.parent</k></h4><br>Deprecated: Please use <k>require.main</k> and<br><k>module.children</k> instead.<br><a href="https://nodejs.org/api/modules.html#the-module-object">&lt;module></a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type">&lt;null></a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type">&lt;undefined></a><br>The module that first required this one, or <k>null</k> if the current module is the entry point of the current process, or <k>undefined</k> if the module was loaded by something that is not a CommonJS module (E.G.: REPL or <k>import</k>).',
'<h4>Global Modules: CommonJS modules<br><k>module.path</k></h4><br><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;string></a><br>The directory name of the module.<br>This is usually the same as the<br><a href="path.html#pathdirnamepath"><k>path.dirname()</k></a> of the <k>module.id</k>.',
'<h4>Global Modules: CommonJS modules<br><k>module.paths</k></h4><br><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;string[]></a><br>The search paths for the module.',
'<h4>Global Modules: CommonJS modules<br><k>module.require(id)</k></h4><br><k>id</k> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type">&lt;string></a><br>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types">&lt;any></a> exported module content<br>The <k>module.require()</k> method provides a way to load a module as if<br><k>require()</k> was called from the original module.<br>In order to do this, it is necessary to get a reference to the <k>module</k> object.<br>Since <k>require()</k> returns the <k>module.exports</k>, and the <k>module</k> is typically<br><em>only</em> available within a specific module\'s code, it must be explicitly exported in order to be used.',
'<h3>Global Modules: CommonJS modules</h3><br>CommonJS modules are the original way to package JavaScript code for Node.js.<br>Node.js also supports the <a href="esm.html">ECMAScript modules</a> standard used by browsers and other JavaScript runtimes.<br>In Node.js, each file is treated as a separate module.<br>For example, consider a file named <k>foo.js</k>:<br><k>const circle = require(\'./circle.js\');<br>console.log(`The area of a circle of radius 4 is ${circle.area(4)}`);</k><br>On the first line, <k>foo.js</k> loads the module <k>circle.js</k> that is in the same directory as <k>foo.js</k>.<br>Here are the contents of <k>circle.js</k>:<br><k>const { PI } = Math;<br>exports.area = (r) => PI * r ** 2;<br>exports.circumference = (r) => 2 * PI * r;</k><br>The module <k>circle.js</k> has exported the functions <k>area()</k> and<br><k>circumference()</k>.<br>Functions and objects are added to the root of a module by specifying additional properties on the special <k>exports</k> object.<br>Variables local to the module will be private, because the module is wrapped in a function by Node.js (see module wrapper).<br>In this example, the variable <k>PI</k> is private to <k>circle.js</k>.<br>The <k>module.exports</k> property can be assigned a new value (such as a function or object).<br>Below, <k>bar.js</k> makes use of the <k>square</k> module, which exports a Square class:<br><k>const Square = require(\'./square.js\');<br>const mySquare = new Square(2);<br>console.log(`The area of mySquare is ${mySquare.area()}`);</k><br>The <k>square</k> module is defined in <k>square.js</k>:<br><k>// Assigning to exports will not modify module, must use module.exports module.exports = class Square {<br>  constructor(width) {<br>    this.width = width;<br>  }<br>  area() {<br>    return this.width ** 2;<br>  }<br>};</k><br>The CommonJS module system is implemented in the <a href="https://nodejs.org/api/module.html"><k>module</k> core module</a>.',
'<h3>Global Modules: CommonJS modules Enabling</h3><br>Node.js has two module systems: CommonJS modules and <a href="esm.html">ECMAScript modules</a>.<br>By default, Node.js will treat the following as CommonJS modules:<br>Files with a <k>.cjs</k> extension;<br>Files with a <k>.js</k> extension when the nearest parent <k>package.json</k> file contains a top-level field <a href="packages.html#type"><k>"type"</k></a> with a value of <k>"commonjs"</k>.<br>Files with a <k>.js</k> extension when the nearest parent <k>package.json</k> file doesn\'t contain a top-level field <a href="packages.html#type"><k>"type"</k></a>.<br>Package authors should include the <a href="packages.html#type"><k>"type"</k></a> field, even in packages where all sources are CommonJS.<br>Being explicit about the <k>type</k> of the package will make things easier for build tools and loaders to determine how the files in the package should be interpreted.<br>Files with an extension that is not <k>.mjs</k>, <k>.cjs</k>, <k>.json</k>, <k>.node</k>, or <k>.js</k><br>(when the nearest parent <k>package.json</k> file contains a top-level field<br><a href="packages.html#type"><k>"type"</k></a> with a value of <k>"module"</k>, those files will be recognized as CommonJS modules only if they are being included via <k>require()</k>, not when used as the command-line entry point of the program).<br>See <a href="packages.html#determining-module-system">Determining module system</a> for more details.<br>Calling <k>require()</k> always use the CommonJS module loader.<br>Calling <k>import()</k><br>always use the ECMAScript module loader.',
'<h3>Global Modules: CommonJS modules Accessing the main module</h3><br>When a file is run directly from Node.js, <k>require.main</k> is set to its<br><k>module</k>.<br>That means that it is possible to determine whether a file has been run directly by testing <k>require.main === module</k>.<br>For a file <k>foo.js</k>, this will be <k>true</k> if run via <k>node foo.js</k>, but<br><k>false</k> if run by <k>require(\'./foo\')</k>.<br>When the entry point is not a CommonJS module, <k>require.main</k> is <k>undefined</k>, and the main module is out of reach.',
'<h3>Global Modules: CommonJS modules Package manager tips</h3><br>The semantics of the Node.js <k>require()</k> function were designed to be general enough to support reasonable directory structures.<br>Package manager programs such as <k>dpkg</k>, <k>rpm</k>, and <k>npm</k> will hopefully find it possible to build native packages from Node.js modules without modification.<br>Below we give a suggested directory structure that could work:<br>Let\'s say that we wanted to have the folder at<br><k>/usr/lib/node/&lt;some-package>/&lt;some-version></k> hold the contents of a specific version of a package.<br>Packages can depend on one another.<br>In order to install package <k>foo</k>, it may be necessary to install a specific version of package <k>bar</k>.<br>The <k>bar</k> package may itself have dependencies, and in some cases, these may even collide or form cyclic dependencies.<br>Because Node.js looks up the <k>realpath</k> of any modules it loads (that is, it resolves symlinks) and then looks for their dependencies in <k>node_modules</k> folders, this situation can be resolved with the following architecture:<br><k>/usr/lib/node/foo/1.2.3/</k>: Contents of the <k>foo</k> package, version 1.2.3.<br><k>/usr/lib/node/bar/4.3.2/</k>: Contents of the <k>bar</k> package that <k>foo</k> depends on.<br><k>/usr/lib/node/foo/1.2.3/node_modules/bar</k>: Symbolic link to<br><k>/usr/lib/node/bar/4.3.2/</k>.<br><k>/usr/lib/node/bar/4.3.2/node_modules/*</k>: Symbolic links to the packages that<br><k>bar</k> depends on.<br>Thus, even if a cycle is encountered, or if there are dependency conflicts, every module will be able to get a version of its dependency that it can use.<br>When the code in the <k>foo</k> package does <k>require(\'bar\')</k>, it will get the version that is symlinked into <k>/usr/lib/node/foo/1.2.3/node_modules/bar</k>.<br>Then, when the code in the <k>bar</k> package calls <k>require(\'quux\')</k>, it\'ll get the version that is symlinked into<br><k>/usr/lib/node/bar/4.3.2/node_modules/quux</k>.<br>Furthermore, to make the module lookup process even more optimal, rather than putting packages directly in <k>/usr/lib/node</k>, we could put them in<br><k>/usr/lib/node_modules/&lt;name>/&lt;version></k>.<br>Then Node.js will not bother looking for missing dependencies in <k>/usr/node_modules</k> or <k>/node_modules</k>.<br>In order to make modules available to the Node.js REPL, it might be useful to also add the <k>/usr/lib/node_modules</k> folder to the <k>$NODE_PATH</k> environment variable.<br>Since the module lookups using <k>node_modules</k> folders are all relative, and based on the real path of the files making the calls to<br><k>require()</k>, the packages themselves can be anywhere.',
'<h3>Global Modules: CommonJS modules The <k>.mjs</k> extension</h3><br>Due to the synchronous nature of <k>require()</k>, it is not possible to use it to load ECMAScript module files.<br>Attempting to do so will throw a<br><a href="errors.html#err_require_esm"><k>ERR_REQUIRE_ESM</k></a> error.<br>Use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/import"><k>import()</k></a> instead.<br>The <k>.mjs</k> extension is reserved for <a href="esm.html">ECMAScript Modules</a> which cannot be loaded via <k>require()</k>.<br>See <a href="packages.html#determining-module-system">Determining module system</a> section for more info regarding which files are parsed as ECMAScript modules.',
'<h3>Global Modules: CommonJS modules All together</h3><br>To get the exact filename that will be loaded when <k>require()</k> is called, use the <k>require.resolve()</k> function.<br>Putting together all of the above, here is the high-level algorithm in pseudocode of what <k>require()</k> does:<br>require(X) from module at path Y<br>1. If X is a core module,<br>   a. return the core module<br>   b. STOP<br>2. If X begins with \'/\'<br>   a. set Y to be the filesystem root<br>3. If X begins with \'./\' or \'/\' or \'../\'<br>   a. LOAD_AS_FILE(Y + X)<br>   b. LOAD_AS_DIRECTORY(Y + X)<br>   c. THROW "not found"<br>4. If X begins with \'#\'<br>   a. LOAD_PACKAGE_IMPORTS(X, dirname(Y))<br>5. LOAD_PACKAGE_SELF(X, dirname(Y))<br>6. LOAD_NODE_MODULES(X, dirname(Y))<br>7. THROW "not found"<br>LOAD_AS_FILE(X)<br>1. If X is a file, load X as its file extension format.<br>STOP<br>2. If X.js is a file, load X.js as JavaScript text.<br>STOP<br>3. If X.json is a file, parse X.json to a JavaScript Object.<br>STOP<br>4. If X.node is a file, load X.node as binary addon.<br>STOP<br>LOAD_INDEX(X)<br>1. If X/index.js is a file, load X/index.js as JavaScript text.<br>STOP<br>2. If X/index.json is a file, parse X/index.json to a JavaScript object.<br>STOP<br>3. If X/index.node is a file, load X/index.node as binary addon.<br>STOP<br>LOAD_AS_DIRECTORY(X)<br>1. If X/package.json is a file,<br>   a. Parse X/package.json, and look for "main" field.<br>   b. If "main" is a falsy value, GOTO 2.<br>   c. let M = X + (json main field)<br>   d. LOAD_AS_FILE(M)<br>   e. LOAD_INDEX(M)<br>   f. LOAD_INDEX(X) DEPRECATED<br>   g. THROW "not found"<br>2. LOAD_INDEX(X)<br>LOAD_NODE_MODULES(X, START)<br>1. let DIRS = NODE_MODULES_PATHS(START)<br>2. for each DIR in DIRS:<br>   a.LOAD_PACKAGE_EXPORTS(X, DIR)<br>   b.LOAD_AS_FILE(DIR/X)<br>   c.LOAD_AS_DIRECTORY(DIR/X)<br>NODE_MODULES_PATHS(START)<br>1. let PARTS = path split(START)<br>2. let I = count of PARTS - 1<br>3. let DIRS = []<br>4. while I >= 0,<br>   a.if PARTS[I] = "node_modules" CONTINUE<br>   b.DIR = path join(PARTS[0 ..<br>I] + "node_modules")<br>   c.DIRS = DIR + DIRS<br>   d.let I = I - 1<br>5. return DIRS + GLOBAL_FOLDERS<br>LOAD_PACKAGE_IMPORTS(X, DIR)<br>1. Find the closest package scope SCOPE to DIR.<br>2. If no scope was found, return.<br>3. If the SCOPE/package.json "imports" is null or undefined, return.<br>4. let MATCH = PACKAGE_IMPORTS_RESOLVE(X, pathToFileURL(SCOPE),<br>  ["node", "require"]) <a href="esm.md#resolver-algorithm-specification">defined in the ESM resolver</a>.<br>5. RESOLVE_ESM_MATCH(MATCH).<br>LOAD_PACKAGE_EXPORTS(X, DIR)<br>1. Try to interpret X as a combination of NAME and SUBPATH where the name may have a @scope/ prefix and the subpath begins with a slash (`/`).<br>2. If X does not match this pattern or DIR/NAME/package.json is not a file, return.<br>3. Parse DIR/NAME/package.json, and look for "exports" field.<br>4. If "exports" is null or undefined, return.<br>5. let MATCH = PACKAGE_EXPORTS_RESOLVE(pathToFileURL(DIR/NAME), "." + SUBPATH, `package.json` "exports", ["node", "require"]) <a href="esm.md#resolver-algorithm-specification">defined in the ESM resolver</a>.<br>6. RESOLVE_ESM_MATCH(MATCH)<br>LOAD_PACKAGE_SELF(X, DIR)<br>1. Find the closest package scope SCOPE to DIR.<br>2. If no scope was found, return.<br>3. If the SCOPE/package.json "exports" is null or undefined, return.<br>4. If the SCOPE/package.json "name" is not the first segment of X, return.<br>5. let MATCH = PACKAGE_EXPORTS_RESOLVE(pathToFileURL(SCOPE), "." + X.slice("name".length), `package.json` "exports", ["node", "require"]) <a href="esm.md#resolver-algorithm-specification">defined in the ESM resolver</a>.<br>6. RESOLVE_ESM_MATCH(MATCH)<br>RESOLVE_ESM_MATCH(MATCH)<br>1. let RESOLVED_PATH = fileURLToPath(MATCH)<br>2. If the file at RESOLVED_PATH exists, load RESOLVED_PATH as its extension format.<br>STOP<br>3. THROW "not found"',
'<h3>Global Modules: CommonJS modules Caching</h3><br>Modules are cached after the first time they are loaded.<br>This means (among other things) that every call to <k>require(\'foo\')</k> will get exactly the same object returned, if it would resolve to the same file.<br>Provided <k>require.cache</k> is not modified, multiple calls to <k>require(\'foo\')</k> will not cause the module code to be executed multiple times.<br>This is an important feature.<br>With it, "partially done" objects can be returned, thus allowing transitive dependencies to be loaded even when they would cause cycles.<br>To have a module execute code multiple times, export a function, and call that function.',
'<h3>Global Modules: CommonJS modules Core modules</h3><br>Node.js has several modules compiled into the binary.<br>These modules are described in greater detail elsewhere in this documentation.<br>The core modules are defined within the Node.js source and are located in the<br><k>lib/</k> folder.<br>Core modules can be identified using the <k>node:</k> prefix, in which case it bypasses the <k>require</k> cache.<br>For instance, <k>require(\'node:http\')</k> will always return the built in HTTP module, even if there is <k>require.cache</k> entry by that name.<br>Some core modules are always preferentially loaded if their identifier is passed to <k>require()</k>.<br>For instance, <k>require(\'http\')</k> will always return the built-in HTTP module, even if there is a file by that name.<br>The list of core modules that can be loaded without using the <k>node:</k> prefix is exposed as <a href="https://nodejs.org/api/module.html#modulebuiltinmodules"><k>module.builtinModules</k></a>.',
'<h3>Global Modules: CommonJS modules Cycles</h3><br>When there are circular <k>require()</k> calls, a module might not have finished executing when it is returned.<br>Consider this situation:<br><k>a.js</k>:<br><k>console.log(\'a starting\');<br>exports.done = false;<br>const b = require(\'./b.js\');<br>console.log(\'in a, b.done = %j\', b.done);<br>exports.done = true;<br>console.log(\'a done\');</k><br><k>b.js</k>:<br><k>console.log(\'b starting\');<br>exports.done = false;<br>const a = require(\'./a.js\');<br>console.log(\'in b, a.done = %j\', a.done);<br>exports.done = true;<br>console.log(\'b done\');</k><br><k>main.js</k>:<br><k>console.log(\'main starting\');<br>const a = require(\'./a.js\');<br>const b = require(\'./b.js\');<br>console.log(\'in main, a.done = %j, b.done = %j\', a.done, b.done);</k><br>When <k>main.js</k> loads <k>a.js</k>, then <k>a.js</k> in turn loads <k>b.js</k>.<br>At that point, <k>b.js</k> tries to load <k>a.js</k>.<br>In order to prevent an infinite loop, an <strong>unfinished copy</strong> of the <k>a.js</k> exports object is returned to the<br><k>b.js</k> module.<br><k>b.js</k> then finishes loading, and its <k>exports</k> object is provided to the <k>a.js</k> module.<br>By the time <k>main.js</k> has loaded both modules, they\'re both finished.<br>The output of this program would thus be:<br><k>$ node main.js main starting a starting b starting in b, a.done = false b done in a, b.done = true a done in main, a.done = true, b.done = true</k><br>Careful planning is required to allow cyclic module dependencies to work correctly within an application.',
'<h3>Global Modules: CommonJS modules File modules</h3><br>If the exact filename is not found, then Node.js will attempt to load the required filename with the added extensions: <k>.js</k>, <k>.json</k>, and finally<br><k>.node</k>.<br>When loading a file that has a different extension (e.g.<br><k>.cjs</k>), its full name must be passed to <k>require()</k>, including its file extension (e.g.<br><k>require(\'./file.cjs\')</k>).<br><k>.json</k> files are parsed as JSON text files, <k>.node</k> files are interpreted as compiled addon modules loaded with <k>process.dlopen()</k>.<br>Files using any other extension (or no extension at all) are parsed as JavaScript text files.<br>Refer to the <a href="packages.html#determining-module-system">Determining module system</a> section to understand what parse goal will be used.<br>A required module prefixed with <k>\'/\'</k> is an absolute path to the file.<br>For example, <k>require(\'/home/marco/foo.js\')</k> will load the file at<br><k>/home/marco/foo.js</k>.<br>A required module prefixed with <k>\'./\'</k> is relative to the file calling<br><k>require()</k>.<br>That is, <k>circle.js</k> must be in the same directory as <k>foo.js</k> for<br><k>require(\'./circle\')</k> to find it.<br>Without a leading <k>\'/\'</k>, <k>\'./\'</k>, or <k>\'../\'</k> to indicate a file, the module must either be a core module or is loaded from a <k>node_modules</k> folder.<br>If the given path does not exist, <k>require()</k> will throw a<br><a href="errors.html#module_not_found"><k>MODULE_NOT_FOUND</k></a> error.',
'<h3>Global Modules: CommonJS modules Folders as modules</h3><br>There are three ways in which a folder may be passed to <k>require()</k> as an argument.<br>The first is to create a <a href="packages.html#nodejs-packagejson-field-definitions"><k>package.json</k></a> file in the root of the folder,<br>which specifies a <k>main</k> module.<br>An example <a href="packages.html#nodejs-packagejson-field-definitions"><k>package.json</k></a> file might look like this:<br><k>{ "name" : "some-library",<br>  "main" : "./lib/some-library.js" }</k><br>If this was in a folder at <k>./some-library</k>, then<br><k>require(\'./some-library\')</k> would attempt to load<br><k>./some-library/lib/some-library.js</k>.<br>If there is no <a href="packages.html#nodejs-packagejson-field-definitions"><k>package.json</k></a> file present in the directory, or if the<br><a href="packages.html#main"><k>"main"</k></a> entry is missing or cannot be resolved, then Node.js will attempt to load an <k>index.js</k> or <k>index.node</k> file out of that directory.<br>For example, if there was no <a href="packages.html#nodejs-packagejson-field-definitions"><k>package.json</k></a> file in the previous example, then <k>require(\'./some-library\')</k> would attempt to load:<br><k>./some-library/index.js</k><br><k>./some-library/index.node</k><br>If these attempts fail, then Node.js will report the entire module as missing with the default error:<br><k>Error: Cannot find module \'some-library\'</k><br>In all three above cases, an <k>import(\'./some-library\')</k> call would result in a<br><a href="errors.html#err_unsupported_dir_import"><k>ERR_UNSUPPORTED_DIR_IMPORT</k></a> error.<br>Using package <a href="packages.html#subpath-exports">subpath exports</a> or<br><a href="packages.html#subpath-imports">subpath imports</a> can provide the same containment organization benefits as folders as modules, and work for both <k>require</k> and <k>import</k>.',
'<h3>Global Modules: CommonJS modules Loading from <k>node_modules</k> folders</h3><br>If the module identifier passed to <k>require()</k> is not a core module, and does not begin with <k>\'/\'</k>, <k>\'../\'</k>, or<br><k>\'./\'</k>, then Node.js starts at the directory of the current module, and adds <k>/node_modules</k>, and attempts to load the module from that location.<br>Node.js will not append <k>node_modules</k> to a path already ending in<br><k>node_modules</k>.<br>If it is not found there, then it moves to the parent directory, and so on, until the root of the file system is reached.<br>For example, if the file at <k>\'/home/ry/projects/foo.js\'</k> called<br><k>require(\'bar.js\')</k>, then Node.js would look in the following locations, in this order:<br><k>/home/ry/projects/node_modules/bar.js</k><br><k>/home/ry/node_modules/bar.js</k><br><k>/home/node_modules/bar.js</k><br><k>/node_modules/bar.js</k><br>This allows programs to localize their dependencies, so that they do not clash.<br>It is possible to require specific files or sub modules distributed with a module by including a path suffix after the module name.<br>For instance<br><k>require(\'example-module/path/to/file\')</k> would resolve <k>path/to/file</k><br>relative to where <k>example-module</k> is located.<br>The suffixed path follows the same module resolution semantics.',
'<h3>Global Modules: CommonJS modules Loading from the global folders</h3><br>If the <k>NODE_PATH</k> environment variable is set to a colon-delimited list of absolute paths, then Node.js will search those paths for modules if they are not found elsewhere.<br>On Windows, <k>NODE_PATH</k> is delimited by semicolons (<k>;</k>) instead of colons.<br><k>NODE_PATH</k> was originally created to support loading modules from varying paths before the current module resolution algorithm was defined.<br><k>NODE_PATH</k> is still supported, but is less necessary now that the Node.js ecosystem has settled on a convention for locating dependent modules.<br>Sometimes deployments that rely on <k>NODE_PATH</k> show surprising behavior when people are unaware that <k>NODE_PATH</k> must be set.<br>Sometimes a module\'s dependencies change, causing a different version (or even a different module) to be loaded as the <k>NODE_PATH</k> is searched.<br>Additionally, Node.js will search in the following list of GLOBAL_FOLDERS:<br>1: <k>$HOME/.node_modules</k><br>2: <k>$HOME/.node_libraries</k><br>3: <k>$PREFIX/lib/node</k><br>Where <k>$HOME</k> is the user\'s home directory, and <k>$PREFIX</k> is the Node.js configured <k>node_prefix</k>.<br>These are mostly for historic reasons.<br>It is strongly encouraged to place dependencies in the local <k>node_modules</k><br>folder.<br>These will be loaded faster, and more reliably.',
'<h3>Global Modules: CommonJS modules The module wrapper</h3><br>Before a module\'s code is executed, Node.js will wrap it with a function wrapper that looks like the following:<br><k>(function(exports, require, module, __filename, __dirname) {<br>// Module code actually lives in here<br>});</k><br>By doing this, Node.js achieves a few things:<br>It keeps top-level variables (defined with <k>var</k>, <k>const</k>, or <k>let</k>) scoped to the module rather than the global object.<br>It helps to provide some global-looking variables that are actually specific to the module, such as:<br>The <k>module</k> and <k>exports</k> objects that the implementor can use to export values from the module.<br>The convenience variables <k>__filename</k> and <k>__dirname</k>, containing the module\'s absolute filename and directory path.<br>',
'<h3>Global Modules: CommonJS modules The <k>module</k> object</h3><br><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">&lt;Object></a><br>In each module, the <k>module</k> free variable is a reference to the object representing the current module.<br>For convenience, <k>module.exports</k> is also accessible via the <k>exports</k> module-global.<br><k>module</k> is not actually a global but rather local to each module.',
'<h3>Global Modules: CommonJS modules The <k>Module</k> object</h3><br>This section was moved to<br><a href="https://nodejs.org/api/module.html#the-module-object">Modules: <k>module</k> core module</a>.<br><a href="https://nodejs.org/api/module.html#modulebuiltinmodules"><k>module.builtinModules</k></a><br><a href="https://nodejs.org/api/module.html#modulecreaterequirefilename"><k>module.createRequire(filename)</k></a><br><a href="https://nodejs.org/api/module.html#modulesyncbuiltinesmexports"><k>module.syncBuiltinESMExports()</k></a>',
'<h3>Global Modules: CommonJS modules Source map v3 support</h3><br>This section was moved to<br><a href="https://nodejs.org/api/module.html#source-map-v3-support">Modules: <k>module</k> core module</a>.<br><a href="https://nodejs.org/api/module.html#modulefindsourcemappath"><k>module.findSourceMap(path)</k></a><br><a href="https://nodejs.org/api/module.html#class-modulesourcemap">Class: <k>module.SourceMap</k></a><br><a href="https://nodejs.org/api/module.html#new-sourcemappayload"><k>new SourceMap(payload)</k></a><br><a href="https://nodejs.org/api/module.html#sourcemappayload"><k>sourceMap.payload</k></a><br><a href="https://nodejs.org/api/module.html#sourcemapfindentrylinenumber-columnnumber"><k>sourceMap.findEntry(lineNumber, columnNumber)</k></a>',
'<h3>JavaScript Promises</h3><br>"Producing code" is code that can take some time<br>"Consuming code" is code that must wait for the result<br>A Promise is a JavaScript object that links producing code and consuming code<br>A JavaScript Promise object contains both the producing code and calls to the consuming code:<br>let myPromise = new Promise(function(myResolve, myReject) {<br>// "Producing Code" (May take some time)<br>  myResolve(); // when successful<br>  myReject();  // when error<br>});<br>// "Consuming Code" (Must wait for a fulfilled Promise)<br>myPromise.then(<br>  function(value) { /* code if successful */ },<br>  function(error) { /* code if some error */ }<br>);<br>how to use a Promise:<br>myPromise.then(<br>  function(value) { /* code if successful */ },<br>  function(error) { /* code if some error */ }<br>);<br>Promise.then() takes two arguments, a callback for success and another for failure.<br>Both are optional, so you can add a callback for success or failure only.<br><br>Example<br>function getFile(myCallback) {<br>  let req = new XMLHttpRequest();<br>  req.open(\'GET\', "mycar.html");<br>  req.onload = function() {<br>    if (req.status == 200) {<br>      myCallback(req.responseText);<br>    } else {<br>      myCallback("Error: " + req.status);<br>    }<br>  }<br>  req.send();<br>}<br>getFile(myDisplayer);<br>',
'<k>count the number of div elements inside a container</k><br>use the querySelectorAll() method and the length property.<br><br>// Get the reference to the container element<br>const container = document.querySelector(\'#your-container-id\');<br><br>// Get the count of div elements inside the container<br>const divCount = container.querySelectorAll(\'div\').length;<br><br>console.log(\'Number of div elements inside the container:\', divCount);<br><br><k>To jump to the nth child element inside a div</k><br>use the childNodes property and the querySelector() method.<br><br>// Get the reference to the div element<br>const divElement = document.querySelector(\'#your-div-id\');<br><br>// Get the nth child element inside the div<br>const nthChild = divElement.childNodes[n];<br><br>// Scroll to the nth child element<br>nthChild.scrollIntoView({ behavior: \'smooth\' });',
'to chop a string by space character:\n  str = "123 r"\n  myArray = str.split(" ");  // ["123", "r"]\nto chop an array of strings by space character:\n  str = ["123 r", "456 t"]\n  myArray = str.map(item => item.split(" ")[0]); // ["123", "456"]\n\n',
'to join array into one string with space separated\n  str = ["123", "456"]\n  myArray = str.join(" ") // "123 456"',

];
bookid = "C Tips"
initSelectRange = 50
